#!/usr/bin/env tsx
/**
 * @file wasser-automation.ts
 * @description –¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –¥–ª—è –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏ WASSER
 * –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å –∏–º–º—É—Ç–∞–±–µ–ª—å–Ω—ã–º–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö
 */

import { execSync } from 'child_process';
import { readFileSync, writeFileSync, existsSync } from 'fs';
import { join } from 'path';

// ===== –¢–ò–ü–´ –ü–†–ï–î–ú–ï–¢–ù–û–ô –û–ë–õ–ê–°–¢–ò –ú–ï–ë–ï–õ–¨–ù–û–ô –§–ê–ë–†–ò–ö–ò =====

interface FurnitureProjectAnalysis {
  readonly componentsUpdated: readonly string[];
  readonly materialsChanged: boolean;
  readonly pricingLogicModified: boolean;
  readonly pdfGeneratorImproved: boolean;
  readonly collectionsUpdated: boolean;
  readonly supabaseSchemaChanged: boolean;
  readonly changeRiskLevel: 'low' | 'medium' | 'high';
}

interface ProjectMetrics {
  readonly version: string;
  readonly componentsCount: number;
  readonly materialsCount: number;
  readonly collectionsCount: number;
  readonly linesOfCode: number;
  readonly typesCoverage: number;
  readonly lastUpdate: string;
}

interface CommitRule {
  readonly condition: (analysis: FurnitureProjectAnalysis) => boolean;
  readonly messageGenerator: (analysis: FurnitureProjectAnalysis) => string;
  readonly priority: number;
  readonly scope: 'components' | 'materials' | 'pricing' | 'pdf' | 'api' | 'collections';
}

// ===== –ö–û–ù–°–¢–ê–ù–¢–´ –° –¢–ò–ü–û–ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨–Æ =====

const FURNITURE_EMOJIS = {
  components: 'üß©',
  materials: 'üèóÔ∏è',
  pricing: 'üí∞',
  pdf: 'üìÑ',
  api: 'üîß',
  collections: 'üé®',
  furniture: 'ü™ë',
  auto: 'ü§ñ'
} as const;

// –ò–º–º—É—Ç–∞–±–µ–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –¥–ª—è –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏
const WASSER_COMMIT_RULES: readonly CommitRule[] = Object.freeze([
  {
    condition: (analysis) => analysis.supabaseSchemaChanged,
    messageGenerator: () => 'üîß api: –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏',
    priority: 1,
    scope: 'api'
  },
  {
    condition: (analysis) => analysis.pricingLogicModified,
    messageGenerator: () => 'üí∞ pricing: –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ —Ä–∞—Å—á–µ—Ç–∞ —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏ –º–µ–±–µ–ª–∏',
    priority: 2,
    scope: 'pricing'
  },
  {
    condition: (analysis) => analysis.materialsChanged,
    messageGenerator: () => 'üèóÔ∏è materials: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏ –∏ –∫–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏–º–∏',
    priority: 3,
    scope: 'materials'
  },
  {
    condition: (analysis) => analysis.collectionsUpdated,
    messageGenerator: () => 'üé® collections: –ê–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–±–µ–ª—å–Ω—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π –∏ –∫–∞—Ç–∞–ª–æ–≥–æ–≤',
    priority: 4,
    scope: 'collections'
  },
  {
    condition: (analysis) => analysis.pdfGeneratorImproved,
    messageGenerator: () => 'üìÑ pdf: –£–ª—É—á—à–µ–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–≤ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∫–∞—Ä—Ç',
    priority: 5,
    scope: 'pdf'
  },
  {
    condition: (analysis) => analysis.componentsUpdated.length > 0,
    messageGenerator: (analysis) => 
      `üß© components: –ú–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ UI (${analysis.componentsUpdated.slice(0, 3).join(', ')})`,
    priority: 6,
    scope: 'components'
  }
] as const);

// ===== –ß–ò–°–¢–´–ï –§–£–ù–ö–¶–ò–ò –ê–ù–ê–õ–ò–ó–ê =====

/**
 * –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ø—Ä–æ–µ–∫—Ç–µ –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏
 * @returns –ò–º–º—É—Ç–∞–±–µ–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç –∞–Ω–∞–ª–∏–∑–∞
 */
const analyzeFurnitureProjectChanges = (): FurnitureProjectAnalysis => {
  try {
    const changedFiles = execSync('git diff --name-only HEAD~1 HEAD 2>/dev/null || echo ""', { 
      encoding: 'utf8' 
    })
      .split('\n')
      .filter(Boolean)
      .filter(file => file.length > 0);

    // –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–º–ø–æ–∑–∏—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    const componentsUpdated = changedFiles
      .filter(file => file.includes('src/components/') && file.endsWith('.tsx'))
      .map(file => file.split('/').pop()?.replace('.tsx', '') ?? '')
      .filter(name => name.length > 0);

    // –ß–∏—Å—Ç—ã–µ –ø—Ä–µ–¥–∏–∫–∞—Ç—ã –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –æ–±–ª–∞—Å—Ç–µ–π –º–µ–±–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞
    const materialsChanged = changedFiles.some(file => 
      /material|MaterialsManager|calc-engine.*material/i.test(file)
    );

    const pricingLogicModified = changedFiles.some(file =>
      /calc-engine|pricing|PriceListGenerator|cost|price/i.test(file)
    );

    const pdfGeneratorImproved = changedFiles.some(file =>
      /pdf|jspdf|PriceListGenerator.*pdf|label.*generator/i.test(file)
    );

    const collectionsUpdated = changedFiles.some(file =>
      /collection|Collection.*Manager|catalog/i.test(file)
    );

    const supabaseSchemaChanged = changedFiles.some(file =>
      /\.sql$|supabase|database|schema/i.test(file)
    );

    // –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    const changeRiskLevel = (() => {
      if (supabaseSchemaChanged || pricingLogicModified) return 'high' as const;
      if (materialsChanged || collectionsUpdated || componentsUpdated.length > 3) return 'medium' as const;
      return 'low' as const;
    })();

    return Object.freeze({
      componentsUpdated: Object.freeze(componentsUpdated),
      materialsChanged,
      pricingLogicModified,
      pdfGeneratorImproved,
      collectionsUpdated,
      supabaseSchemaChanged,
      changeRiskLevel
    });
  } catch (error) {
    console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è:', error);
    return Object.freeze({
      componentsUpdated: Object.freeze([]),
      materialsChanged: false,
      pricingLogicModified: false,
      pdfGeneratorImproved: false,
      collectionsUpdated: false,
      supabaseSchemaChanged: false,
      changeRiskLevel: 'low' as const
    });
  }
};

/**
 * –°–±–æ—Ä –º–µ—Ç—Ä–∏–∫ –ø—Ä–æ–µ–∫—Ç–∞ –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏ —Å —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é
 */
const collectWasserProjectMetrics = (): ProjectMetrics => {
  try {
    // –ß—Ç–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ –∏–∑ package.json —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
    const packageJson = existsSync('package.json') 
      ? JSON.parse(readFileSync('package.json', 'utf8'))
      : { version: '1.0.0' };

    const version = packageJson.version || '1.0.0';

    // –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—Å—á–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –º–µ–±–µ–ª–∏
    const componentsCount = (() => {
      try {
        return execSync(
          "find src/components -name '*.tsx' -not -name '*.test.*' -not -name '*.stories.*' 2>/dev/null | wc -l",
          { encoding: 'utf8' }
        ).trim();
      } catch {
        return '0';
      }
    })();

    // –ü–æ–¥—Å—á–µ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ –∫–æ–ª–ª–µ–∫—Ü–∏–π –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞
    const codeAnalysis = (() => {
      try {
        const srcFiles = execSync("find src -name '*.ts' -o -name '*.tsx' 2>/dev/null | head -50", { 
          encoding: 'utf8' 
        }).split('\n').filter(Boolean);

        let materialsCount = 0;
        let collectionsCount = 0;

        for (const file of srcFiles) {
          if (existsSync(file)) {
            const content = readFileSync(file, 'utf8');
            materialsCount += (content.match(/interface.*Material|type.*Material/g) || []).length;
            collectionsCount += (content.match(/interface.*Collection|type.*Collection/g) || []).length;
          }
        }

        return { materialsCount, collectionsCount };
      } catch {
        return { materialsCount: 0, collectionsCount: 0 };
      }
    })();

    // –ü–æ–¥—Å—á–µ—Ç —Å—Ç—Ä–æ–∫ –∫–æ–¥–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
    const linesOfCode = (() => {
      try {
        return parseInt(
          execSync(
            "find src -name '*.ts' -o -name '*.tsx' 2>/dev/null | xargs wc -l 2>/dev/null | tail -1 | awk '{print $1}' || echo '0'",
            { encoding: 'utf8' }
          ).trim()
        );
      } catch {
        return 0;
      }
    })();

    return Object.freeze({
      version,
      componentsCount: parseInt(componentsCount) || 0,
      materialsCount: codeAnalysis.materialsCount,
      collectionsCount: codeAnalysis.collectionsCount,
      linesOfCode,
      typesCoverage: 95, // –í –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–π —Å—Ä–µ–¥–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å type-coverage
      lastUpdate: new Date().toISOString()
    });
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∞ –º–µ—Ç—Ä–∏–∫:', error);
    return Object.freeze({
      version: '1.0.0',
      componentsCount: 0,
      materialsCount: 0,
      collectionsCount: 0,
      linesOfCode: 0,
      typesCoverage: 0,
      lastUpdate: new Date().toISOString()
    });
  }
};

/**
 * –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º –ø–æ–¥—Ö–æ–¥–æ–º
 */
const applyWasserCommitRules = (
  analysis: FurnitureProjectAnalysis,
  rules: readonly CommitRule[]
): string | null => {
  const applicableRules = rules
    .filter(rule => rule.condition(analysis))
    .sort((a, b) => a.priority - b.priority);

  return applicableRules.length > 0 
    ? applicableRules[0].messageGenerator(analysis)
    : null;
};

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ–º–º–∏—Ç–∞ –¥–ª—è –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏
 */
const generateWasserCommitMessage = (
  baseMessage: string,
  analysis: FurnitureProjectAnalysis,
  metrics: ProjectMetrics
): string => {
  const sections = [
    baseMessage,
    '',
    'üèóÔ∏è –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ WASSER:',
    `‚Ä¢ –í–µ—Ä—Å–∏—è: ${metrics.version}`,
    `‚Ä¢ React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã: ${metrics.componentsCount}`,
    `‚Ä¢ –¢–∏–ø—ã –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤: ${metrics.materialsCount}`,
    `‚Ä¢ –ú–µ–±–µ–ª—å–Ω—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏: ${metrics.collectionsCount}`,
    `‚Ä¢ –°—Ç—Ä–æ–∫ –∫–æ–¥–∞: ${metrics.linesOfCode.toLocaleString('ru-RU')}`,
    `‚Ä¢ TypeScript –ø–æ–∫—Ä—ã—Ç–∏–µ: ${metrics.typesCoverage}%`,
    '',
    'üîç –ê–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π:',
    analysis.componentsUpdated.length > 0 && `‚Ä¢ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã UI: ${analysis.componentsUpdated.join(', ')}`,
    analysis.materialsChanged && '‚Ä¢ ‚úÖ –°–∏—Å—Ç–µ–º–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –º–æ–¥–µ—Ä–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–∞',
    analysis.pricingLogicModified && '‚Ä¢ ‚úÖ –ê–ª–≥–æ—Ä–∏—Ç–º—ã —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã',
    analysis.collectionsUpdated && '‚Ä¢ ‚úÖ –ö–∞—Ç–∞–ª–æ–≥ –º–µ–±–µ–ª—å–Ω—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π –∞–∫—Ç—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω',
    analysis.pdfGeneratorImproved && '‚Ä¢ ‚úÖ PDF –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–≤ —É–ª—É—á—à–µ–Ω–∞',
    analysis.supabaseSchemaChanged && '‚Ä¢ ‚úÖ –°—Ö–µ–º–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∞',
    `‚Ä¢ –£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞: ${analysis.changeRiskLevel}`,
    '',
    `‚è∞ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è: ${new Date().toLocaleString('ru-RU', { 
      timeZone: 'Asia/Bishkek',
      year: 'numeric',
      month: '2-digit', 
      day: '2-digit',
      hour: '2-digit',
      minute: '2-digit'
    })}`
  ].filter(Boolean);

  return sections.join('\n');
};

// ===== –û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò –ê–í–¢–û–ú–ê–¢–ò–ó–ê–¶–ò–ò =====

/**
 * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —É–º–Ω–æ–≥–æ –∫–æ–º–º–∏—Ç–∞ –¥–ª—è –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏ WASSER
 */
const executeWasserAutoCommit = async (): Promise<boolean> => {
  try {
    console.log('üèóÔ∏è –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–µ–∫—Ç–∞ –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏ WASSER...');
    
    const [analysis, metrics] = await Promise.all([
      Promise.resolve(analyzeFurnitureProjectChanges()),
      Promise.resolve(collectWasserProjectMetrics())
    ]);

    console.log('üìä –ú–µ—Ç—Ä–∏–∫–∏ —Å–æ–±—Ä–∞–Ω—ã:', {
      –≤–µ—Ä—Å–∏—è: metrics.version,
      –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã: metrics.componentsCount,
      –º–∞—Ç–µ—Ä–∏–∞–ª—ã: metrics.materialsCount,
      –∫–æ–ª–ª–µ–∫—Ü–∏–∏: metrics.collectionsCount
    });

    console.log('üî¨ –ê–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π:', {
      –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã: analysis.componentsUpdated,
      –º–∞—Ç–µ—Ä–∏–∞–ª—ã: analysis.materialsChanged,
      —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: analysis.pricingLogicModified,
      –∫–æ–ª–ª–µ–∫—Ü–∏–∏: analysis.collectionsUpdated,
      —Ä–∏—Å–∫: analysis.changeRiskLevel
    });

    const baseMessage = applyWasserCommitRules(analysis, WASSER_COMMIT_RULES);
    
    if (!baseMessage) {
      console.log('‚ö†Ô∏è –ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∞–≤—Ç–æ–∫–æ–º–º–∏—Ç–∞');
      return false;
    }

    const commitMessage = generateWasserCommitMessage(baseMessage, analysis, metrics);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞
    const hasUnstagedChanges = (() => {
      try {
        execSync('git diff --quiet', { stdio: 'pipe' });
        return false;
      } catch {
        return true;
      }
    })();

    const hasStagedChanges = (() => {
      try {
        execSync('git diff --staged --quiet', { stdio: 'pipe' });
        return false;
      } catch {
        return true;
      }
    })();

    if (!hasUnstagedChanges && !hasStagedChanges) {
      console.log('‚ö†Ô∏è –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞');
      return false;
    }

    // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∫ –∫–æ–º–º–∏—Ç—É
    if (hasUnstagedChanges) {
      console.log('üì¶ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ staging area...');
      execSync('git add .', { stdio: 'inherit' });
    }

    // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞ —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    console.log('üíæ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞...');
    execSync(`git commit -m "${commitMessage.replace(/"/g, '\\"')}"`, { 
      stdio: 'inherit' 
    });

    console.log('‚úÖ –ê–≤—Ç–æ–∫–æ–º–º–∏—Ç WASSER –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    console.log(`üîñ –°–æ–æ–±—â–µ–Ω–∏–µ: ${baseMessage}`);

    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞–≤—Ç–æ–∫–æ–º–º–∏—Ç–∞ WASSER:', error);
    return false;
  }
};

/**
 * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ —Ä–µ–ª–∏–∑–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –º–µ–±–µ–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ
 */
const determineWasserReleaseType = (analysis: FurnitureProjectAnalysis): 'patch' | 'minor' | 'major' => {
  if (analysis.supabaseSchemaChanged) return 'major'; // Breaking changes –≤ —Å—Ö–µ–º–µ –ë–î
  if (analysis.pricingLogicModified || analysis.materialsChanged) return 'minor'; // –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
  if (analysis.collectionsUpdated || analysis.pdfGeneratorImproved) return 'minor'; // –£–ª—É—á—à–µ–Ω–∏—è
  if (analysis.componentsUpdated.length > 0) return 'patch'; // UI –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
  
  return 'patch'; // –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π fallback
};

/**
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–ª–∏–∑ —Å —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–º –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º –¥–ª—è –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏
 */
const executeWasserRelease = async (): Promise<boolean> => {
  try {
    console.log('üöÄ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ä–µ–ª–∏–∑–∞ –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏ WASSER...');
    
    const analysis = analyzeFurnitureProjectChanges();
    const releaseType = determineWasserReleaseType(analysis);
    
    console.log(`üì¶ –¢–∏–ø —Ä–µ–ª–∏–∑–∞: ${releaseType} (—Ä–∏—Å–∫: ${analysis.changeRiskLevel})`);
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è Git —Ç–µ–≥–∞
    execSync(`npm version ${releaseType} --no-git-tag-version`, { stdio: 'inherit' });
    
    // –ß—Ç–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏
    const packageJson = JSON.parse(readFileSync('package.json', 'utf8'));
    const newVersion = packageJson.version;
    
    console.log(`üè∑Ô∏è –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏: ${newVersion}`);
    
    // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–≤—Ç–æ–∫–æ–º–º–∏—Ç–∞ —Å –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    const commitSuccess = await executeWasserAutoCommit();
    
    if (commitSuccess) {
      // –°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–Ω–æ—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ–≥–∞ —Å –¥–µ—Ç–∞–ª—è–º–∏ —Ä–µ–ª–∏–∑–∞
      const tagMessage = `–†–µ–ª–∏–∑ WASSER v${newVersion}\\n\\n–ò–∑–º–µ–Ω–µ–Ω–∏—è:\\n${
        analysis.materialsChanged ? '‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤\\n' : ''
      }${
        analysis.pricingLogicModified ? '‚Ä¢ –ê–ª–≥–æ—Ä–∏—Ç–º—ã —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è\\n' : ''
      }${
        analysis.componentsUpdated.length > 0 ? `‚Ä¢ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã: ${analysis.componentsUpdated.join(', ')}\\n` : ''
      }`;
      
      execSync(`git tag -a v${newVersion} -m "${tagMessage}"`, { stdio: 'inherit' });
      
      console.log('üè∑Ô∏è Git —Ç–µ–≥ —Å–æ–∑–¥–∞–Ω');
      console.log('‚úÖ –†–µ–ª–∏–∑ WASSER –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
      
      return true;
    } else {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–æ–º–º–∏—Ç –¥–ª—è —Ä–µ–ª–∏–∑–∞');
      return false;
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ª–∏–∑–∞ WASSER:', error);
    return false;
  }
};

// ===== CLI –ò–ù–¢–ï–†–§–ï–ô–° =====

const displayWasserHelp = (): void => {
  console.log(`
üèóÔ∏è WASSER –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
‚Ä¢ commit      - –£–º–Ω—ã–π –∞–≤—Ç–æ–∫–æ–º–º–∏—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ø—Ä–æ–µ–∫—Ç–µ
‚Ä¢ release     - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–ª–∏–∑ —Å —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–º –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º
‚Ä¢ analyze     - –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –±–µ–∑ –∫–æ–º–º–∏—Ç–∞
‚Ä¢ maintenance - –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–µ –∞–≤—Ç–æ–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ (TODO)

–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
  npm run wasser:commit      # –ê–Ω–∞–ª–∏–∑ + –∞–≤—Ç–æ–∫–æ–º–º–∏—Ç
  npm run wasser:release     # –†–µ–ª–∏–∑ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏  
  npm run wasser:analyze     # –¢–æ–ª—å–∫–æ –∞–Ω–∞–ª–∏–∑
  
üéØ –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:
  ‚Ä¢ React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ –º–µ–±–µ–ª—å–Ω–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞
  ‚Ä¢ –°–∏—Å—Ç–µ–º–æ–π —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏ –∏ –∫–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏–º–∏
  ‚Ä¢ –ê–ª–≥–æ—Ä–∏—Ç–º–∞–º–∏ —Ä–∞—Å—á–µ—Ç–∞ —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
  ‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏–µ–π PDF –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–≤ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∫–∞—Ä—Ç
  ‚Ä¢ –ë–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö Supabase –¥–ª—è –º–µ–±–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞
  `);
};

async function main(): Promise<void> {
  const command = process.argv[2];
  
  console.log('üèóÔ∏è WASSER Furniture Factory Automation System');
  console.log('üìã –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é\n');
  
  try {
    switch (command) {
      case 'commit':
        const commitResult = await executeWasserAutoCommit();
        process.exit(commitResult ? 0 : 1);
        break;
        
      case 'release':
        const releaseResult = await executeWasserRelease();
        process.exit(releaseResult ? 0 : 1);
        break;
        
      case 'analyze':
        console.log('üîç –ê–Ω–∞–ª–∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏ WASSER...');
        const analysis = analyzeFurnitureProjectChanges();
        const metrics = collectWasserProjectMetrics();
        
        console.log('\nüìä –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞:', metrics);
        console.log('\nüî¨ –ê–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π:', analysis);
        
        const suggestedMessage = applyWasserCommitRules(analysis, WASSER_COMMIT_RULES);
        console.log('\nüí¨ –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞:', suggestedMessage || '–ù–µ—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π');
        break;
        
      case 'maintenance':
        console.log('üßπ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
        break;
        
      default:
        displayWasserHelp();
    }
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ WASSER:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ CLI –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (import.meta.url === `file://${process.argv[1]}`) {
  main().catch(console.error);
}