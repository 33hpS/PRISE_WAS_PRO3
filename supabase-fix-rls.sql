-- üö® –≠–ö–°–¢–†–ï–ù–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π —Ä–µ–∫—É—Ä—Å–∏–∏ –≤ RLS –ø–æ–ª–∏—Ç–∏–∫–∞—Ö

-- 1. –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å–µ RLS –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è user_roles
DROP POLICY IF EXISTS "Users can view own role" ON public.user_roles;
DROP POLICY IF EXISTS "Only authenticated users can view roles" ON public.user_roles;
DROP POLICY IF EXISTS "Admins can manage all roles" ON public.user_roles;
DROP POLICY IF EXISTS "Users can read own role" ON public.user_roles;
DROP POLICY IF EXISTS "Admins can update roles" ON public.user_roles;

-- 2. –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º RLS –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
ALTER TABLE public.user_roles DISABLE ROW LEVEL SECURITY;

-- 3. –û—á–∏—â–∞–µ–º –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
DROP TABLE IF EXISTS public.user_roles CASCADE;

CREATE TABLE public.user_roles (
    id uuid DEFAULT gen_random_uuid() PRIMARY KEY,
    user_id uuid REFERENCES auth.users(id) ON DELETE CASCADE,
    role text CHECK (role IN ('admin', 'manager')) DEFAULT 'manager',
    created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,
    updated_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,
    UNIQUE(user_id)
);

-- 4. –°–æ–∑–¥–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
CREATE OR REPLACE FUNCTION public.get_user_role(check_user_id uuid DEFAULT NULL)
RETURNS text
LANGUAGE plpgsql
SECURITY DEFINER
SET search_path = public
AS $$
DECLARE
    target_user_id uuid;
    user_role text;
BEGIN
    -- –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π ID –∏–ª–∏ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    target_user_id := COALESCE(check_user_id, auth.uid());
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω
    IF target_user_id IS NULL THEN
        RETURN 'manager'; -- –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
    END IF;
    
    -- –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ë–ï–ó –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è RLS
    SELECT role INTO user_role 
    FROM public.user_roles 
    WHERE user_id = target_user_id;
    
    -- –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–æ–ª—å –∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    RETURN COALESCE(user_role, 'manager');
END;
$$;

-- 5. –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∞
CREATE OR REPLACE FUNCTION public.is_admin(check_user_id uuid DEFAULT NULL)
RETURNS boolean
LANGUAGE plpgsql
SECURITY DEFINER
SET search_path = public
AS $$
BEGIN
    RETURN public.get_user_role(check_user_id) = 'admin';
END;
$$;

-- 6. –í–∫–ª—é—á–∞–µ–º RLS —Å –ë–ï–ó–û–ü–ê–°–ù–´–ú–ò –ø–æ–ª–∏—Ç–∏–∫–∞–º–∏
ALTER TABLE public.user_roles ENABLE ROW LEVEL SECURITY;

-- 7. –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏ –ë–ï–ó —Ä–µ–∫—É—Ä—Å–∏–∏

-- –ü–æ–ª–∏—Ç–∏–∫–∞ SELECT: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤–∏–¥—è—Ç —Ç–æ–ª—å–∫–æ —Å–≤–æ—é —Ä–æ–ª—å
CREATE POLICY "users_can_view_own_role" ON public.user_roles
    FOR SELECT 
    USING (user_id = auth.uid());

-- –ü–æ–ª–∏—Ç–∏–∫–∞ INSERT: —Ç–æ–ª—å–∫–æ —Å–µ—Ä–≤–∏—Å–Ω–∞—è —Ä–æ–ª—å –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∑–∞–ø–∏—Å–∏
CREATE POLICY "service_role_can_insert" ON public.user_roles
    FOR INSERT 
    WITH CHECK (true); -- –ë—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å service role key

-- –ü–æ–ª–∏—Ç–∏–∫–∞ UPDATE: —Ç–æ–ª—å–∫–æ —Å–µ—Ä–≤–∏—Å–Ω–∞—è —Ä–æ–ª—å –º–æ–∂–µ—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å
CREATE POLICY "service_role_can_update" ON public.user_roles
    FOR UPDATE 
    USING (true) 
    WITH CHECK (true); -- –ë—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å service role key

-- –ü–æ–ª–∏—Ç–∏–∫–∞ DELETE: —Ç–æ–ª—å–∫–æ —Å–µ—Ä–≤–∏—Å–Ω–∞—è —Ä–æ–ª—å –º–æ–∂–µ—Ç —É–¥–∞–ª—è—Ç—å
CREATE POLICY "service_role_can_delete" ON public.user_roles
    FOR DELETE 
    USING (true); -- –ë—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å service role key

-- 8. –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —Ñ—É–Ω–∫—Ü–∏–∏
GRANT EXECUTE ON FUNCTION public.get_user_role(uuid) TO authenticated;
GRANT EXECUTE ON FUNCTION public.is_admin(uuid) TO authenticated;
GRANT EXECUTE ON FUNCTION public.get_user_role(uuid) TO anon;
GRANT EXECUTE ON FUNCTION public.is_admin(uuid) TO anon;

-- 9. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—è–º–∏ (–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç)
DO $$
DECLARE
    admin_id uuid;
    manager_id uuid;
BEGIN
    -- –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ email
    SELECT id INTO admin_id FROM auth.users WHERE email = 'admin@wasser.com' LIMIT 1;
    SELECT id INTO manager_id FROM auth.users WHERE email = 'manager@wasser.com' LIMIT 1;
    
    -- –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–ª–∏ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–∞–π–¥–µ–Ω—ã
    IF admin_id IS NOT NULL THEN
        INSERT INTO public.user_roles (user_id, role)
        VALUES (admin_id, 'admin')
        ON CONFLICT (user_id) DO UPDATE SET 
            role = EXCLUDED.role,
            updated_at = NOW();
    END IF;
    
    IF manager_id IS NOT NULL THEN
        INSERT INTO public.user_roles (user_id, role)
        VALUES (manager_id, 'manager')
        ON CONFLICT (user_id) DO UPDATE SET 
            role = EXCLUDED.role,
            updated_at = NOW();
    END IF;
END $$;

-- 10. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü—ã –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø—É—Å—Ç—ã
DO $$
BEGIN
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
    IF NOT EXISTS (SELECT 1 FROM public.materials LIMIT 1) THEN
        INSERT INTO public.materials (name, unit, price) VALUES
        ('–õ–î–°–ü 16–º–º –ë–µ–ª—ã–π', '–º2', 472.95),
        ('–ö—Ä–æ–º–∫–∞ –ë–µ–ª–∞—è 1/19', '–º', 5.4),
        ('–ü–µ—Ç–ª—è –Ω–∞–∫–ª–∞–¥–Ω–∞—è', '—à—Ç', 45.0),
        ('–†—É—á–∫–∞ –º–µ–±–µ–ª—å–Ω–∞—è', '—à—Ç', 120.0),
        ('–°–∞–º–æ—Ä–µ–∑ 4x16', '—à—Ç', 0.5);
    END IF;
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Ç–∏–ø—ã –ø—Ä–æ–¥—É–∫—Ü–∏–∏
    IF NOT EXISTS (SELECT 1 FROM public.product_types LIMIT 1) THEN
        INSERT INTO public.product_types (name) VALUES
        ('–ó–µ—Ä–∫–∞–ª–æ'),
        ('–ü–µ–Ω–∞–ª'),
        ('–¢—É–º–±–∞'),
        ('–ü–æ–ª–∫–∞'),
        ('–®–∫–∞—Ñ');
    END IF;
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    IF NOT EXISTS (SELECT 1 FROM public.collections LIMIT 1) THEN
        INSERT INTO public.collections (name, description) VALUES
        ('–ö–ª–∞—Å—Å–∏–∫', '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è –º–µ–±–µ–ª–∏'),
        ('–ú–æ–¥–µ—Ä–Ω', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è'),
        ('–ì—Ä–∞—Ü–∏—è', '–≠–ª–µ–≥–∞–Ω—Ç–Ω–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è');
    END IF;
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ø—Ä–æ–¥—É–∫—Ü–∏—è
    IF NOT EXISTS (SELECT 1 FROM public.products LIMIT 1) THEN
        INSERT INTO public.products (name, type, collection, category, total_cost, markup, base_price, article) VALUES
        ('–ó–µ—Ä–∫–∞–ª–æ –ö–ª–∞—Å—Å–∏–∫ 80', '–ó–µ—Ä–∫–∞–ª–æ', '–ö–ª–∞—Å—Å–∏–∫', '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã', 2500, 500, 3000, 'ZK-80'),
        ('–ü–µ–Ω–∞–ª –ì—Ä–∞—Ü–∏—è 35', '–ü–µ–Ω–∞–ª', '–ì—Ä–∞—Ü–∏—è', '–•—Ä–∞–Ω–µ–Ω–∏–µ', 4500, 1000, 5500, 'PG-35'),
        ('–¢—É–º–±–∞ –ú–æ–¥–µ—Ä–Ω 60', '–¢—É–º–±–∞', '–ú–æ–¥–µ—Ä–Ω', '–û—Å–Ω–æ–≤–Ω–∞—è', 6000, 1500, 7500, 'TM-60');
    END IF;
END $$;

-- 11. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
SELECT 'RLS policies fixed successfully' as status;