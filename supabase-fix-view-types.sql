-- üîß –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã product_view_types
-- –í—ã–ø–æ–ª–Ω–∏—Ç–µ –≤ Supabase SQL Editor

BEGIN;

-- 1. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Ç–∞–±–ª–∏—Ü—É –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã
DROP TABLE IF EXISTS public.product_view_types CASCADE;

-- 2. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –∑–∞–Ω–æ–≤–æ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
CREATE TABLE public.product_view_types (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    name TEXT NOT NULL UNIQUE,
    description TEXT,
    labor_cost NUMERIC(10,2) DEFAULT 0,
    category TEXT DEFAULT 'standard',
    base_price NUMERIC(10,2) DEFAULT 0,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 3. –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ —Ç–∏–ø—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
INSERT INTO public.product_view_types (name, description, labor_cost, category, base_price) VALUES
('–û–±—ã—á–Ω–∞—è', '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ', 500.00, 'standard', 1000.00),
('–° –ø–æ–¥—Å–≤–µ—Ç–∫–æ–π', '–° LED –ø–æ–¥—Å–≤–µ—Ç–∫–æ–π', 800.00, 'led', 1500.00),
('–ö—Ä–∞—à', '–ö—Ä–∞–∫–µ–ª—é—Ä–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ', 1200.00, 'crash', 2000.00),
('–ü—Ä–µ–º–∏—É–º', '–ü—Ä–µ–º–∏–∞–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ', 1500.00, 'premium', 2500.00),
('–≠–∫–æ–Ω–æ–º', '–≠–∫–æ–Ω–æ–º–∏—á–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç', 300.00, 'economy', 800.00);

-- 4. –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
CREATE OR REPLACE FUNCTION public.update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ language 'plpgsql';

-- 5. –°–æ–∑–¥–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è updated_at
CREATE TRIGGER update_product_view_types_updated_at 
    BEFORE UPDATE ON public.product_view_types 
    FOR EACH ROW 
    EXECUTE FUNCTION public.update_updated_at_column();

-- 6. –í–∫–ª—é—á–∞–µ–º RLS
ALTER TABLE public.product_view_types ENABLE ROW LEVEL SECURITY;

-- 7. –°–æ–∑–¥–∞–µ–º –ø–æ–ª–∏—Ç–∏–∫–∏ RLS
CREATE POLICY "Everyone can read product view types" ON public.product_view_types
    FOR SELECT USING (true);

CREATE POLICY "Authenticated users can manage product view types" ON public.product_view_types
    FOR ALL USING (auth.role() = 'authenticated');

-- 8. –î–∞–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —Ç–∞–±–ª–∏—Ü—É
GRANT ALL ON public.product_view_types TO authenticated;
GRANT SELECT ON public.product_view_types TO anon;

-- 9. –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
CREATE INDEX idx_product_view_types_name ON public.product_view_types(name);
CREATE INDEX idx_product_view_types_category ON public.product_view_types(category);

COMMIT;

-- 10. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
SELECT 
    'product_view_types' as table_name,
    COUNT(*) as total_records,
    string_agg(DISTINCT category, ', ') as categories,
    MIN(labor_cost) as min_labor_cost,
    MAX(labor_cost) as max_labor_cost
FROM public.product_view_types;

-- 11. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏
SELECT * FROM public.product_view_types ORDER BY category, name;

-- 12. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
SELECT labor_cost FROM public.product_view_types WHERE name = '–û–±—ã—á–Ω–∞—è';
SELECT * FROM public.product_view_types ORDER BY category ASC;
SELECT * FROM public.product_view_types WHERE id = (SELECT id FROM public.product_view_types LIMIT 1);