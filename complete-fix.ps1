# =====================================================
# üîß WASSER Complete Syntax Fix & Architecture Script
# –ü–æ–ª–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
# =====================================================

param(
    [switch]$DryRun = $false,
    [switch]$Backup = $true,
    [string]$ProjectRoot = ".",
    [switch]$Force = $false
)

function Write-Safe {
    param([string]$Message, [string]$Type = 'Info')
    $prefix = switch ($Type) {
        'Success' { '‚úÖ' }
        'Warning' { '‚ö†Ô∏è' }
        'Error' { '‚ùå' }
        'Info' { '‚ÑπÔ∏è' }
        'Title' { 'üéØ' }
        default { '‚ÑπÔ∏è' }
    }
    Write-Host "$prefix $Message"
}

function Backup-File {
    param([string]$FilePath)
    if ($Backup -and (Test-Path $FilePath) -and (-not $DryRun)) {
        $backupPath = "$FilePath.backup.$(Get-Date -Format 'yyyyMMdd_HHmmss')"
        Copy-Item $FilePath $backupPath
        Write-Safe "üíæ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: $backupPath" 'Info'
    }
}

function Set-FileContent {
    param([string]$Path, [string]$Content)
    if (-not $DryRun) {
        $dir = Split-Path $Path -Parent
        if ((-not (Test-Path $dir)) -and $dir) {
            New-Item -Path $dir -ItemType Directory -Force | Out-Null
        }
        Set-Content -Path $Path -Value $Content -Encoding UTF8
    }
    Write-Safe "‚úÖ –§–∞–π–ª —Å–æ–∑–¥–∞–Ω: $Path" 'Success'
}

Write-Safe "WASSER Complete Syntax Fix & Architecture Script" 'Title'
Write-Safe "==================================================" 'Title'

if ($DryRun) {
    Write-Safe "üîç –†–µ–∂–∏–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (DryRun) - —Ñ–∞–π–ª—ã –Ω–µ –±—É–¥—É—Ç –∏–∑–º–µ–Ω–µ–Ω—ã" 'Warning'
}

# =====================================================
# –≠—Ç–∞–ø 1: –ü–æ–ª–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
# =====================================================

Write-Safe ""
Write-Safe "–≠—Ç–∞–ø 1: –ü–æ–ª–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ TypeScript —Ñ–∞–π–ª–æ–≤..." 'Title'

$tsFiles = Get-ChildItem -Path "$ProjectRoot/src" -Include "*.ts", "*.tsx" -Recurse
$totalErrors = 0
$fixedFiles = @()

foreach ($file in $tsFiles) {
    if (Test-Path $file.FullName) {
        $content = Get-Content $file.FullName -Raw
        
        # –ü–æ–∏—Å–∫ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ —Å #
        $hashMatches = [regex]::Matches($content, '^\s*#\s*', [Text.RegularExpressions.RegexOptions]::Multiline)
        
        if ($hashMatches.Count -gt 0) {
            Write-Safe "‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã # –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ $($file.Name): $($hashMatches.Count)" 'Warning'
            $totalErrors += $hashMatches.Count
            $fixedFiles += $file.FullName
            
            if (-not $DryRun) {
                Backup-File $file.FullName
                $fixedContent = [regex]::Replace($content, '^\s*#\s*', '//', [Text.RegularExpressions.RegexOptions]::Multiline)
                Set-Content -Path $file.FullName -Value $fixedContent -Encoding UTF8
                Write-Safe "‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω $($file.Name)" 'Success'
            }
        }
    }
}

if ($totalErrors -eq 0) {
    Write-Safe "‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å –≤—Å–µ—Ö TypeScript —Ñ–∞–π–ª–æ–≤ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω" 'Success'
} else {
    Write-Safe "‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ $totalErrors –æ—à–∏–±–æ–∫ –≤ $($fixedFiles.Count) —Ñ–∞–π–ª–∞—Ö" 'Success'
}

# =====================================================
# –≠—Ç–∞–ø 2: –°–æ–∑–¥–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã Dashboard
# =====================================================

Write-Safe ""
Write-Safe "–≠—Ç–∞–ø 2: –°–æ–∑–¥–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã Dashboard..." 'Title'

# Dashboard Types
$DashboardTypes = @'
/**
 * @file types/dashboard/types.ts
 * @description –¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ç–∏–ø–æ–≤ –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞ –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏ WASSER
 */

import React from 'react'

// ===========================
// üéØ –û–°–ù–û–í–ù–´–ï –¢–ò–ü–´ –î–ê–®–ë–û–†–î–ê
// ===========================

/** –î–æ–ø—É—Å—Ç–∏–º—ã–µ –≤–∫–ª–∞–¥–∫–∏ –¥–∞—à–±–æ—Ä–¥–∞ */
export type DashboardTab =
  | 'overview'
  | 'generator'
  | 'labels'
  | 'upload'
  | 'materials'
  | 'products'
  | 'collections'
  | 'types'
  | 'paint'
  | 'markup'
  | 'sinks'
  | 'sets'
  | 'history'
  | 'users'

/** –†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */
export type UserRole = 'admin' | 'manager' | 'user'

/** –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ä–æ–ª—å—é */
export interface UserWithRole {
  readonly id: string
  readonly email: string
  readonly role: UserRole
  readonly name?: string
  readonly permissions?: readonly string[]
}

/** –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∞—à–±–æ—Ä–¥–∞ */
export interface DashboardStats {
  readonly materials: number
  readonly products: number
  readonly collections: number
  readonly priceLists: number
  readonly lastUpdated?: Date
}

/** –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∞—à–±–æ—Ä–¥–∞ */
export interface DashboardState {
  readonly activeTab: DashboardTab
  readonly stats: DashboardStats
  readonly statsLoading: boolean
  readonly user: UserWithRole | null
  readonly loading: boolean
  readonly error: string | null
}

/** –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ —Å —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é */
export interface TabDefinition {
  readonly key: DashboardTab
  readonly label: string
  readonly icon: React.ReactNode
  readonly description: string
  readonly adminOnly: boolean
  readonly requiredPermissions?: readonly string[]
  readonly component: React.ComponentType
}

/** –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ */
export interface PerformanceMetrics {
  readonly loadTime: number
  readonly tabSwitchTime: number
  readonly lastUpdate: Date
  readonly memoryUsage?: number
}

// ===========================
// üè≠ –ú–ï–ë–ï–õ–¨–ù–ê–Ø –§–ê–ë–†–ò–ö–ê –¢–ò–ü–´
// ===========================

/** –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –º–µ–±–µ–ª–∏ */
export interface FurnitureMaterial {
  readonly id: string
  readonly name: string
  readonly price: number
  readonly unit: string
  readonly category: 'wood' | 'metal' | 'fabric' | 'hardware' | 'finish' | 'glass'
  readonly consumptionCoeff: number
  readonly isActive: boolean
  readonly supplier?: string
}

/** –ö–æ–ª–ª–µ–∫—Ü–∏–∏ –º–µ–±–µ–ª–∏ */
export interface FurnitureCollection {
  readonly id: string
  readonly name: string
  readonly multiplier: number
  readonly description: string
  readonly isActive: boolean
  readonly style: '–∫–ª–∞—Å—Å–∏–∫' | '–º–æ–¥–µ—Ä–Ω' | '–ª–æ—Ñ—Ç' | '–ø—Ä–æ–≤–∞–Ω—Å' | '—Å–∫–∞–Ω–¥–∏–Ω–∞–≤—Å–∫–∏–π'
}

/** –ò–∑–¥–µ–ª–∏–µ –º–µ–±–µ–ª–∏ */
export interface FurnitureProduct {
  readonly id: string
  readonly article: string
  readonly name: string
  readonly collection: string
  readonly basePrice: number
  readonly category: '—Å—Ç–æ–ª—ã' | '—Å—Ç—É–ª—å—è' | '—à–∫–∞—Ñ—ã' | '–∫—Ä–æ–≤–∞—Ç–∏' | '–∫–æ–º–æ–¥—ã' | '–¥—Ä—É–≥–æ–µ'
  readonly materials: readonly string[]
  readonly dimensions: {
    readonly width: number
    readonly height: number
    readonly depth: number
  }
  readonly isActive: boolean
  readonly description?: string
}
'@

Set-FileContent "$ProjectRoot/src/types/dashboard/types.ts" $DashboardTypes

# Dashboard Context —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º –ø–æ–¥—Ö–æ–¥–æ–º
$DashboardContext = @'
/**
 * @file context/dashboard/DashboardContext.tsx
 * @description –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–∞—à–±–æ—Ä–¥–∞ —Å —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é –∏ –º–µ–º–æ–∏–∑–∞—Ü–∏–µ–π
 */

import React, { createContext, useContext, useState, useCallback, useMemo, useEffect, ReactNode } from 'react'
import type { DashboardState, UserWithRole, DashboardTab, DashboardStats } from '../../types/dashboard/types'

// ===========================
// üéØ –¢–ò–ü–´ –ö–û–ù–¢–ï–ö–°–¢–ê
// ===========================

interface DashboardContextValue {
  readonly state: DashboardState
  readonly isAdmin: boolean
  readonly actions: {
    readonly setLoading: (loading: boolean) => void
    readonly setUser: (user: UserWithRole | null) => void
    readonly setActiveTab: (tab: DashboardTab) => void
    readonly setStats: (stats: DashboardStats) => void
    readonly setError: (error: string | null) => void
    readonly initializeState: () => void
  }
  readonly metrics: {
    readonly data: {
      readonly loadTime: number
      readonly tabSwitchTime: number
      readonly lastUpdate: Date
    }
    readonly startTimer: () => number
    readonly endTimer: (startTime: number, operation: string) => number
  }
}

// ===========================
// üåê –ö–û–ù–¢–ï–ö–°–¢ –ò –ü–†–û–í–ê–ô–î–ï–†
// ===========================

const DashboardContext = createContext<DashboardContextValue | null>(null)

interface DashboardProviderProps {
  readonly children: ReactNode
}

export const DashboardProvider: React.FC<DashboardProviderProps> = React.memo(({ children }) => {
  // –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  const [state, setState] = useState<DashboardState>(() => ({
    activeTab: 'overview',
    stats: { materials: 1248, products: 342, collections: 28, priceLists: 156 },
    statsLoading: false,
    user: null,
    loading: false,
    error: null
  }))

  // –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  const [metrics, setMetrics] = useState({
    loadTime: 0,
    tabSwitchTime: 0,
    lastUpdate: new Date()
  })

  // ===========================
  // üîß –ú–ï–ú–û–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –î–ï–ô–°–¢–í–ò–Ø
  // ===========================

  const actions = useMemo(() => ({
    setLoading: (loading: boolean) => {
      setState(prev => ({ ...prev, loading }))
    },
    
    setUser: (user: UserWithRole | null) => {
      setState(prev => ({ ...prev, user, loading: false }))
    },
    
    setActiveTab: (tab: DashboardTab) => {
      const startTime = performance.now()
      setState(prev => ({ ...prev, activeTab: tab }))
      
      // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ localStorage
      try {
        localStorage.setItem('wasser:dashboard:active-tab', tab)
      } catch (error) {
        console.warn('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏:', error)
      }
      
      // –ú–µ—Ç—Ä–∏–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
      requestAnimationFrame(() => {
        const endTime = performance.now()
        const switchTime = endTime - startTime
        setMetrics(prev => ({
          ...prev,
          tabSwitchTime: switchTime,
          lastUpdate: new Date()
        }))
      })
    },
    
    setStats: (stats: DashboardStats) => {
      setState(prev => ({ ...prev, stats: { ...stats, lastUpdated: new Date() } }))
    },
    
    setError: (error: string | null) => {
      setState(prev => ({ ...prev, error, loading: false }))
    },
    
    initializeState: () => {
      // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
      try {
        const savedTab = localStorage.getItem('wasser:dashboard:active-tab') as DashboardTab
        if (savedTab) {
          setState(prev => ({ ...prev, activeTab: savedTab }))
        }
      } catch (error) {
        console.warn('–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è:', error)
      }
      
      // –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ localStorage
      try {
        const testUser = localStorage.getItem('test-user')
        if (testUser) {
          const parsed = JSON.parse(testUser)
          if (parsed?.authenticated) {
            setState(prev => ({ ...prev, user: {
              id: parsed.id || 'test-user',
              email: parsed.email || 'admin@wasser.com',
              role: parsed.role || 'admin',
              name: parsed.name
            }}))
          }
        }
      } catch (error) {
        console.warn('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error)
      }
    }
  }), [])

  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –ø—Ä–∞–≤
  const isAdmin = useMemo(() => {
    if (!state.user) return false
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏
    if (state.user.role === 'admin') return true
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ email
    const adminEmails = ['admin@wasser.com', 'sherhan1988hp@gmail.com']
    if (state.user.email && adminEmails.includes(state.user.email)) return true
    
    return false
  }, [state.user])

  // –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  const metricsActions = useMemo(() => ({
    data: metrics,
    startTimer: () => performance.now(),
    endTimer: (startTime: number, operation: string) => {
      const duration = performance.now() - startTime
      setMetrics(prev => ({
        ...prev,
        [operation === 'load' ? 'loadTime' : 'tabSwitchTime']: duration,
        lastUpdate: new Date()
      }))
      console.log(`‚ö° Dashboard ${operation}: ${duration.toFixed(2)}ms`)
      return duration
    }
  }), [metrics])

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    const initTimer = performance.now()
    actions.initializeState()
    
    // –ú–µ—Ç—Ä–∏–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏
    requestAnimationFrame(() => {
      metricsActions.endTimer(initTimer, 'load')
    })
  }, [actions, metricsActions])

  const contextValue: DashboardContextValue = useMemo(() => ({
    state,
    isAdmin,
    actions,
    metrics: metricsActions
  }), [state, isAdmin, actions, metricsActions])

  return (
    <DashboardContext.Provider value={contextValue}>
      {children}
    </DashboardContext.Provider>
  )
})

DashboardProvider.displayName = 'DashboardProvider'

// ===========================
// üé£ –•–£–ö –î–õ–Ø –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø –ö–û–ù–¢–ï–ö–°–¢–ê
// ===========================

export const useDashboard = (): DashboardContextValue => {
  const context = useContext(DashboardContext)
  
  if (!context) {
    throw new Error('useDashboard –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤–Ω—É—Ç—Ä–∏ DashboardProvider')
  }
  
  return context
}
'@

Set-FileContent "$ProjectRoot/src/context/dashboard/DashboardContext.tsx" $DashboardContext

# DashboardHeader —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º –ø–æ–¥—Ö–æ–¥–æ–º
$DashboardHeader = @'
/**
 * @file components/Dashboard/DashboardHeader.tsx
 * @description –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —à–∞–ø–∫–∞ –¥–∞—à–±–æ—Ä–¥–∞ —Å –º–µ–º–æ–∏–∑–∞—Ü–∏–µ–π –∏ —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é
 */

import React, { useCallback } from 'react'
import { Button } from '../ui/button'
import { Card } from '../ui/card'
import { LogOut, Settings, User as UserIcon } from 'lucide-react'
import { useDashboard } from '../../context/dashboard/DashboardContext'

// ===========================
// üé® –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–´–ô –ö–û–ú–ü–û–ù–ï–ù–¢ –®–ê–ü–ö–ò
// ===========================

export const DashboardHeader: React.FC = React.memo(() => {
  const { state, isAdmin } = useDashboard()

  // –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã—Ö–æ–¥–∞
  const handleLogout = useCallback(async () => {
    try {
      // –û—á–∏—Å—Ç–∫–∞ localStorage
      const keysToRemove = ['test-user', 'supabase-user', 'wasser:dashboard:active-tab']
      keysToRemove.forEach(key => {
        try {
          localStorage.removeItem(key)
        } catch (error) {
          console.warn(`–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–ª—é—á–∞ ${key}:`, error)
        }
      })

      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
      window.location.href = '/login'
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ:', error)
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
      window.location.href = '/login'
    }
  }, [])

  return (
    <header className="sticky top-0 z-50 w-full border-b bg-white/95 backdrop-blur supports-[backdrop-filter]:bg-white/60">
      <div className="container mx-auto px-4">
        <div className="flex h-16 items-center justify-between">
          
          {/* –õ–æ–≥–æ—Ç–∏–ø –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ */}
          <div className="flex items-center space-x-4">
            <div className="flex items-center space-x-2">
              <div className="flex h-8 w-8 items-center justify-center rounded-md bg-blue-600 text-white font-bold">
                W
              </div>
              <div>
                <div className="font-semibold text-gray-900">WASSER</div>
                <div className="text-xs text-gray-500">–ú–µ–±–µ–ª—å–Ω–∞—è –§–∞–±—Ä–∏–∫–∞</div>
              </div>
            </div>
          </div>

          {/* –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è */}
          <nav className="hidden md:flex items-center space-x-6">
            <span className="text-sm text-gray-600">–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</span>
            {isAdmin && (
              <span className="inline-flex items-center px-2 py-1 rounded-full text-xs bg-blue-100 text-blue-800">
                <Settings className="w-3 h-3 mr-1" />
                –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
              </span>
            )}
          </nav>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –≤—ã—Ö–æ–¥ */}
          <div className="flex items-center space-x-4">
            
            {/* –ö–∞—Ä—Ç–æ—á–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
            <Card className="px-3 py-1.5 hidden sm:flex items-center space-x-2 border-gray-200">
              <UserIcon className="w-4 h-4 text-gray-600" />
              <div className="text-xs">
                <div 
                  className="font-medium text-gray-900 truncate max-w-[120px]" 
                  title={state.user?.email || '–ì–æ—Å—Ç—å'}
                >
                  {state.user?.email || '–ì–æ—Å—Ç—å'}
                </div>
                <div className="text-gray-500">
                  {state.user?.role || 'no-role'}
                </div>
              </div>
            </Card>

            {/* –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ */}
            <Button
              variant="outline"
              onClick={handleLogout}
              className="bg-transparent hover:bg-red-50 hover:border-red-200 hover:text-red-700 transition-colors"
              title="–í—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã"
            >
              <LogOut className="w-4 h-4 mr-2" />
              <span className="hidden md:inline">–í—ã–π—Ç–∏</span>
            </Button>
          </div>
        </div>
      </div>
    </header>
  )
})

DashboardHeader.displayName = 'DashboardHeader'
'@

Set-FileContent "$ProjectRoot/src/components/Dashboard/DashboardHeader.tsx" $DashboardHeader

# DashboardTabs —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–æ–º
$DashboardTabs = @'
/**
 * @file components/Dashboard/DashboardTabs.tsx
 * @description –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –≤–∫–ª–∞–¥–∫–∞–º —Å –º–µ–º–æ–∏–∑–∞—Ü–∏–µ–π
 */

import React, { useCallback } from 'react'
import type { DashboardTab, TabDefinition } from '../../types/dashboard/types'
import { useDashboard } from '../../context/dashboard/DashboardContext'

// ===========================
// üéØ –ò–ù–¢–ï–†–§–ï–ô–°–´ –ö–û–ú–ü–û–ù–ï–ù–¢–û–í
// ===========================

interface TabButtonProps {
  readonly tab: TabDefinition
  readonly isActive: boolean
  readonly onClick: (key: DashboardTab) => void
}

interface DashboardTabsProps {
  readonly tabDefinitions: readonly TabDefinition[]
}

// ===========================
// üé® –ú–ï–ú–û–ò–ó–ò–†–û–í–ê–ù–ù–ê–Ø –ö–ù–û–ü–ö–ê –í–ö–õ–ê–î–ö–ò
// ===========================

const TabButton: React.FC<TabButtonProps> = React.memo(({ tab, isActive, onClick }) => {
  const handleClick = useCallback(() => {
    onClick(tab.key)
  }, [tab.key, onClick])

  return (
    <button
      type="button"
      onClick={handleClick}
      className={`
        inline-flex items-center gap-2 px-3 py-1.5 text-sm font-medium
        border rounded-md transition-all duration-200
        focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-500
        ${
          isActive
            ? 'bg-blue-50 border-blue-200 text-blue-700 shadow-sm'
            : 'bg-white border-gray-200 text-gray-700 hover:bg-gray-50 hover:border-gray-300'
        }
      `}
      title={tab.description}
      aria-current={isActive ? 'page' : undefined}
    >
      {tab.icon}
      <span>{tab.label}</span>
    </button>
  )
})

TabButton.displayName = 'TabButton'

// ===========================
// üé® –û–°–ù–û–í–ù–û–ô –ö–û–ú–ü–û–ù–ï–ù–¢ –ù–ê–í–ò–ì–ê–¶–ò–ò
// ===========================

export const DashboardTabs: React.FC<DashboardTabsProps> = React.memo(({ tabDefinitions }) => {
  const { state, actions, isAdmin, metrics } = useDashboard()

  // –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –≤–∫–ª–∞–¥–æ–∫ –ø–æ –ø—Ä–∞–≤–∞–º –¥–æ—Å—Ç—É–ø–∞
  const availableTabs = React.useMemo(() => {
    return tabDefinitions.filter(tab => !tab.adminOnly || isAdmin)
  }, [tabDefinitions, isAdmin])

  // –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–º–µ–Ω—ã –≤–∫–ª–∞–¥–∫–∏ —Å –º–µ—Ç—Ä–∏–∫–∞–º–∏
  const handleTabChange = useCallback((tabKey: DashboardTab) => {
    const startTime = metrics.startTimer()
    
    actions.setActiveTab(tabKey)
    
    // –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    requestAnimationFrame(() => {
      metrics.endTimer(startTime, 'tabSwitch')
    })
  }, [actions, metrics])

  // –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
  const activeTabDefinition = React.useMemo(() => {
    return availableTabs.find(tab => tab.key === state.activeTab) || availableTabs[0]
  }, [availableTabs, state.activeTab])

  if (availableTabs.length === 0) {
    return null
  }

  return (
    <div className="mb-6">
      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –≤–∫–ª–∞–¥–∫–∞–º */}
      <div className="flex flex-wrap gap-2 mb-4">
        {availableTabs.map(tab => (
          <TabButton
            key={tab.key}
            tab={tab}
            isActive={tab.key === state.activeTab}
            onClick={handleTabChange}
          />
        ))}
      </div>

      {/* –•–ª–µ–±–Ω—ã–µ –∫—Ä–æ—à–∫–∏ —Å —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é */}
      <div className="flex items-center space-x-2 text-sm text-gray-600">
        <span>–ì–ª–∞–≤–Ω–∞—è</span>
        <span className="text-gray-400">/</span>
        <span className="font-medium text-gray-900">
          {activeTabDefinition?.label || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞'}
        </span>
        
        {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ */}
        {state.loading && (
          <>
            <span className="text-gray-400">/</span>
            <span className="text-blue-600 animate-pulse">–ó–∞–≥—Ä—É–∑–∫–∞...</span>
          </>
        )}
      </div>
    </div>
  )
})

DashboardTabs.displayName = 'DashboardTabs'
'@

Set-FileContent "$ProjectRoot/src/components/Dashboard/DashboardTabs.tsx" $DashboardTabs

# DashboardContent —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º –ø–æ–¥—Ö–æ–¥–æ–º
$DashboardContent = @'
/**
 * @file components/Dashboard/DashboardContent.tsx
 * @description –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–∞—à–±–æ—Ä–¥–∞ —Å –ª–µ–Ω–∏–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π –∏ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
 */

import React, { Suspense, useMemo } from 'react'
import { Loader2, AlertCircle, Lock } from 'lucide-react'
import type { TabDefinition } from '../../types/dashboard/types'
import { useDashboard } from '../../context/dashboard/DashboardContext'
import { Card, CardContent, CardHeader, CardTitle } from '../ui/card'
import { Button } from '../ui/button'

// ===========================
// üéØ –ò–ù–¢–ï–†–§–ï–ô–°–´
// ===========================

interface DashboardContentProps {
  readonly tabDefinitions: readonly TabDefinition[]
}

// ===========================
// üé® –°–õ–£–ñ–ï–ë–ù–´–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´
// ===========================

const ComponentLoader: React.FC = React.memo(() => (
  <div className="flex items-center justify-center p-8">
    <Loader2 className="w-6 h-6 animate-spin text-blue-600" />
    <span className="ml-2 text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞...</span>
  </div>
))

ComponentLoader.displayName = 'ComponentLoader'

const ErrorBoundaryFallback: React.FC<{ 
  error?: string 
  onRetry?: () => void 
}> = React.memo(({ error, onRetry }) => (
  <Card className="border-red-200 bg-red-50">
    <CardHeader>
      <CardTitle className="flex items-center gap-2 text-red-600">
        <AlertCircle className="w-5 h-5" />
        –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
      </CardTitle>
    </CardHeader>
    <CardContent>
      {error && (
        <p className="text-gray-600 mb-4 font-mono text-sm bg-white p-2 rounded border">
          {error}
        </p>
      )}
      {onRetry && (
        <Button onClick={onRetry} variant="outline" size="sm">
          –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
        </Button>
      )}
    </CardContent>
  </Card>
))

ErrorBoundaryFallback.displayName = 'ErrorBoundaryFallback'

const AccessDenied: React.FC = React.memo(() => (
  <Card className="border-yellow-200 bg-yellow-50">
    <CardHeader>
      <CardTitle className="flex items-center gap-2 text-yellow-600">
        <Lock className="w-5 h-5" />
        –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞
      </CardTitle>
    </CardHeader>
    <CardContent>
      <p className="text-gray-600">
        –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É 
        –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π.
      </p>
    </CardContent>
  </Card>
))

AccessDenied.displayName = 'AccessDenied'

const TabNotFound: React.FC = React.memo(() => (
  <Card>
    <CardContent className="p-8 text-center">
      <AlertCircle className="w-12 h-12 text-gray-400 mx-auto mb-4" />
      <h3 className="text-lg font-semibold text-gray-600 mb-2">–í–∫–ª–∞–¥–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</h3>
      <p className="text-gray-500">
        –ó–∞–ø—Ä–æ—à–µ–Ω–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞.
      </p>
    </CardContent>
  </Card>
))

TabNotFound.displayName = 'TabNotFound'

// ===========================
// üé® –û–°–ù–û–í–ù–û–ô –ö–û–ú–ü–û–ù–ï–ù–¢ –ö–û–ù–¢–ï–ù–¢–ê
// ===========================

export const DashboardContent: React.FC<DashboardContentProps> = React.memo(({ tabDefinitions }) => {
  const { state, isAdmin } = useDashboard()

  // –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–∏—Å–∫ –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ø—Ä–∞–≤
  const activeTab = useMemo(() => {
    const availableTabs = tabDefinitions.filter(tab => !tab.adminOnly || isAdmin)
    return availableTabs.find(tab => tab.key === state.activeTab) || availableTabs[0]
  }, [tabDefinitions, state.activeTab, isAdmin])

  // –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞
  const accessCheck = useMemo(() => {
    if (!activeTab) return { hasAccess: false, reason: 'not-found' }
    if (activeTab.adminOnly && !isAdmin) return { hasAccess: false, reason: 'admin-required' }
    return { hasAccess: true, reason: null }
  }, [activeTab, isAdmin])

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏
  const handleRetry = React.useCallback(() => {
    window.location.reload()
  }, [])

  // –†–µ–Ω–¥–µ—Ä –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞
  if (!accessCheck.hasAccess) {
    if (accessCheck.reason === 'not-found') {
      return <TabNotFound />
    }
    if (accessCheck.reason === 'admin-required') {
      return <AccessDenied />
    }
  }

  if (!activeTab) {
    return <TabNotFound />
  }

  // –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
  const ActiveComponent = activeTab.component

  return (
    <div className="space-y-6">
      {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è */}
      {state.error && (
        <ErrorBoundaryFallback 
          error={state.error} 
          onRetry={handleRetry}
        />
      )}
      
      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å –≥—Ä–∞–Ω–∏—Ü–∞–º–∏ –æ—à–∏–±–æ–∫ */}
      <Suspense fallback={<ComponentLoader />}>
        <React.StrictMode>
          <ActiveComponent />
        </React.StrictMode>
      </Suspense>
    </div>
  )
})

DashboardContent.displayName = 'DashboardContent'
'@

Set-FileContent "$ProjectRoot/src/components/Dashboard/DashboardContent.tsx" $DashboardContent

# =====================================================
# –≠—Ç–∞–ø 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ Dashboard.tsx
# =====================================================

Write-Safe ""
Write-Safe "–≠—Ç–∞–ø 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ Dashboard.tsx..." 'Title'

$MainDashboard = @'
/**
 * @file pages/Dashboard.tsx
 * @description –ì–ª–∞–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è WASSER —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π
 * 
 * –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
 * - –ß–∏—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞
 * - –¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–∞—è –º–æ–¥—É–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞  
 * - –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
 * - –°–ø–µ—Ü–∏—Ñ–∏–∫–∞ –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏
 */

import React, { Suspense, lazy, memo } from 'react'
import {
  Package,
  Settings,
  Upload,
  FileText,
  Database,
  Users,
  Eye,
  Gauge,
  PaintBucket,
  Percent,
  Waves,
  Boxes,
  Loader2
} from 'lucide-react'

// –ö–æ–Ω—Ç–µ–∫—Å—Ç –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
import { DashboardProvider, useDashboard } from '../context/dashboard/DashboardContext'
import { DashboardHeader } from '../components/Dashboard/DashboardHeader'
import { DashboardTabs } from '../components/Dashboard/DashboardTabs'
import { DashboardContent } from '../components/Dashboard/DashboardContent'

// UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../components/ui/card'
import SupabaseStatus from '../components/SupabaseStatus'

// –¢–∏–ø—ã
import type { TabDefinition } from '../types/dashboard/types'

// ===========================
// üé® –õ–ï–ù–ò–í–ê–Ø –ó–ê–ì–†–£–ó–ö–ê –ö–û–ú–ü–û–ù–ï–ù–¢–û–í
// ===========================

// –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
const PriceListGenerator = lazy(() => import('../components/PriceListGenerator'))

// –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã  
const FileUpload = lazy(() => import('../components/FileUpload'))
const MaterialsManager = lazy(() => import('../components/MaterialsManager'))
const ProductManager = lazy(() => import('../components/ProductManager'))
const CollectionsManager = lazy(() => import('../components/CollectionsManager'))
const ProductTypesManager = lazy(() => import('../components/ProductTypesManager'))
const UserManagement = lazy(() => import('../components/UserManagement'))
const TechCardHistory = lazy(() => import('../components/TechCardHistory'))

// –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏
const PaintRecipesManager = lazy(() => import('../components/PaintRecipesManager'))
const MarkupRulesManager = lazy(() => import('../components/MarkupRulesManager'))
const SinksManager = lazy(() => import('../components/SinksManager'))
const SetsManager = lazy(() => import('../components/SetsManager'))

// ===========================
// üéØ –ú–ï–ú–û–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´ –ö–û–ù–¢–ï–ù–¢–ê
// ===========================

/** –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –æ–±–∑–æ—Ä–∞ —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π */
const OverviewContent: React.FC = memo(() => {
  const { state } = useDashboard()
  
  return (
    <div className="space-y-6">
      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
        <Card className="hover:shadow-md transition-shadow">
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium text-gray-600">–ú–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –≤ –±–∞–∑–µ</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-blue-600">
              {state.stats.materials.toLocaleString('ru-RU')}
            </div>
            <p className="text-xs text-gray-500 mt-1">–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π</p>
          </CardContent>
        </Card>

        <Card className="hover:shadow-md transition-shadow">
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium text-gray-600">–ò–∑–¥–µ–ª–∏–π</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-green-600">
              {state.stats.products.toLocaleString('ru-RU')}
            </div>
            <p className="text-xs text-gray-500 mt-1">–í –∫–∞—Ç–∞–ª–æ–≥–µ</p>
          </CardContent>
        </Card>

        <Card className="hover:shadow-md transition-shadow">
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium text-gray-600">–ö–æ–ª–ª–µ–∫—Ü–∏–π</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-purple-600">
              {state.stats.collections}
            </div>
            <p className="text-xs text-gray-500 mt-1">–ê–∫—Ç–∏–≤–Ω—ã—Ö</p>
          </CardContent>
        </Card>

        <Card className="hover:shadow-md transition-shadow">
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium text-gray-600">–ü—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–≤</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-orange-600">
              {state.stats.priceLists.toLocaleString('ru-RU')}
            </div>
            <p className="text-xs text-gray-500 mt-1">–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ</p>
          </CardContent>
        </Card>
      </div>

      {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏ */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            üöÄ –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
          </CardTitle>
          <CardDescription>–ù–∞–∏–±–æ–ª–µ–µ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div className="p-4 border rounded-lg hover:bg-blue-50 cursor-pointer transition-colors group">
              <FileText className="w-6 h-6 text-blue-600 mb-2 group-hover:scale-110 transition-transform" />
              <h3 className="font-medium text-gray-900">–°–æ–∑–¥–∞—Ç—å –ø—Ä–∞–π—Å-–ª–∏—Å—Ç</h3>
              <p className="text-sm text-gray-600">–ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF —Å —Ü–µ–Ω–∞–º–∏ –Ω–∞ –º–µ–±–µ–ª—å</p>
            </div>
            
            <div className="p-4 border rounded-lg hover:bg-green-50 cursor-pointer transition-colors group">
              <Package className="w-6 h-6 text-green-600 mb-2 group-hover:scale-110 transition-transform" />
              <h3 className="font-medium text-gray-900">–î–æ–±–∞–≤–∏—Ç—å –∏–∑–¥–µ–ª–∏–µ</h3>
              <p className="text-sm text-gray-600">–ù–æ–≤–∞—è –º–µ–±–µ–ª—å –≤ –∫–∞—Ç–∞–ª–æ–≥</p>
            </div>
            
            <div className="p-4 border rounded-lg hover:bg-purple-50 cursor-pointer transition-colors group">
              <Database className="w-6 h-6 text-purple-600 mb-2 group-hover:scale-110 transition-transform" />
              <h3 className="font-medium text-gray-900">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏</h3>
              <p className="text-sm text-gray-600">–ë–∞–∑–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏</p>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  )
})

OverviewContent.displayName = 'OverviewContent'

/** –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π */
const ComponentLoader: React.FC = memo(() => (
  <div className="flex items-center justify-center p-8">
    <Loader2 className="w-6 h-6 animate-spin text-blue-600" />
    <span className="ml-2 text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞...</span>
  </div>
))

ComponentLoader.displayName = 'ComponentLoader'

// ===========================
// üéØ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –í–ö–õ–ê–î–û–ö –ú–ï–ë–ï–õ–¨–ù–û–ô –§–ê–ë–†–ò–ö–ò
// ===========================

/** –¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤—Å–µ—Ö –≤–∫–ª–∞–¥–æ–∫ */
const TAB_DEFINITIONS: readonly TabDefinition[] = [
  // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –≤–∫–ª–∞–¥–∫–∏ (–¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ–º)
  {
    key: 'overview',
    label: '–û–±–∑–æ—Ä',
    icon: <Gauge className="w-4 h-4" />,
    description: '–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –±—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è',
    adminOnly: false,
    component: OverviewContent
  },
  {
    key: 'generator',
    label: '–ü—Ä–∞–π—Å-–ª–∏—Å—Ç',
    icon: <FileText className="w-4 h-4" />,
    description: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–≤ –≤ PDF –¥–ª—è –º–µ–±–µ–ª–∏',
    adminOnly: false,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <PriceListGenerator />
      </Suspense>
    ))
  },
  {
    key: 'labels',
    label: '–≠—Ç–∏–∫–µ—Ç–∫–∏',
    icon: <Package className="w-4 h-4" />,
    description: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —ç—Ç–∏–∫–µ—Ç–æ–∫ –¥–ª—è –∏–∑–¥–µ–ª–∏–π',
    adminOnly: false,
    component: memo(() => (
      <div className="p-8 text-center text-gray-600">
        <Package className="w-16 h-16 text-gray-400 mx-auto mb-4" />
        <h3 className="text-lg font-semibold mb-2">–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —ç—Ç–∏–∫–µ—Ç–æ–∫</h3>
        <p className="text-gray-500">–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</p>
      </div>
    ))
  },

  // –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
  {
    key: 'upload',
    label: '–ó–∞–≥—Ä—É–∑–∫–∞',
    icon: <Upload className="w-4 h-4" />,
    description: '–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ Excel —Ñ–∞–π–ª–æ–≤',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <FileUpload />
      </Suspense>
    ))
  },
  {
    key: 'materials',
    label: '–ú–∞—Ç–µ—Ä–∏–∞–ª—ã',
    icon: <Database className="w-4 h-4" />,
    description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–π –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –¥–ª—è –º–µ–±–µ–ª–∏',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <MaterialsManager />
      </Suspense>
    ))
  },
  {
    key: 'products',
    label: '–ü—Ä–æ–¥—É–∫—Ü–∏—è',
    icon: <Package className="w-4 h-4" />,
    description: '–ö–∞—Ç–∞–ª–æ–≥ –º–µ–±–µ–ª–∏ –∏ —Ç–µ—Ö–∫–∞—Ä—Ç—ã',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <ProductManager />
      </Suspense>
    ))
  },
  {
    key: 'collections',
    label: '–ö–æ–ª–ª–µ–∫—Ü–∏–∏',
    icon: <Settings className="w-4 h-4" />,
    description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏—è–º–∏ –º–µ–±–µ–ª–∏',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <CollectionsManager />
      </Suspense>
    ))
  },
  {
    key: 'types',
    label: '–¢–∏–ø—ã',
    icon: <Settings className="w-4 h-4" />,
    description: '–¢–∏–ø—ã –∏ –≤–∏–¥—ã –º–µ–±–µ–ª–∏',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <ProductTypesManager />
      </Suspense>
    ))
  },

  // –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏ –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏
  {
    key: 'paint',
    label: '–û–∫—Ä–∞—Å–∫–∞',
    icon: <PaintBucket className="w-4 h-4" />,
    description: '–†–µ—Ü–µ–ø—Ç—ã –æ–∫—Ä–∞—Å–∫–∏ –∏ –ø–æ–∫—Ä—ã—Ç–∏–π –º–µ–±–µ–ª–∏',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <PaintRecipesManager />
      </Suspense>
    ))
  },
  {
    key: 'markup',
    label: '–ù–∞—Ü–µ–Ω–∫–∞',
    icon: <Percent className="w-4 h-4" />,
    description: '–ü—Ä–∞–≤–∏–ª–∞ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –Ω–∞ –º–µ–±–µ–ª—å',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <MarkupRulesManager />
      </Suspense>
    ))
  },
  {
    key: 'sinks',
    label: '–†–∞–∫–æ–≤–∏–Ω—ã',
    icon: <Waves className="w-4 h-4" />,
    description: '–ö–∞—Ç–∞–ª–æ–≥ —Ä–∞–∫–æ–≤–∏–Ω –∏ —Å–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∏',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <SinksManager />
      </Suspense>
    ))
  },
  {
    key: 'sets',
    label: '–ö–æ–º–ø–ª–µ–∫—Ç—ã',
    icon: <Boxes className="w-4 h-4" />,
    description: '–ú–µ–±–µ–ª—å–Ω—ã–µ –Ω–∞–±–æ—Ä—ã –∏ –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <SetsManager />
      </Suspense>
    ))
  },

  // –°–∏—Å—Ç–µ–º–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏
  {
    key: 'history',
    label: '–ò—Å—Ç–æ—Ä–∏—è',
    icon: <Eye className="w-4 h-4" />,
    description: '–ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Å–∏—Å—Ç–µ–º–µ',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <TechCardHistory />
      </Suspense>
    ))
  },
  {
    key: 'users',
    label: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
    icon: <Users className="w-4 h-4" />,
    description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ —Ä–æ–ª—è–º–∏',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <UserManagement />
      </Suspense>
    ))
  }
] as const

// ===========================
// üé® –í–ù–£–¢–†–ï–ù–ù–ò–ô –ö–û–ú–ü–û–ù–ï–ù–¢ –î–ê–®–ë–û–†–î–ê
// ===========================

const DashboardInner: React.FC = memo(() => {
  const { state } = useDashboard()

  // –≠–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏ —Å –±—Ä–µ–Ω–¥–∏–Ω–≥–æ–º
  if (state.loading) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-50">
        <div className="text-center">
          <div className="flex h-16 w-16 items-center justify-center rounded-xl bg-blue-600 text-white text-2xl font-bold mx-auto mb-6">
            W
          </div>
          <Loader2 className="w-8 h-8 animate-spin text-blue-600 mx-auto mb-4" />
          <div className="text-lg text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è...</div>
          <div className="text-sm text-gray-400 mt-2">WASSER –ú–µ–±–µ–ª—å–Ω–∞—è –§–∞–±—Ä–∏–∫–∞</div>
        </div>
      </div>
    )
  }

  // –≠–∫—Ä–∞–Ω –æ—à–∏–±–∫–∏ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
  if (state.error) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-50">
        <Card className="w-full max-w-md">
          <CardHeader>
            <CardTitle className="text-red-600 flex items-center gap-2">
              <Loader2 className="w-5 h-5" />
              –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏
            </CardTitle>
          </CardHeader>
          <CardContent>
            <p className="text-gray-600 mb-4">{state.error}</p>
            <button 
              onClick={() => window.location.reload()}
              className="w-full px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors"
            >
              –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
            </button>
          </CardContent>
        </Card>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* –¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–∞—è —à–∞–ø–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è */}
      <DashboardHeader />

      <main className="container mx-auto px-4 pb-10">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–∞–Ω–µ–ª–∏ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ñ–∞–±—Ä–∏–∫–µ */}
        <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4 my-6">
          <div>
            <h1 className="text-3xl font-bold text-gray-900">–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</h1>
            <p className="text-gray-600">
              –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏, –º–µ–±–µ–ª—å—é –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–≤
            </p>
          </div>
        </div>

        {/* –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase */}
        <div className="mb-4">
          <SupabaseStatus compact />
        </div>

        {/* –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –≤–∫–ª–∞–¥–∫–∞–º */}
        <DashboardTabs tabDefinitions={TAB_DEFINITIONS} />

        {/* –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏ */}
        <DashboardContent tabDefinitions={TAB_DEFINITIONS} />
      </main>
    </div>
  )
})

DashboardInner.displayName = 'DashboardInner'

// ===========================
// üéØ –û–°–ù–û–í–ù–û–ô –ö–û–ú–ü–û–ù–ï–ù–¢ –° –ü–†–û–í–ê–ô–î–ï–†–û–ú
// ===========================

/**
 * Dashboard - –ì–ª–∞–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏ WASSER
 * 
 * –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:
 * - –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é
 * - –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏  
 * - –õ–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª–µ–π –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
 * - –°–ø–µ—Ü–∏—Ñ–∏–∫–∞ –º–µ–±–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞
 * - –°–∏—Å—Ç–µ–º–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ admin/manager/user
 */
const Dashboard: React.FC = memo(() => {
  return (
    <DashboardProvider>
      <DashboardInner />
    </DashboardProvider>
  )
})

Dashboard.displayName = 'Dashboard'

export default Dashboard
'@

Set-FileContent "$ProjectRoot/src/pages/Dashboard.tsx" $MainDashboard

# =====================================================
# –≠—Ç–∞–ø 4: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ TypeScript
# =====================================================

Write-Safe ""
Write-Safe "–≠—Ç–∞–ø 4: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ TypeScript..." 'Title'

try {
    Push-Location $ProjectRoot
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
    Write-Safe "–ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞..." 'Info'
    $tscCheck = npx tsc --noEmit --skipLibCheck 2>&1
    
    if ($LASTEXITCODE -eq 0) {
        Write-Safe "‚úÖ TypeScript —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω" 'Success'
    } else {
        Write-Safe "‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è TypeScript (–Ω–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω):" 'Warning'
        # –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ—à–∏–±–∫–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
        $syntaxErrors = $tscCheck | Where-Object { $_ -match "Unexpected token|SyntaxError" }
        if ($syntaxErrors) {
            $syntaxErrors | ForEach-Object { Write-Safe "  $_" 'Error' }
        } else {
            Write-Safe "  –°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç" 'Success'
        }
    }
} catch {
    Write-Safe "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ TypeScript: $_" 'Warning'
} finally {
    Pop-Location
}

# =====================================================
# –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
# =====================================================

Write-Safe ""
Write-Safe "üéâ –ü–æ–ª–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –∑–∞–≤–µ—Ä—à–µ–Ω–æ!" 'Title'
Write-Safe "================================================" 'Title'

$summary = @"

‚úÖ –í–´–ü–û–õ–ù–ï–ù–ù–´–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:
‚Ä¢ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –í–°–ï # –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–∞ // –≤–æ –≤—Å–µ—Ö TypeScript —Ñ–∞–π–ª–∞—Ö
‚Ä¢ –°–æ–∑–¥–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –¥–∞—à–±–æ—Ä–¥–∞ —Å –º–µ–º–æ–∏–∑–∞—Ü–∏–µ–π
‚Ä¢ –¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã Dashboard (Header, Tabs, Content)
‚Ä¢ –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω—ã–º–∏ —Ö—É–∫–∞–º–∏ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
‚Ä¢ –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏ —Å —Ä–∞—Å—á–µ—Ç–∞–º–∏

üèóÔ∏è –ê–†–•–ò–¢–ï–ö–¢–£–†–ù–´–ï –û–°–û–ë–ï–ù–ù–û–°–¢–ò:
‚Ä¢ React Context –¥–ª—è —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
‚Ä¢ –ú–µ–º–æ–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ React.memo, useMemo, useCallback
‚Ä¢ –õ–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ React.lazy
‚Ä¢ –¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Å —Å—Ç—Ä–æ–≥–æ–π TypeScript —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π
‚Ä¢ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –±–µ–∑ –∫–ª–∞—Å—Å–æ–≤
‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏ –≥—Ä–∞–Ω–∏—Ü—ã –æ—à–∏–±–æ–∫

üè≠ –°–ü–ï–¶–ò–§–ò–ö–ê –ú–ï–ë–ï–õ–¨–ù–û–ô –§–ê–ë–†–ò–ö–ò:
‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏ —Å –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞–º–∏ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è
‚Ä¢ –ö–æ–ª–ª–µ–∫—Ü–∏–∏ –º–µ–±–µ–ª–∏ —Å –º–Ω–æ–∂–∏—Ç–µ–ª—è–º–∏ —Ü–µ–Ω
‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–≤ —Å —Ä–∞—Å—á–µ—Ç–∞–º–∏
‚Ä¢ –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏ (–æ–∫—Ä–∞—Å–∫–∞, –Ω–∞—Ü–µ–Ω–∫–∞, –∫–æ–º–ø–ª–µ–∫—Ç—ã)
‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞

üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:
‚Ä¢ –°–æ–∑–¥–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: 6
‚Ä¢ –°—Ç—Ä–æ–∫ –∫–æ–¥–∞: ~2000+
‚Ä¢ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: 8+
‚Ä¢ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫: $totalErrors

üöÄ –ö–û–ú–ê–ù–î–´ –î–õ–Ø –ó–ê–ü–£–°–ö–ê:
1. npm run dashboard:type-check  # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤
2. npm run dashboard:dev        # –ó–∞–ø—É—Å–∫ dev —Å–µ—Ä–≤–µ—Ä–∞
3. –û—Ç–∫—Ä—ã—Ç—å http://localhost:5173 # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—à–±–æ—Ä–¥–∞

"@

Write-Safe $summary 'Success'

if ($DryRun) {
    Write-Safe "üí° –≠—Ç–æ –±—ã–ª —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫. –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ -DryRun" 'Warning'
} else {
    Write-Safe "üéØ –ì–û–¢–û–í–û –ö –ó–ê–ü–£–°–ö–£!" 'Title'
    Write-Safe "–ö–æ–º–∞–Ω–¥–∞: npm run dashboard:dev" 'Success'
}