# ========================================
# üèóÔ∏è WASSER Dashboard Refactor Script
# –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å TypeScript
# ========================================

param(
    [switch]$DryRun = $false,
    [switch]$Backup = $true,
    [string]$ProjectRoot = "."
)

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
$Colors = @{
    Success = 'Green'
    Warning = 'Yellow' 
    Error = 'Red'
    Info = 'Cyan'
    Title = 'Magenta'
}

function Write-ColorOutput {
    param([string]$Message, [string]$Color = 'White')
    Write-Host $Message -ForegroundColor $Colors[$Color]
}

function New-Directory {
    param([string]$Path)
    if (-not (Test-Path $Path)) {
        New-Item -Path $Path -ItemType Directory -Force | Out-Null
        Write-ColorOutput "üìÅ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $Path" 'Success'
    }
}

function Backup-File {
    param([string]$FilePath)
    if ($Backup -and (Test-Path $FilePath)) {
        $backupPath = "$FilePath.backup.$(Get-Date -Format 'yyyyMMdd_HHmmss')"
        Copy-Item $FilePath $backupPath
        Write-ColorOutput "üíæ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: $backupPath" 'Info'
    }
}

Write-ColorOutput "üöÄ WASSER Dashboard Refactor Script" 'Title'
Write-ColorOutput "===========================================" 'Title'

if ($DryRun) {
    Write-ColorOutput "üîç –†–µ–∂–∏–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (DryRun) - —Ñ–∞–π–ª—ã –Ω–µ –±—É–¥—É—Ç –∏–∑–º–µ–Ω–µ–Ω—ã" 'Warning'
}

# ========================================
# –≠—Ç–∞–ø 1: –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
# ========================================

Write-ColorOutput "`nüìÅ –≠—Ç–∞–ø 1: –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..." 'Title'

$Directories = @(
    "src/components/Dashboard",
    "src/hooks/dashboard",
    "src/services/dashboard", 
    "src/config/dashboard",
    "src/types/dashboard",
    "src/utils/dashboard",
    "src/context/dashboard"
)

foreach ($dir in $Directories) {
    New-Directory "$ProjectRoot/$dir"
}

# ========================================
# –≠—Ç–∞–ø 2: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–ø–æ–≤ –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤
# ========================================

Write-ColorOutput "`nüéØ –≠—Ç–∞–ø 2: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–ø–æ–≤ –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤..." 'Title'

$DashboardTypes = @'
/**
 * @file dashboard/types.ts
 * @description –¢–∏–ø—ã –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞ –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏ WASSER
 */

// ===========================
// üéØ –û–°–ù–û–í–ù–´–ï –¢–ò–ü–´
// ===========================

/** –î–æ–ø—É—Å—Ç–∏–º—ã–µ –≤–∫–ª–∞–¥–∫–∏ –¥–∞—à–±–æ—Ä–¥–∞ */
export type DashboardTab =
  | 'overview'
  | 'generator' 
  | 'labels'
  | 'upload'
  | 'materials'
  | 'products'
  | 'collections'
  | 'types'
  | 'paint'
  | 'markup'
  | 'sinks'
  | 'sets'
  | 'history'
  | 'users'

/** –†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */
export type UserRole = 'admin' | 'manager' | 'user'

/** –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ä–æ–ª—å—é */
export interface UserWithRole {
  readonly id: string
  readonly email: string
  readonly role: UserRole
  readonly name?: string
  readonly permissions?: readonly string[]
}

/** –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∞—à–±–æ—Ä–¥–∞ */
export interface DashboardStats {
  readonly materials: number
  readonly products: number
  readonly collections: number
  readonly priceLists: number
  readonly lastUpdated?: Date
}

/** –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∞—à–±–æ—Ä–¥–∞ */
export interface DashboardState {
  readonly activeTab: DashboardTab
  readonly stats: DashboardStats
  readonly statsLoading: boolean
  readonly user: UserWithRole | null
  readonly loading: boolean
  readonly error: string | null
}

/** –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ */
export interface TabDefinition {
  readonly key: DashboardTab
  readonly label: string
  readonly icon: React.ReactNode
  readonly description: string
  readonly adminOnly: boolean
  readonly requiredPermissions?: readonly string[]
  readonly component: React.ComponentType
}

/** –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ */
export interface PerformanceMetrics {
  readonly loadTime: number
  readonly tabSwitchTime: number
  readonly lastUpdate: Date
  readonly memoryUsage?: number
}

/** –°–æ–±—ã—Ç–∏—è –¥–∞—à–±–æ—Ä–¥–∞ */
export interface DashboardEvents {
  tabChanged: { tab: DashboardTab; timestamp: Date }
  statsLoaded: { stats: DashboardStats; duration: number }
  userAuthenticated: { user: UserWithRole; permissions: readonly string[] }
  errorOccurred: { error: string; context: string; timestamp: Date }
}

/** –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ */
export interface PermissionsConfig {
  readonly adminEmails: readonly string[]
  readonly roleHierarchy: Record<UserRole, readonly string[]>
  readonly tabPermissions: Record<DashboardTab, {
    readonly adminOnly: boolean
    readonly requiredRole?: UserRole
    readonly feature?: string
  }>
}

// ===========================
// üîß UTILITY TYPES
// ===========================

export type TabPermissions = {
  [K in DashboardTab]: {
    readonly adminOnly: boolean
    readonly requiredRole?: readonly UserRole[]
    readonly feature?: string
  }
}

export type DashboardAction = 
  | { type: 'SET_LOADING'; payload: boolean }
  | { type: 'SET_USER'; payload: UserWithRole | null }
  | { type: 'SET_ACTIVE_TAB'; payload: DashboardTab }
  | { type: 'SET_STATS'; payload: DashboardStats }
  | { type: 'SET_ERROR'; payload: string | null }
  | { type: 'SET_STATS_LOADING'; payload: boolean }

// ===========================
# üè≠ –ú–ï–ë–ï–õ–¨–ù–ê–Ø –§–ê–ë–†–ò–ö–ê –¢–ò–ü–´
# ===========================

/** –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –º–µ–±–µ–ª–∏ */
export interface FurnitureMaterial {
  readonly id: string
  readonly name: string
  readonly price: number
  readonly unit: string
  readonly category: 'wood' | 'metal' | 'fabric' | 'hardware' | 'finish'
  readonly consumptionCoeff?: number
}

/** –ö–æ–ª–ª–µ–∫—Ü–∏–∏ –º–µ–±–µ–ª–∏ */
export interface FurnitureCollection {
  readonly id: string
  readonly name: string
  readonly multiplier: number
  readonly description?: string
  readonly isActive: boolean
}

/** –ü—Ä–æ–¥—É–∫—Ü–∏—è */
export interface FurnitureProduct {
  readonly id: string
  readonly article: string
  readonly name: string
  readonly collection: string
  readonly basePrice: number
  readonly materials: readonly string[]
  readonly category: 'tables' | 'chairs' | 'cabinets' | 'beds' | 'other'
}
'@

if (-not $DryRun) {
    Set-Content -Path "$ProjectRoot/src/types/dashboard/types.ts" -Value $DashboardTypes -Encoding UTF8
}
Write-ColorOutput "‚úÖ –°–æ–∑–¥–∞–Ω—ã —Ç–∏–ø—ã –¥–∞—à–±–æ—Ä–¥–∞" 'Success'

# ========================================
# –≠—Ç–∞–ø 3: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
# ========================================

Write-ColorOutput "`nüõ°Ô∏è –≠—Ç–∞–ø 3: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π..." 'Title'

$PermissionsConfig = @'
/**
 * @file config/permissions.ts
 * @description –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ WASSER
 */

import { PermissionsConfig, UserRole, DashboardTab } from '../types/dashboard/types'

// ===========================
# üîí –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò  
# ===========================

/** –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–∏–µ email –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è */
const getAdminEmails = (): readonly string[] => {
  const envEmails = process.env.REACT_APP_ADMIN_EMAILS
  const fallbackEmails = ['admin@wasser.com', 'sherhan1988hp@gmail.com']
  
  if (envEmails) {
    return envEmails.split(',').map(email => email.trim()).filter(Boolean)
  }
  
  console.warn('‚ö†Ô∏è REACT_APP_ADMIN_EMAILS –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è fallback emails')
  return fallbackEmails
}

/** –ò–µ—Ä–∞—Ä—Ö–∏—è —Ä–æ–ª–µ–π */
const ROLE_HIERARCHY: Record<UserRole, readonly string[]> = {
  admin: ['admin', 'manager', 'user'],
  manager: ['manager', 'user'], 
  user: ['user']
} as const

/** –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –≤–∫–ª–∞–¥–∫–∞–º */
const TAB_PERMISSIONS: Record<DashboardTab, {
  readonly adminOnly: boolean
  readonly requiredRole?: UserRole
  readonly feature?: string
}> = {
  // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –≤–∫–ª–∞–¥–∫–∏
  overview: { adminOnly: false },
  generator: { adminOnly: false, feature: 'price_generation' },
  labels: { adminOnly: false, feature: 'label_generation' },
  
  // –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏
  upload: { adminOnly: true, requiredRole: 'admin', feature: 'data_import' },
  materials: { adminOnly: true, requiredRole: 'admin', feature: 'materials_management' },
  products: { adminOnly: true, requiredRole: 'admin', feature: 'products_management' },
  collections: { adminOnly: true, requiredRole: 'admin', feature: 'collections_management' },
  types: { adminOnly: true, requiredRole: 'admin', feature: 'types_management' },
  paint: { adminOnly: true, requiredRole: 'admin', feature: 'paint_recipes' },
  markup: { adminOnly: true, requiredRole: 'admin', feature: 'markup_rules' },
  sinks: { adminOnly: true, requiredRole: 'admin', feature: 'sinks_catalog' },
  sets: { adminOnly: true, requiredRole: 'admin', feature: 'furniture_sets' },
  history: { adminOnly: true, requiredRole: 'admin', feature: 'change_history' },
  users: { adminOnly: true, requiredRole: 'admin', feature: 'user_management' }
} as const

/** –û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π */
export const PERMISSIONS_CONFIG: PermissionsConfig = {
  adminEmails: getAdminEmails(),
  roleHierarchy: ROLE_HIERARCHY,
  tabPermissions: TAB_PERMISSIONS
} as const

// ===========================
# üîß –§–£–ù–ö–¶–ò–ò –ü–†–û–í–ï–†–ö–ò –ü–†–ê–í
# ===========================

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –ø—Ä–∞–≤
 */
export const isAdminUser = (email: string): boolean => {
  return PERMISSIONS_CONFIG.adminEmails.includes(email)
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –≤–∫–ª–∞–¥–∫–µ
 */
export const hasTabAccess = (
  tab: DashboardTab,
  userRole: UserRole,
  userEmail: string
): boolean => {
  const permission = TAB_PERMISSIONS[tab]
  
  if (!permission.adminOnly) {
    return true
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ email –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
  if (isAdminUser(userEmail)) {
    return true
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ —Ä–æ–ª–∏
  if (permission.requiredRole) {
    const allowedRoles = ROLE_HIERARCHY[userRole] || []
    return allowedRoles.includes(permission.requiredRole)
  }
  
  return false
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∫–ª–∞–¥–æ–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const getAvailableTabs = (
  userRole: UserRole,
  userEmail: string
): readonly DashboardTab[] => {
  return (Object.keys(TAB_PERMISSIONS) as DashboardTab[])
    .filter(tab => hasTabAccess(tab, userRole, userEmail))
}

// ===========================
# üè≠ –ú–ï–ë–ï–õ–¨–ù–ê–Ø –§–ê–ë–†–ò–ö–ê –ü–†–ê–í–ê
# ===========================

/** –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–ª—è –º–µ–±–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ */
export const FURNITURE_PERMISSIONS = {
  MANAGE_MATERIALS: 'manage_materials',
  MANAGE_COLLECTIONS: 'manage_collections', 
  GENERATE_PRICELISTS: 'generate_pricelists',
  MANAGE_PAINT_RECIPES: 'manage_paint_recipes',
  MANAGE_MARKUP_RULES: 'manage_markup_rules',
  VIEW_REPORTS: 'view_reports',
  EXPORT_DATA: 'export_data'
} as const

export type FurniturePermission = typeof FURNITURE_PERMISSIONS[keyof typeof FURNITURE_PERMISSIONS]
'@

if (-not $DryRun) {
    Set-Content -Path "$ProjectRoot/src/config/dashboard/permissions.ts" -Value $PermissionsConfig -Encoding UTF8
}
Write-ColorOutput "‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π" 'Success'

# ========================================
# –≠—Ç–∞–ø 4: –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å localStorage
# ========================================

Write-ColorOutput "`nüíæ –≠—Ç–∞–ø 4: –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å localStorage..." 'Title'

$StorageService = @'
/**
 * @file services/storage.ts
 * @description –¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å localStorage
 */

import { DashboardTab, UserWithRole } from '../types/dashboard/types'

// ===========================
# üîë –ö–õ–Æ–ß–ò –õ–û–ö–ê–õ–¨–ù–û–ì–û –•–†–ê–ù–ò–õ–ò–©–ê
# ===========================

const STORAGE_KEYS = {
  ACTIVE_TAB: 'wasser:dashboard:active-tab',
  USER_PREFERENCES: 'wasser:user:preferences',
  CACHE_STATS: 'wasser:cache:stats',
  THEME: 'wasser:theme',
  TEST_USER: 'test-user',
  SUPABASE_USER: 'supabase-user'
} as const

type StorageKey = typeof STORAGE_KEYS[keyof typeof STORAGE_KEYS]

// ===========================
# üèóÔ∏è –¢–ò–ü–û–ë–ï–ó–û–ü–ê–°–ù–´–ô –°–ï–†–í–ò–° –•–†–ê–ù–ò–õ–ò–©–ê
# ===========================

class WasserStorage {
  /**
   * –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —á—Ç–µ–Ω–∏–µ –∏–∑ localStorage —Å —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π
   */
  private static safeGet<T>(key: StorageKey): T | null {
    try {
      const item = localStorage.getItem(key)
      return item ? JSON.parse(item) : null
    } catch (error) {
      console.warn(`–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è ${key} –∏–∑ localStorage:`, error)
      return null
    }
  }

  /**
   * –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∑–∞–ø–∏—Å—å –≤ localStorage
   */
  private static safeSet<T>(key: StorageKey, value: T): void {
    try {
      localStorage.setItem(key, JSON.stringify(value))
    } catch (error) {
      console.error(`–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ ${key} –≤ localStorage:`, error)
    }
  }

  /**
   * –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ localStorage
   */
  private static safeRemove(key: StorageKey): void {
    try {
      localStorage.removeItem(key)
    } catch (error) {
      console.warn(`–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è ${key} –∏–∑ localStorage:`, error)
    }
  }

  // ===========================
  # üéØ –ú–ï–¢–û–î–´ –î–õ–Ø –î–ê–®–ë–û–†–î–ê
  # ===========================

  /** –ü–æ–ª—É—á–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É */
  static getActiveTab(): DashboardTab | null {
    return this.safeGet<DashboardTab>(STORAGE_KEYS.ACTIVE_TAB)
  }

  /** –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É */
  static setActiveTab(tab: DashboardTab): void {
    this.safeSet(STORAGE_KEYS.ACTIVE_TAB, tab)
  }

  /** –ü–æ–ª—É—á–∏—Ç—å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É */
  static getCachedStats(): any {
    return this.safeGet(STORAGE_KEYS.CACHE_STATS)
  }

  /** –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ –∫–µ—à */
  static setCachedStats(stats: any, ttl: number = 300000): void {
    const cacheEntry = {
      data: stats,
      timestamp: Date.now(),
      ttl
    }
    this.safeSet(STORAGE_KEYS.CACHE_STATS, cacheEntry)
  }

  /** –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∫–µ—à–∞ */
  static isCacheValid(cacheKey: StorageKey): boolean {
    const cache = this.safeGet<{timestamp: number, ttl: number}>(cacheKey)
    if (!cache) return false
    
    return (Date.now() - cache.timestamp) < cache.ttl
  }

  // ===========================
  # üë§ –ú–ï–¢–û–î–´ –î–õ–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô  
  # ===========================

  /** –ü–æ–ª—É—á–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
  static getTestUser(): UserWithRole | null {
    const testUser = this.safeGet<any>(STORAGE_KEYS.TEST_USER)
    if (!testUser?.authenticated) return null
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è —Å–µ—Å—Å–∏–∏ (7 –¥–Ω–µ–π)
    const sessionAge = Date.now() - (testUser.timestamp || 0)
    const maxAge = 7 * 24 * 60 * 60 * 1000
    
    if (sessionAge > maxAge) {
      this.safeRemove(STORAGE_KEYS.TEST_USER)
      return null
    }
    
    return {
      id: testUser.id,
      email: testUser.email,
      role: testUser.role,
      name: testUser.name
    }
  }

  /** –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Supabase */
  static getSupabaseUser(): UserWithRole | null {
    const supabaseUser = this.safeGet<any>(STORAGE_KEYS.SUPABASE_USER)
    if (!supabaseUser?.role) return null
    
    return {
      id: supabaseUser.id,
      email: supabaseUser.email,
      role: supabaseUser.role,
      name: supabaseUser.name
    }
  }

  /** –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */
  static setUserPreferences(preferences: Record<string, any>): void {
    this.safeSet(STORAGE_KEYS.USER_PREFERENCES, preferences)
  }

  /** –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */
  static getUserPreferences(): Record<string, any> {
    return this.safeGet(STORAGE_KEYS.USER_PREFERENCES) || {}
  }

  // ===========================
  # üßπ –°–õ–£–ñ–ï–ë–ù–´–ï –ú–ï–¢–û–î–´
  # ===========================

  /** –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –¥–∞—à–±–æ—Ä–¥–∞ */
  static clearDashboardData(): void {
    const keysToRemove = [
      STORAGE_KEYS.ACTIVE_TAB,
      STORAGE_KEYS.CACHE_STATS,
      STORAGE_KEYS.USER_PREFERENCES
    ]
    
    keysToRemove.forEach(key => this.safeRemove(key))
  }

  /** –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ */
  static clearAuthData(): void {
    const authKeys = [
      STORAGE_KEYS.TEST_USER,
      STORAGE_KEYS.SUPABASE_USER
    ]
    
    authKeys.forEach(key => this.safeRemove(key))
  }

  /** –ü–æ–ª—É—á–∏—Ç—å —Ä–∞–∑–º–µ—Ä –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ */
  static getStorageSize(): number {
    let total = 0
    for (const key in localStorage) {
      if (localStorage.hasOwnProperty(key)) {
        total += localStorage[key].length + key.length
      }
    }
    return Math.round(total / 1024) // –≤ KB
  }

  /** –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ */
  static getDiagnostics(): Record<string, any> {
    return {
      storageSize: `${this.getStorageSize()} KB`,
      activeTab: this.getActiveTab(),
      cacheValid: this.isCacheValid(STORAGE_KEYS.CACHE_STATS),
      hasTestUser: !!this.getTestUser(),
      hasSupabaseUser: !!this.getSupabaseUser(),
      timestamp: new Date().toISOString()
    }
  }
}

export { WasserStorage as DashboardStorage, STORAGE_KEYS }
'@

if (-not $DryRun) {
    Set-Content -Path "$ProjectRoot/src/services/dashboard/storage.ts" -Value $StorageService -Encoding UTF8
}
Write-ColorOutput "‚úÖ –°–æ–∑–¥–∞–Ω —Å–µ—Ä–≤–∏—Å —Ö—Ä–∞–Ω–∏–ª–∏—â–∞" 'Success'

# ========================================
# –≠—Ç–∞–ø 5: –ö–∞—Å—Ç–æ–º–Ω—ã–µ —Ö—É–∫–∏ –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞
# ========================================

Write-ColorOutput "`nüé£ –≠—Ç–∞–ø 5: –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —Ö—É–∫–æ–≤..." 'Title'

# Hook –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–∞—à–±–æ—Ä–¥–∞
$DashboardStateHook = @'
/**
 * @file hooks/useDashboardState.ts
 * @description –•—É–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –¥–∞—à–±–æ—Ä–¥–∞ —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π
 */

import { useState, useCallback, useReducer, useMemo } from 'react'
import { DashboardState, DashboardAction, DashboardTab, DashboardStats } from '../../types/dashboard/types'
import { DashboardStorage } from '../../services/dashboard/storage'

// ===========================
# üéØ –ù–ê–ß–ê–õ–¨–ù–û–ï –°–û–°–¢–û–Ø–ù–ò–ï
# ===========================

const INITIAL_STATE: DashboardState = {
  activeTab: 'overview',
  stats: { materials: 0, products: 0, collections: 0, priceLists: 0 },
  statsLoading: true,
  user: null,
  loading: true,
  error: null
} as const

// ===========================
# üîÑ REDUCER –î–õ–Ø –°–û–°–¢–û–Ø–ù–ò–Ø
# ===========================

const dashboardReducer = (state: DashboardState, action: DashboardAction): DashboardState => {
  switch (action.type) {
    case 'SET_LOADING':
      return { ...state, loading: action.payload }
    
    case 'SET_USER':
      return { ...state, user: action.payload, loading: false }
    
    case 'SET_ACTIVE_TAB':
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
      DashboardStorage.setActiveTab(action.payload)
      return { ...state, activeTab: action.payload }
    
    case 'SET_STATS':
      return { ...state, stats: { ...action.payload, lastUpdated: new Date() } }
    
    case 'SET_ERROR':
      return { ...state, error: action.payload, loading: false }
    
    case 'SET_STATS_LOADING':
      return { ...state, statsLoading: action.payload }
    
    default:
      return state
  }
}

// ===========================
# üé£ –û–°–ù–û–í–ù–û–ô –•–£–ö –°–û–°–¢–û–Ø–ù–ò–Ø
# ===========================

export const useDashboardState = () => {
  const [state, dispatch] = useReducer(dashboardReducer, INITIAL_STATE)

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const initializeState = useCallback(() => {
    // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É
    const savedTab = DashboardStorage.getActiveTab()
    if (savedTab) {
      dispatch({ type: 'SET_ACTIVE_TAB', payload: savedTab })
    }

    // –ü–æ–ø—ã—Ç–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const testUser = DashboardStorage.getTestUser()
    const supabaseUser = DashboardStorage.getSupabaseUser()
    
    const user = testUser || supabaseUser
    if (user) {
      dispatch({ type: 'SET_USER', payload: user })
    } else {
      dispatch({ type: 'SET_LOADING', payload: false })
    }
  }, [])

  // –î–µ–π—Å—Ç–≤–∏—è
  const actions = useMemo(() => ({
    setLoading: (loading: boolean) => dispatch({ type: 'SET_LOADING', payload: loading }),
    setUser: (user: DashboardState['user']) => dispatch({ type: 'SET_USER', payload: user }),
    setActiveTab: (tab: DashboardTab) => dispatch({ type: 'SET_ACTIVE_TAB', payload: tab }),
    setStats: (stats: DashboardStats) => dispatch({ type: 'SET_STATS', payload: stats }),
    setError: (error: string | null) => dispatch({ type: 'SET_ERROR', payload: error }),
    setStatsLoading: (loading: boolean) => dispatch({ type: 'SET_STATS_LOADING', payload: loading }),
    initializeState
  }), [initializeState])

  return { state, actions }
}

// ===========================
# üé£ –•–£–ö –î–õ–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ò
# ===========================

export const useDashboardStats = () => {
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState<string | null>(null)

  const loadStats = useCallback(async (): Promise<DashboardStats> => {
    try {
      setLoading(true)
      setError(null)

      // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–µ—à
      const cached = DashboardStorage.getCachedStats()
      if (cached && DashboardStorage.isCacheValid(cached)) {
        setLoading(false)
        return cached.data
      }

      // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
      await new Promise(resolve => setTimeout(resolve, 1000))

      const stats: DashboardStats = {
        materials: 1248,
        products: 342,
        collections: 28,
        priceLists: 156,
        lastUpdated: new Date()
      }

      // –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –Ω–∞ 5 –º–∏–Ω—É—Ç
      DashboardStorage.setCachedStats(stats, 300000)
      
      setLoading(false)
      return stats
    } catch (err) {
      const errorMessage = err instanceof Error ? err.message : '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏'
      setError(errorMessage)
      setLoading(false)
      throw err
    }
  }, [])

  const refreshStats = useCallback(() => {
    return loadStats()
  }, [loadStats])

  return { loading, error, loadStats, refreshStats }
}

// ===========================
# üé£ –•–£–ö –î–õ–Ø –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò
# ===========================

export const usePerformanceMetrics = () => {
  const [metrics, setMetrics] = useState({
    loadTime: 0,
    tabSwitchTime: 0,
    lastUpdate: new Date(),
    memoryUsage: 0
  })

  const startTimer = useCallback(() => {
    return performance.now()
  }, [])

  const endTimer = useCallback((startTime: number, operation: string) => {
    const duration = performance.now() - startTime
    
    setMetrics(prev => ({
      ...prev,
      [operation === 'load' ? 'loadTime' : 'tabSwitchTime']: duration,
      lastUpdate: new Date(),
      memoryUsage: (performance as any).memory?.usedJSHeapSize || 0
    }))

    console.log(`‚ö° ${operation}: ${duration.toFixed(2)}ms`)
    return duration
  }, [])

  const logMetrics = useCallback(() => {
    console.group('üìä Dashboard Performance Metrics')
    console.log('Load Time:', `${metrics.loadTime.toFixed(2)}ms`)
    console.log('Tab Switch Time:', `${metrics.tabSwitchTime.toFixed(2)}ms`)
    console.log('Memory Usage:', `${(metrics.memoryUsage / 1024 / 1024).toFixed(2)}MB`)
    console.log('Last Update:', metrics.lastUpdate.toISOString())
    console.groupEnd()
  }, [metrics])

  return { metrics, startTimer, endTimer, logMetrics }
}
'@

if (-not $DryRun) {
    Set-Content -Path "$ProjectRoot/src/hooks/dashboard/useDashboardState.ts" -Value $DashboardStateHook -Encoding UTF8
}
Write-ColorOutput "‚úÖ –°–æ–∑–¥–∞–Ω —Ö—É–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–∞—à–±–æ—Ä–¥–∞" 'Success'

# Hook –¥–ª—è –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
$UserPermissionsHook = @'
/**
 * @file hooks/useUserPermissions.ts  
 * @description –•—É–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π
 */

import { useMemo, useCallback } from 'react'
import { UserWithRole, UserRole } from '../../types/dashboard/types'
import { PERMISSIONS_CONFIG, hasTabAccess, getAvailableTabs, isAdminUser } from '../../config/dashboard/permissions'
import { DashboardStorage } from '../../services/dashboard/storage'

// ===========================
# üîí –¢–ò–ü –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò –ü–†–ê–í
# ===========================

interface PermissionsDiagnostics {
  readonly userRole: UserRole | null
  readonly userEmail: string | null
  readonly isAdminByEmail: boolean
  readonly isAdminByRole: boolean
  readonly testUser: any
  readonly supabaseUser: any
  readonly availableTabsCount: number
  readonly adminTabsCount: number
  readonly timestamp: Date
}

interface UserPermissionsResult {
  readonly isAdmin: boolean
  readonly availableTabs: readonly string[]
  readonly diagnostics: PermissionsDiagnostics
  readonly hasPermission: (feature: string) => boolean
  readonly canAccessTab: (tab: string) => boolean
}

// ===========================
# üé£ –•–£–ö –ü–†–ê–í –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
# ===========================

export const useUserPermissions = (user: UserWithRole | null): UserPermissionsResult => {
  // –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–∞–≤
  const diagnostics = useMemo<PermissionsDiagnostics>(() => {
    const testUser = DashboardStorage.getTestUser()
    const supabaseUser = DashboardStorage.getSupabaseUser()
    
    return {
      userRole: user?.role || null,
      userEmail: user?.email || null,
      isAdminByEmail: user?.email ? isAdminUser(user.email) : false,
      isAdminByRole: user?.role === 'admin',
      testUser,
      supabaseUser,
      availableTabsCount: user ? getAvailableTabs(user.role, user.email).length : 0,
      adminTabsCount: Object.values(PERMISSIONS_CONFIG.tabPermissions).filter(p => p.adminOnly).length,
      timestamp: new Date()
    }
  }, [user])

  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –ø—Ä–∞–≤
  const isAdmin = useMemo(() => {
    if (!user) return false

    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∞
    if (user.role === 'admin') {
      console.log('‚úÖ Admin –ø—Ä–∞–≤–∞ –ø–æ —Ä–æ–ª–∏:', user.role)
      return true
    }

    // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ email
    if (user.email && isAdminUser(user.email)) {
      console.log('‚úÖ Admin –ø—Ä–∞–≤–∞ –ø–æ email:', user.email)
      return true
    }

    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ localStorage (test-user)
    const testUser = DashboardStorage.getTestUser()
    if (testUser?.role === 'admin') {
      console.log('‚úÖ Admin –ø—Ä–∞–≤–∞ —á–µ—Ä–µ–∑ test-user:', testUser)
      return true
    }

    // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ localStorage (supabase-user)
    const supabaseUser = DashboardStorage.getSupabaseUser()
    if (supabaseUser?.role === 'admin') {
      console.log('‚úÖ Admin –ø—Ä–∞–≤–∞ —á–µ—Ä–µ–∑ supabase-user:', supabaseUser)
      return true
    }

    console.log('‚ùå –ù–µ—Ç admin –ø—Ä–∞–≤:', diagnostics)
    return false
  }, [user, diagnostics])

  // –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏
  const availableTabs = useMemo(() => {
    if (!user) return []
    return getAvailableTabs(user.role, user.email)
  }, [user])

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º
  const hasPermission = useCallback((feature: string): boolean => {
    if (!user) return false
    if (isAdmin) return true
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    return user.permissions?.includes(feature) || false
  }, [user, isAdmin])

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –≤–∫–ª–∞–¥–∫–µ
  const canAccessTab = useCallback((tab: string): boolean => {
    if (!user) return false
    return hasTabAccess(tab as any, user.role, user.email)
  }, [user])

  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
  if (process.env.NODE_ENV === 'development') {
    console.group('üîí User Permissions Diagnostics')
    console.log('User:', user)
    console.log('Is Admin:', isAdmin)
    console.log('Available Tabs:', availableTabs.length)
    console.log('Diagnostics:', diagnostics)
    console.groupEnd()
  }

  return {
    isAdmin,
    availableTabs,
    diagnostics,
    hasPermission,
    canAccessTab
  }
}

// ===========================
# üé£ –•–£–ö –§–ò–õ–¨–¢–†–ê–¶–ò–ò –í–ö–õ–ê–î–û–ö
# ===========================

export const useDashboardTabs = (isAdmin: boolean) => {
  return useMemo(() => {
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–º–ø–æ—Ä—Ç TAB_DEFINITIONS –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    // const availableTabs = TAB_DEFINITIONS.filter(tab => !tab.adminOnly || isAdmin)
    
    console.log('üîç –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –≤–∫–ª–∞–¥–æ–∫:', {
      isAdmin,
      // totalTabs: TAB_DEFINITIONS.length,
      // availableTabs: availableTabs.length,
    })

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏
    return [] // –ó–∞–≥–ª—É—à–∫–∞, –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω–∞ –ø—Ä–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
  }, [isAdmin])
}

// ===========================
# üé£ –•–£–ö –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò
# ===========================

export const useAuth = () => {
  const logout = useCallback(async () => {
    try {
      // –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
      DashboardStorage.clearAuthData()
      DashboardStorage.clearDashboardData()

      // –í—ã—Ö–æ–¥ –∏–∑ Supabase
      const { supabase } = await import('../../lib/supabase')
      await supabase.auth.signOut()

      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ login
      window.location.href = '/login'
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ:', error)
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
      window.location.href = '/login'
    }
  }, [])

  const login = useCallback(async (email: string, password: string) => {
    try {
      const { supabase } = await import('../../lib/supabase')
      const { data, error } = await supabase.auth.signInWithPassword({
        email,
        password
      })

      if (error) throw error
      return data.user
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', error)
      throw error
    }
  }, [])

  return { login, logout }
}
'@

if (-not $DryRun) {
    Set-Content -Path "$ProjectRoot/src/hooks/dashboard/useUserPermissions.ts" -Value $UserPermissionsHook -Encoding UTF8
}
Write-ColorOutput "‚úÖ –°–æ–∑–¥–∞–Ω —Ö—É–∫ –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π" 'Success'

# ========================================
# –≠—Ç–∞–ø 6: –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–∞—à–±–æ—Ä–¥–∞
# ========================================

Write-ColorOutput "`nüåê –≠—Ç–∞–ø 6: –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–∞—à–±–æ—Ä–¥–∞..." 'Title'

$DashboardContext = @'
/**
 * @file context/DashboardContext.tsx
 * @description React Context –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞ —Å —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é
 */

import React, { createContext, useContext, useEffect, ReactNode } from 'react'
import { DashboardState, UserWithRole } from '../types/dashboard/types'
import { useDashboardState, usePerformanceMetrics } from '../hooks/dashboard/useDashboardState'
import { useUserPermissions } from '../hooks/dashboard/useUserPermissions'
import { getCurrentUserWithRole } from '../lib/auth'

// ===========================
# üéØ –¢–ò–ü–´ –ö–û–ù–¢–ï–ö–°–¢–ê
# ===========================

interface DashboardContextValue {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ
  readonly state: DashboardState
  readonly isAdmin: boolean
  readonly availableTabs: readonly string[]

  // –î–µ–π—Å—Ç–≤–∏—è
  readonly actions: {
    readonly setLoading: (loading: boolean) => void
    readonly setUser: (user: UserWithRole | null) => void
    readonly setActiveTab: (tab: string) => void
    readonly setStats: (stats: any) => void
    readonly setError: (error: string | null) => void
    readonly setStatsLoading: (loading: boolean) => void
    readonly initializeState: () => void
  }

  // –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
  readonly permissions: {
    readonly hasPermission: (feature: string) => boolean
    readonly canAccessTab: (tab: string) => boolean
    readonly diagnostics: any
  }

  // –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  readonly metrics: {
    readonly data: any
    readonly startTimer: () => number
    readonly endTimer: (startTime: number, operation: string) => number
    readonly logMetrics: () => void
  }
}

// ===========================
# üåê –ö–û–ù–¢–ï–ö–°–¢ –ò –ü–†–û–í–ê–ô–î–ï–†
# ===========================

const DashboardContext = createContext<DashboardContextValue | null>(null)

interface DashboardProviderProps {
  readonly children: ReactNode
}

export const DashboardProvider: React.FC<DashboardProviderProps> = ({ children }) => {
  // –•—É–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const { state, actions } = useDashboardState()
  const permissions = useUserPermissions(state.user)
  const performanceMetrics = usePerformanceMetrics()

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    const initTimer = performanceMetrics.startTimer()
    
    const initializeAsync = async () => {
      try {
        // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–∑ localStorage
        actions.initializeState()

        // –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const user = await getCurrentUserWithRole()
        if (user) {
          actions.setUser(user)
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞—à–±–æ—Ä–¥–∞:', error)
        actions.setError('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏')
      } finally {
        performanceMetrics.endTimer(initTimer, 'load')
      }
    }

    initializeAsync()
  }, [actions, performanceMetrics])

  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ dev —Ä–µ–∂–∏–º–µ
  useEffect(() => {
    if (process.env.NODE_ENV === 'development') {
      console.group('üéØ Dashboard Context Update')
      console.log('State:', state)
      console.log('Is Admin:', permissions.isAdmin)
      console.log('Available Tabs:', permissions.availableTabs.length)
      console.groupEnd()
    }
  }, [state, permissions])

  const contextValue: DashboardContextValue = {
    state,
    isAdmin: permissions.isAdmin,
    availableTabs: permissions.availableTabs,
    actions,
    permissions: {
      hasPermission: permissions.hasPermission,
      canAccessTab: permissions.canAccessTab,
      diagnostics: permissions.diagnostics
    },
    metrics: {
      data: performanceMetrics.metrics,
      startTimer: performanceMetrics.startTimer,
      endTimer: performanceMetrics.endTimer,
      logMetrics: performanceMetrics.logMetrics
    }
  }

  return (
    <DashboardContext.Provider value={contextValue}>
      {children}
    </DashboardContext.Provider>
  )
}

// ===========================
# üé£ –•–£–ö –î–õ–Ø –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø –ö–û–ù–¢–ï–ö–°–¢–ê
# ===========================

export const useDashboard = (): DashboardContextValue => {
  const context = useContext(DashboardContext)
  
  if (!context) {
    throw new Error('useDashboard –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤–Ω—É—Ç—Ä–∏ DashboardProvider')
  }
  
  return context
}

// ===========================
# üéØ HOC –î–õ–Ø –û–ë–ï–†–¢–ö–ò –ö–û–ú–ü–û–ù–ï–ù–¢–û–í
# ===========================

export function withDashboard<P extends object>(
  Component: React.ComponentType<P>
): React.FC<P> {
  const WrappedComponent = (props: P) => {
    const dashboard = useDashboard()
    return <Component {...props} dashboard={dashboard} />
  }
  
  WrappedComponent.displayName = `withDashboard(${Component.displayName || Component.name})`
  return WrappedComponent
}

// ===========================
# üõ°Ô∏è –ö–û–ú–ü–û–ù–ï–ù–¢ –ó–ê–©–ò–¢–´ –ú–ê–†–®–†–£–¢–û–í
# ===========================

interface RouteGuardProps {
  readonly children: ReactNode
  readonly requireAdmin?: boolean
  readonly requiredPermission?: string
  readonly fallback?: ReactNode
}

export const RouteGuard: React.FC<RouteGuardProps> = ({
  children,
  requireAdmin = false,
  requiredPermission,
  fallback = <div>–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞</div>
}) => {
  const { isAdmin, permissions } = useDashboard()

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –ø—Ä–∞–≤
  if (requireAdmin && !isAdmin) {
    return <>{fallback}</>
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
  if (requiredPermission && !permissions.hasPermission(requiredPermission)) {
    return <>{fallback}</>
  }

  return <>{children}</>
}
'@

if (-not $DryRun) {
    Set-Content -Path "$ProjectRoot/src/context/dashboard/DashboardContext.tsx" -Value $DashboardContext -Encoding UTF8
}
Write-ColorOutput "‚úÖ –°–æ–∑–¥–∞–Ω –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–∞—à–±–æ—Ä–¥–∞" 'Success'

# ========================================
# –≠—Ç–∞–ø 7: –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–∞—à–±–æ—Ä–¥–∞
# ========================================

Write-ColorOutput "`nüß© –≠—Ç–∞–ø 7: –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–∞—à–±–æ—Ä–¥–∞..." 'Title'

# DashboardHeader –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
$DashboardHeader = @'
/**
 * @file components/Dashboard/DashboardHeader.tsx
 * @description –®–∞–ø–∫–∞ –¥–∞—à–±–æ—Ä–¥–∞ —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
 */

import React from 'react'
import { Button } from '../ui/button'
import { LogOut, Settings, User as UserIcon } from 'lucide-react'
import { Card } from '../ui/card'
import { useDashboard } from '../../context/dashboard/DashboardContext'
import { useAuth } from '../../hooks/dashboard/useUserPermissions'

// ===========================
# üé® –ö–û–ú–ü–û–ù–ï–ù–¢ –®–ê–ü–ö–ò –î–ê–®–ë–û–†–î–ê
# ===========================

export const DashboardHeader: React.FC = React.memo(() => {
  const { state, isAdmin } = useDashboard()
  const { logout } = useAuth()

  const handleLogout = async () => {
    try {
      await logout()
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞:', error)
    }
  }

  return (
    <header className="sticky top-0 z-50 w-full border-b bg-white/95 backdrop-blur supports-[backdrop-filter]:bg-white/60">
      <div className="container mx-auto px-4">
        <div className="flex h-16 items-center justify-between">
          {/* –õ–æ–≥–æ—Ç–∏–ø –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ */}
          <div className="flex items-center space-x-4">
            <div className="flex items-center space-x-2">
              <div className="flex h-8 w-8 items-center justify-center rounded-md bg-blue-600 text-white font-bold">
                W
              </div>
              <div>
                <div className="font-semibold text-gray-900">WASSER</div>
                <div className="text-xs text-gray-500">–ú–µ–±–µ–ª—å–Ω–∞—è –§–∞–±—Ä–∏–∫–∞</div>
              </div>
            </div>
          </div>

          {/* –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è */}
          <nav className="hidden md:flex items-center space-x-6">
            <span className="text-sm text-gray-600">–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</span>
            {isAdmin && (
              <span className="inline-flex items-center px-2 py-1 rounded-full text-xs bg-blue-100 text-blue-800">
                <Settings className="w-3 h-3 mr-1" />
                –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
              </span>
            )}
          </nav>

          {/* –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ –¥–µ–π—Å—Ç–≤–∏—è */}
          <div className="flex items-center space-x-4">
            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ */}
            <Card className="px-3 py-1.5 hidden sm:flex items-center space-x-2 border-gray-200">
              <UserIcon className="w-4 h-4 text-gray-600" />
              <div className="text-xs">
                <div className="font-medium text-gray-900 truncate max-w-[120px]" title={state.user?.email || '–ì–æ—Å—Ç—å'}>
                  {state.user?.email || '–ì–æ—Å—Ç—å'}
                </div>
                <div className="text-gray-500">
                  {state.user?.role ? String(state.user.role) : 'no-role'}
                </div>
              </div>
            </Card>

            {/* –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ */}
            <Button
              variant="outline"
              onClick={handleLogout}
              className="bg-transparent hover:bg-red-50 hover:border-red-200 hover:text-red-700"
              title="–í—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã"
            >
              <LogOut className="w-4 h-4 mr-2" />
              <span className="hidden md:inline">–í—ã–π—Ç–∏</span>
            </Button>
          </div>
        </div>
      </div>
    </header>
  )
})

DashboardHeader.displayName = 'DashboardHeader'
'@

# DashboardTabs –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
$DashboardTabs = @'
/**
 * @file components/Dashboard/DashboardTabs.tsx
 * @description –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –≤–∫–ª–∞–¥–∫–∞–º –¥–∞—à–±–æ—Ä–¥–∞
 */

import React, { useCallback } from 'react'
import { DashboardTab, TabDefinition } from '../../types/dashboard/types'
import { useDashboard } from '../../context/dashboard/DashboardContext'

// ===========================
# üéØ –ò–ù–¢–ï–†–§–ï–ô–°–´ –ö–û–ú–ü–û–ù–ï–ù–¢–û–í
# ===========================

interface TabButtonProps {
  readonly tab: TabDefinition
  readonly isActive: boolean
  readonly onClick: (key: DashboardTab) => void
}

interface DashboardTabsProps {
  readonly tabDefinitions: readonly TabDefinition[]
}

// ===========================
# üé® –ö–û–ú–ü–û–ù–ï–ù–¢ –ö–ù–û–ü–ö–ò –í–ö–õ–ê–î–ö–ò
# ===========================

const TabButton: React.FC<TabButtonProps> = React.memo(({ tab, isActive, onClick }) => {
  const handleClick = useCallback(() => {
    onClick(tab.key)
  }, [tab.key, onClick])

  return (
    <button
      type="button"
      onClick={handleClick}
      className={`
        inline-flex items-center gap-2 px-3 py-1.5 text-sm font-medium
        border rounded-md transition-all duration-200
        focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-500
        ${
          isActive
            ? 'bg-blue-50 border-blue-200 text-blue-700 shadow-sm'
            : 'bg-white border-gray-200 text-gray-700 hover:bg-gray-50 hover:border-gray-300'
        }
      `}
      title={tab.description}
      aria-current={isActive ? 'page' : undefined}
    >
      {tab.icon}
      <span>{tab.label}</span>
    </button>
  )
})

TabButton.displayName = 'TabButton'

// ===========================
# üé® –û–°–ù–û–í–ù–û–ô –ö–û–ú–ü–û–ù–ï–ù–¢ –ù–ê–í–ò–ì–ê–¶–ò–ò
# ===========================

export const DashboardTabs: React.FC<DashboardTabsProps> = React.memo(({ tabDefinitions }) => {
  const { state, actions, isAdmin, metrics } = useDashboard()

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –≤–∫–ª–∞–¥–æ–∫ –ø–æ –ø—Ä–∞–≤–∞–º –¥–æ—Å—Ç—É–ø–∞
  const availableTabs = React.useMemo(() => {
    return tabDefinitions.filter(tab => !tab.adminOnly || isAdmin)
  }, [tabDefinitions, isAdmin])

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–º–µ–Ω—ã –≤–∫–ª–∞–¥–∫–∏ —Å –º–µ—Ç—Ä–∏–∫–∞–º–∏
  const handleTabChange = useCallback((tabKey: DashboardTab) => {
    const startTime = metrics.startTimer()
    
    actions.setActiveTab(tabKey)
    
    // –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    requestAnimationFrame(() => {
      metrics.endTimer(startTime, 'tabSwitch')
    })
  }, [actions, metrics])

  if (availableTabs.length === 0) {
    return null
  }

  return (
    <div className="mb-6">
      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –≤–∫–ª–∞–¥–∫–∞–º */}
      <div className="flex flex-wrap gap-2 mb-4">
        {availableTabs.map(tab => (
          <TabButton
            key={tab.key}
            tab={tab}
            isActive={tab.key === state.activeTab}
            onClick={handleTabChange}
          />
        ))}
      </div>

      {/* –•–ª–µ–±–Ω—ã–µ –∫—Ä–æ—à–∫–∏ */}
      <div className="flex items-center space-x-2 text-sm text-gray-600">
        <span>–ì–ª–∞–≤–Ω–∞—è</span>
        <span className="text-gray-400">/</span>
        <span className="font-medium text-gray-900">
          {availableTabs.find(tab => tab.key === state.activeTab)?.label || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞'}
        </span>
      </div>
    </div>
  )
})

DashboardTabs.displayName = 'DashboardTabs'
'@

# DashboardContent –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
$DashboardContent = @'
/**
 * @file components/Dashboard/DashboardContent.tsx
 * @description –ö–æ–Ω—Ç–µ–Ω—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏ –¥–∞—à–±–æ—Ä–¥–∞
 */

import React, { Suspense } from 'react'
import { Loader2 } from 'lucide-react'
import { TabDefinition } from '../../types/dashboard/types'
import { useDashboard } from '../../context/dashboard/DashboardContext'
import { Card, CardContent, CardHeader, CardTitle } from '../ui/card'
import { Button } from '../ui/button'

// ===========================
# üéØ –ò–ù–¢–ï–†–§–ï–ô–°–´
# ===========================

interface DashboardContentProps {
  readonly tabDefinitions: readonly TabDefinition[]
}

// ===========================
# üé® –ö–û–ú–ü–û–ù–ï–ù–¢–´ –ó–ê–ì–†–£–ó–ö–ò –ò –û–®–ò–ë–û–ö
# ===========================

const ComponentLoader: React.FC = React.memo(() => (
  <div className="flex items-center justify-center p-8">
    <Loader2 className="w-6 h-6 animate-spin text-blue-600" />
    <span className="ml-2 text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞...</span>
  </div>
))

ComponentLoader.displayName = 'ComponentLoader'

const ErrorBoundaryFallback: React.FC<{ error?: string; onRetry?: () => void }> = ({ error, onRetry }) => (
  <Card className="border-red-200 bg-red-50">
    <CardHeader>
      <CardTitle className="text-red-600">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞</CardTitle>
    </CardHeader>
    <CardContent>
      {error && <p className="text-gray-600 mb-4">{error}</p>}
      {onRetry && (
        <Button onClick={onRetry} variant="outline">
          –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
        </Button>
      )}
    </CardContent>
  </Card>
)

const AccessDenied: React.FC = () => (
  <Card className="border-yellow-200 bg-yellow-50">
    <CardHeader>
      <CardTitle className="text-yellow-600">–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞</CardTitle>
    </CardHeader>
    <CardContent>
      <p className="text-gray-600">
        –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
      </p>
    </CardContent>
  </Card>
)

// ===========================
# üé® –û–°–ù–û–í–ù–û–ô –ö–û–ú–ü–û–ù–ï–ù–¢ –ö–û–ù–¢–ï–ù–¢–ê
# ===========================

export const DashboardContent: React.FC<DashboardContentProps> = React.memo(({ tabDefinitions }) => {
  const { state, isAdmin } = useDashboard()

  // –ù–∞–π—Ç–∏ –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É
  const activeTab = React.useMemo(() => {
    const availableTabs = tabDefinitions.filter(tab => !tab.adminOnly || isAdmin)
    return availableTabs.find(tab => tab.key === state.activeTab) || availableTabs[0]
  }, [tabDefinitions, state.activeTab, isAdmin])

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞
  if (activeTab?.adminOnly && !isAdmin) {
    return <AccessDenied />
  }

  // –ï—Å–ª–∏ –≤–∫–ª–∞–¥–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
  if (!activeTab) {
    return (
      <Card>
        <CardContent className="p-8 text-center">
          <p className="text-gray-600">–í–∫–ª–∞–¥–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</p>
        </CardContent>
      </Card>
    )
  }

  // –†–µ–Ω–¥–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
  const ActiveComponent = activeTab.component

  return (
    <div className="space-y-6">
      <Suspense fallback={<ComponentLoader />}>
        <ActiveComponent />
      </Suspense>
    </div>
  )
})

DashboardContent.displayName = 'DashboardContent'
'@

if (-not $DryRun) {
    Set-Content -Path "$ProjectRoot/src/components/Dashboard/DashboardHeader.tsx" -Value $DashboardHeader -Encoding UTF8
    Set-Content -Path "$ProjectRoot/src/components/Dashboard/DashboardTabs.tsx" -Value $DashboardTabs -Encoding UTF8
    Set-Content -Path "$ProjectRoot/src/components/Dashboard/DashboardContent.tsx" -Value $DashboardContent -Encoding UTF8
}
Write-ColorOutput "‚úÖ –°–æ–∑–¥–∞–Ω—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–∞—à–±–æ—Ä–¥–∞" 'Success'

# ========================================
# –≠—Ç–∞–ø 8: –†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ Dashboard.tsx
# ========================================

Write-ColorOutput "`nüîß –≠—Ç–∞–ø 8: –†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ Dashboard.tsx..." 'Title'

# Backup —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ñ–∞–π–ª–∞
$originalDashboard = "$ProjectRoot/src/pages/Dashboard.tsx"
if (Test-Path $originalDashboard) {
    Backup-File $originalDashboard
}

$RefactoredDashboard = @'
/**
 * @file pages/Dashboard.tsx
 * @description –†–µ—Ñ–∞–∫—Ç–æ—Ä–µ–Ω–Ω—ã–π –¥–∞—à–±–æ—Ä–¥ WASSER —Å –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π
 * 
 * –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
 * - –ß–∏—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞
 * - –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
 * - –¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–∞—è –º–æ–¥—É–ª—å–Ω–æ—Å—Ç—å
 * - –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
 */

import React, { Suspense, lazy, memo } from 'react'
import { useNavigate } from 'react-router'
import {
  Package,
  Settings,
  Upload,
  FileText,
  Database,
  Users,
  Eye,
  Gauge,
  PaintBucket,
  Percent,
  Waves,
  Boxes,
  Loader2
} from 'lucide-react'

// Context –∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã
import { DashboardProvider, useDashboard } from '../context/dashboard/DashboardContext'

// –ú–æ–¥—É–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
import { DashboardHeader } from '../components/Dashboard/DashboardHeader'
import { DashboardTabs } from '../components/Dashboard/DashboardTabs'
import { DashboardContent } from '../components/Dashboard/DashboardContent'

// UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../components/ui/card'
import SupabaseStatus from '../components/SupabaseStatus'

// –¢–∏–ø—ã
import { TabDefinition } from '../types/dashboard/types'

// ===========================
# üé® –õ–ï–ù–ò–í–ê–Ø –ó–ê–ì–†–£–ó–ö–ê –ö–û–ú–ü–û–ù–ï–ù–¢–û–í
# ===========================

// –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
const PriceListGenerator = lazy(() => import('../components/PriceListGenerator'))

// –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã  
const FileUpload = lazy(() => import('../components/FileUpload'))
const MaterialsManager = lazy(() => import('../components/MaterialsManager'))
const ProductManager = lazy(() => import('../components/ProductManager'))
const CollectionsManager = lazy(() => import('../components/CollectionsManager'))
const ProductTypesManager = lazy(() => import('../components/ProductTypesManager'))
const UserManagement = lazy(() => import('../components/UserManagement'))
const TechCardHistory = lazy(() => import('../components/TechCardHistory'))

// –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
const PaintRecipesManager = lazy(() => import('../components/PaintRecipesManager'))
const MarkupRulesManager = lazy(() => import('../components/MarkupRulesManager'))
const SinksManager = lazy(() => import('../components/SinksManager'))
const SetsManager = lazy(() => import('../components/SetsManager'))

// ===========================
# üéØ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –í–ö–õ–ê–î–û–ö
# ===========================

/** –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –æ–±–∑–æ—Ä–∞ —Å –º–µ–º–æ–∏–∑–∞—Ü–∏–µ–π */
const OverviewContent: React.FC = memo(() => {
  const { state } = useDashboard()
  
  return (
    <div className="space-y-6">
      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
        <Card>
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium text-gray-600">–ú–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –≤ –±–∞–∑–µ</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-blue-600">
              {state.stats.materials.toLocaleString()}
            </div>
            <p className="text-xs text-gray-500 mt-1">–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π</p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium text-gray-600">–ò–∑–¥–µ–ª–∏–π</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-green-600">
              {state.stats.products.toLocaleString()}
            </div>
            <p className="text-xs text-gray-500 mt-1">–í –∫–∞—Ç–∞–ª–æ–≥–µ</p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium text-gray-600">–ö–æ–ª–ª–µ–∫—Ü–∏–π</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-purple-600">
              {state.stats.collections}
            </div>
            <p className="text-xs text-gray-500 mt-1">–ê–∫—Ç–∏–≤–Ω—ã—Ö</p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium text-gray-600">–ü—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–≤</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-orange-600">
              {state.stats.priceLists.toLocaleString()}
            </div>
            <p className="text-xs text-gray-500 mt-1">–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ</p>
          </CardContent>
        </Card>
      </div>

      {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
      <Card>
        <CardHeader>
          <CardTitle>üöÄ –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</CardTitle>
          <CardDescription>–ù–∞–∏–±–æ–ª–µ–µ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div className="p-4 border rounded-lg hover:bg-gray-50 cursor-pointer">
              <FileText className="w-6 h-6 text-blue-600 mb-2" />
              <h3 className="font-medium">–°–æ–∑–¥–∞—Ç—å –ø—Ä–∞–π—Å-–ª–∏—Å—Ç</h3>
              <p className="text-sm text-gray-600">–ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞</p>
            </div>
            <div className="p-4 border rounded-lg hover:bg-gray-50 cursor-pointer">
              <Package className="w-6 h-6 text-green-600 mb-2" />
              <h3 className="font-medium">–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç</h3>
              <p className="text-sm text-gray-600">–ù–æ–≤–æ–µ –∏–∑–¥–µ–ª–∏–µ –≤ –∫–∞—Ç–∞–ª–æ–≥</p>
            </div>
            <div className="p-4 border rounded-lg hover:bg-gray-50 cursor-pointer">
              <Database className="w-6 h-6 text-purple-600 mb-2" />
              <h3 className="font-medium">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏</h3>
              <p className="text-sm text-gray-600">–ë–∞–∑–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ —Ü–µ–Ω—ã</p>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  )
})

OverviewContent.displayName = 'OverviewContent'

/** –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ */
const ComponentLoader: React.FC = memo(() => (
  <div className="flex items-center justify-center p-8">
    <Loader2 className="w-6 h-6 animate-spin text-blue-600" />
    <span className="ml-2 text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞...</span>
  </div>
))

ComponentLoader.displayName = 'ComponentLoader'

/** –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤—Å–µ—Ö –≤–∫–ª–∞–¥–æ–∫ */
const TAB_DEFINITIONS: readonly TabDefinition[] = [
  // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –≤–∫–ª–∞–¥–∫–∏
  {
    key: 'overview',
    label: '–û–±–∑–æ—Ä',
    icon: <Gauge className="w-4 h-4" />,
    description: '–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –±—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è',
    adminOnly: false,
    component: OverviewContent
  },
  {
    key: 'generator',
    label: '–ü—Ä–∞–π—Å-–ª–∏—Å—Ç',
    icon: <FileText className="w-4 h-4" />,
    description: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–≤ –≤ PDF',
    adminOnly: false,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <PriceListGenerator />
      </Suspense>
    ))
  },
  {
    key: 'labels',
    label: '–≠—Ç–∏–∫–µ—Ç–∫–∏',
    icon: <Package className="w-4 h-4" />,
    description: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —ç—Ç–∏–∫–µ—Ç–æ–∫ –¥–ª—è –ø—Ä–æ–¥—É–∫—Ü–∏–∏',
    adminOnly: false,
    component: memo(() => (
      <div className="p-8 text-center text-gray-600">
        –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —ç—Ç–∏–∫–µ—Ç–æ–∫ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)
      </div>
    ))
  },

  // –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏
  {
    key: 'upload',
    label: '–ó–∞–≥—Ä—É–∑–∫–∞',
    icon: <Upload className="w-4 h-4" />,
    description: '–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ Excel —Ñ–∞–π–ª–æ–≤',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <FileUpload />
      </Suspense>
    ))
  },
  {
    key: 'materials',
    label: '–ú–∞—Ç–µ—Ä–∏–∞–ª—ã',
    icon: <Database className="w-4 h-4" />,
    description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–π –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <MaterialsManager />
      </Suspense>
    ))
  },
  {
    key: 'products',
    label: '–ü—Ä–æ–¥—É–∫—Ü–∏—è',
    icon: <Package className="w-4 h-4" />,
    description: '–ö–∞—Ç–∞–ª–æ–≥ –∏–∑–¥–µ–ª–∏–π –∏ —Ç–µ—Ö–∫–∞—Ä—Ç—ã',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <ProductManager />
      </Suspense>
    ))
  },
  {
    key: 'collections',
    label: '–ö–æ–ª–ª–µ–∫—Ü–∏–∏',
    icon: <Settings className="w-4 h-4" />,
    description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏—è–º–∏ –º–µ–±–µ–ª–∏',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <CollectionsManager />
      </Suspense>
    ))
  },
  {
    key: 'types',
    label: '–¢–∏–ø—ã',
    icon: <Settings className="w-4 h-4" />,
    description: '–¢–∏–ø—ã –∏ –≤–∏–¥—ã –ø—Ä–æ–¥—É–∫—Ü–∏–∏',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <ProductTypesManager />
      </Suspense>
    ))
  },

  // –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏
  {
    key: 'paint',
    label: '–û–∫—Ä–∞—Å–∫–∞',
    icon: <PaintBucket className="w-4 h-4" />,
    description: '–†–µ—Ü–µ–ø—Ç—ã –æ–∫—Ä–∞—Å–∫–∏ –∏ –ø–æ–∫—Ä—ã—Ç–∏–π',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <PaintRecipesManager />
      </Suspense>
    ))
  },
  {
    key: 'markup',
    label: '–ù–∞—Ü–µ–Ω–∫–∞',
    icon: <Percent className="w-4 h-4" />,
    description: '–ü—Ä–∞–≤–∏–ª–∞ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <MarkupRulesManager />
      </Suspense>
    ))
  },
  {
    key: 'sinks',
    label: '–†–∞–∫–æ–≤–∏–Ω—ã',
    icon: <Waves className="w-4 h-4" />,
    description: '–ö–∞—Ç–∞–ª–æ–≥ —Ä–∞–∫–æ–≤–∏–Ω –∏ —Å–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∏',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <SinksManager />
      </Suspense>
    ))
  },
  {
    key: 'sets',
    label: '–ö–æ–º–ø–ª–µ–∫—Ç—ã',
    icon: <Boxes className="w-4 h-4" />,
    description: '–ù–∞–±–æ—Ä—ã –∏ –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <SetsManager />
      </Suspense>
    ))
  },

  // –°–∏—Å—Ç–µ–º–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏
  {
    key: 'history',
    label: '–ò—Å—Ç–æ—Ä–∏—è',
    icon: <Eye className="w-4 h-4" />,
    description: '–ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å–∏—Å—Ç–µ–º—ã',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <TechCardHistory />
      </Suspense>
    ))
  },
  {
    key: 'users',
    label: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
    icon: <Users className="w-4 h-4" />,
    description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ —Ä–æ–ª—è–º–∏',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <UserManagement />
      </Suspense>
    ))
  }
] as const

// ===========================
# üé® –í–ù–£–¢–†–ï–ù–ù–ò–ô –ö–û–ú–ü–û–ù–ï–ù–¢ –î–ê–®–ë–û–†–î–ê  
# ===========================

const DashboardInner: React.FC = memo(() => {
  const { state } = useDashboard()

  // –≠–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏
  if (state.loading) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-50">
        <div className="text-center">
          <Loader2 className="w-8 h-8 animate-spin text-blue-600 mx-auto mb-4" />
          <div className="text-lg text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è...</div>
          <div className="text-sm text-gray-400 mt-2">WASSER –ú–µ–±–µ–ª—å–Ω–∞—è –§–∞–±—Ä–∏–∫–∞</div>
        </div>
      </div>
    )
  }

  // –≠–∫—Ä–∞–Ω –æ—à–∏–±–∫–∏
  if (state.error) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-50">
        <Card className="w-full max-w-md">
          <CardHeader>
            <CardTitle className="text-red-600">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</CardTitle>
          </CardHeader>
          <CardContent>
            <p className="text-gray-600 mb-4">{state.error}</p>
            <button 
              onClick={() => window.location.reload()}
              className="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700"
            >
              –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
            </button>
          </CardContent>
        </Card>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* –®–∞–ø–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è */}
      <DashboardHeader />

      <main className="container mx-auto px-4 pb-10">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–∞–Ω–µ–ª–∏ */}
        <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4 my-6">
          <div>
            <h1 className="text-3xl font-bold text-gray-900">–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</h1>
            <p className="text-gray-600">
              –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏, –ø—Ä–æ–¥—É–∫—Ü–∏–µ–π –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–≤
            </p>
          </div>
        </div>

        {/* –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è */}
        <div className="mb-4">
          <SupabaseStatus compact />
        </div>

        {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –≤–∫–ª–∞–¥–∫–∞–º */}
        <DashboardTabs tabDefinitions={TAB_DEFINITIONS} />

        {/* –ö–æ–Ω—Ç–µ–Ω—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏ */}
        <DashboardContent tabDefinitions={TAB_DEFINITIONS} />
      </main>
    </div>
  )
})

DashboardInner.displayName = 'DashboardInner'

// ===========================
# üéØ –û–°–ù–û–í–ù–û–ô –ö–û–ú–ü–û–ù–ï–ù–¢ –° –ü–†–û–í–ê–ô–î–ï–†–û–ú
# ===========================

/**
 * Dashboard - –ì–ª–∞–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è WASSER
 * 
 * –†–µ—Ñ–∞–∫—Ç–æ—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π:
 * - –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
 * - –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å –º–µ–º–æ–∏–∑–∞—Ü–∏–µ–π  
 * - –õ–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª–µ–π
 * - –¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞
 * - –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
 */
const Dashboard: React.FC = memo(() => {
  return (
    <DashboardProvider>
      <DashboardInner />
    </DashboardProvider>
  )
})

Dashboard.displayName = 'Dashboard'

export default Dashboard
'@

if (-not $DryRun) {
    Set-Content -Path $originalDashboard -Value $RefactoredDashboard -Encoding UTF8
}
Write-ColorOutput "‚úÖ –†–µ—Ñ–∞–∫—Ç–æ—Ä–µ–Ω –æ—Å–Ω–æ–≤–Ω–æ–π Dashboard.tsx" 'Success'

# ========================================
# –≠—Ç–∞–ø 9: –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
# ========================================

Write-ColorOutput "`nüåç –≠—Ç–∞–ø 9: –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..." 'Title'

$EnvExample = @'
# ========================================
# üèóÔ∏è WASSER Dashboard Environment Variables
# ========================================

# –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ email-–∞–¥—Ä–µ—Å–∞ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)
REACT_APP_ADMIN_EMAILS=admin@wasser.com,sherhan1988hp@gmail.com

# Supabase –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
REACT_APP_SUPABASE_URL=your_supabase_url_here
REACT_APP_SUPABASE_ANON_KEY=your_supabase_anon_key_here

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
REACT_APP_APP_NAME=WASSER Dashboard
REACT_APP_APP_VERSION=2.0.0
REACT_APP_ENVIRONMENT=development

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
REACT_APP_ENABLE_PERFORMANCE_MONITORING=true
REACT_APP_CACHE_TTL=300000

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
REACT_APP_SESSION_TIMEOUT=604800000
REACT_APP_MAX_LOGIN_ATTEMPTS=5

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ UI
REACT_APP_DEFAULT_THEME=light
REACT_APP_ENABLE_ANIMATIONS=true
'@

if (-not $DryRun) {
    Set-Content -Path "$ProjectRoot/.env.example" -Value $EnvExample -Encoding UTF8
    
    # –ï—Å–ª–∏ .env –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞—Ç—å –µ–≥–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–∏–º–µ—Ä–∞
    if (-not (Test-Path "$ProjectRoot/.env")) {
        Copy-Item "$ProjectRoot/.env.example" "$ProjectRoot/.env"
        Write-ColorOutput "‚úÖ –°–æ–∑–¥–∞–Ω .env —Ñ–∞–π–ª –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–∏–º–µ—Ä–∞" 'Success'
    }
}
Write-ColorOutput "‚úÖ –°–æ–∑–¥–∞–Ω—ã —Ñ–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è" 'Success'

# ========================================
# –≠—Ç–∞–ø 10: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ package.json
# ========================================

Write-ColorOutput "`nüì¶ –≠—Ç–∞–ø 10: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ package.json..." 'Title'

$packageJsonPath = "$ProjectRoot/package.json"
if (Test-Path $packageJsonPath) {
    Backup-File $packageJsonPath
    
    # –î–æ–±–∞–≤–∏—Ç—å —Å–∫—Ä–∏–ø—Ç—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    $additionalScripts = @'
,
    "dashboard:dev": "vite --mode development",
    "dashboard:build": "tsc && vite build --mode production",
    "dashboard:preview": "vite preview",
    "dashboard:analyze": "npm run build && npx source-map-explorer 'dist/assets/*.js'",
    "dashboard:test": "vitest",
    "dashboard:lint": "eslint src --ext ts,tsx --report-unused-disable-directives --max-warnings 0",
    "dashboard:type-check": "tsc --noEmit"
'@

    Write-ColorOutput "üì¶ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å —Å–∫—Ä–∏–ø—Ç—ã –≤ package.json:" 'Info'
    Write-Host $additionalScripts -ForegroundColor Gray
}

# ========================================
# –≠—Ç–∞–ø 11: –°–æ–∑–¥–∞–Ω–∏–µ README –¥–ª—è —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞
# ========================================

Write-ColorOutput "`nüìö –≠—Ç–∞–ø 11: –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..." 'Title'

$RefactorReadme = @'
# üèóÔ∏è WASSER Dashboard Refactor

## üìã –û–±–∑–æ—Ä –∏–∑–º–µ–Ω–µ–Ω–∏–π

–î–∞—à–±–æ—Ä–¥ –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏ WASSER –±—ã–ª –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–µ–Ω —Å –ø–µ—Ä–µ—Ö–æ–¥–æ–º –Ω–∞ –º–æ–¥—É–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É.

### ‚úÖ –ß—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å

#### üéØ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è
- **–ú–æ–¥—É–ª—å–Ω–æ—Å—Ç—å**: –†–∞–∑–±–∏–µ–Ω–∏–µ –º–æ–Ω–æ–ª–∏—Ç–Ω–æ–≥–æ Dashboard.tsx –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏
- **Context API**: –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —á–µ—Ä–µ–∑ DashboardContext
- **–¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å**: –°—Ç—Ä–æ–≥–∞—è —Ç–∏–ø–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤
- **–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å**: React.memo, useMemo, useCallback –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏

#### üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
```
src/
‚îú‚îÄ‚îÄ components/Dashboard/         # –ú–æ–¥—É–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–∞—à–±–æ—Ä–¥–∞
‚îÇ   ‚îú‚îÄ‚îÄ DashboardHeader.tsx      # –®–∞–ø–∫–∞ —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
‚îÇ   ‚îú‚îÄ‚îÄ DashboardTabs.tsx        # –í–∫–ª–∞–¥–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
‚îÇ   ‚îî‚îÄ‚îÄ DashboardContent.tsx     # –ö–æ–Ω—Ç–µ–Ω—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
‚îú‚îÄ‚îÄ hooks/dashboard/             # –ö–∞—Å—Ç–æ–º–Ω—ã–µ —Ö—É–∫–∏
‚îÇ   ‚îú‚îÄ‚îÄ useDashboardState.ts     # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
‚îÇ   ‚îî‚îÄ‚îÄ useUserPermissions.ts    # –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
‚îú‚îÄ‚îÄ services/dashboard/          # –ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞
‚îÇ   ‚îî‚îÄ‚îÄ storage.ts               # –†–∞–±–æ—Ç–∞ —Å localStorage
‚îú‚îÄ‚îÄ config/dashboard/            # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
‚îÇ   ‚îî‚îÄ‚îÄ permissions.ts           # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
‚îú‚îÄ‚îÄ context/dashboard/           # React Context
‚îÇ   ‚îî‚îÄ‚îÄ DashboardContext.tsx     # –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–∞—à–±–æ—Ä–¥–∞
‚îî‚îÄ‚îÄ types/dashboard/             # TypeScript —Ç–∏–ø—ã
    ‚îî‚îÄ‚îÄ types.ts                 # –¢–∏–ø—ã –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
```

#### üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
- –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ email –≤—ã–Ω–µ—Å–µ–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
- –¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
- –ó–∞—â–∏—â–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã —Å RouteGuard

#### ‚ö° –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
- –õ–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ React.lazy
- –ú–µ–º–æ–∏–∑–∞—Ü–∏—è –≤—ã—á–∏—Å–ª–µ–Ω–∏–π –∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
- –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ localStorage
- –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

## üöÄ –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å

### 1. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
```bash
cp .env.example .env
# –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å .env —Ñ–∞–π–ª —Å –≤–∞—à–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
```

### 2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
```bash
npm install
```

### 3. –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
```bash
npm run dashboard:dev
```

### 4. –°–±–æ—Ä–∫–∞ –¥–ª—è production
```bash
npm run dashboard:build
```

## üéØ –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏

### –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
- **–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã**: –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º
- **–ú–µ–Ω–µ–¥–∂–µ—Ä—ã**: –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é
- **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏**: –¢–æ–ª—å–∫–æ –ø—Ä–æ—Å–º–æ—Ç—Ä –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–≤

### –ú–æ–¥—É–ª–∏ –¥–∞—à–±–æ—Ä–¥–∞
- **–û–±–∑–æ—Ä**: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –±—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
- **–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–≤**: –°–æ–∑–¥–∞–Ω–∏–µ PDF –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
- **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏**: –ë–∞–∑–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ —Ü–µ–Ω—ã
- **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ü–∏–µ–π**: –ö–∞—Ç–∞–ª–æ–≥ –∏–∑–¥–µ–ª–∏–π
- **–†–µ—Ü–µ–ø—Ç—ã –æ–∫—Ä–∞—Å–∫–∏**: –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–æ–¥—É–ª—å
- **–ü—Ä–∞–≤–∏–ª–∞ –Ω–∞—Ü–µ–Ω–∫–∏**: –¶–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ

## üîß –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞

### –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–∏
1. –°–æ–∑–¥–∞—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≤ `src/components/`
2. –î–æ–±–∞–≤–∏—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤ `TAB_DEFINITIONS`
3. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –≤ `permissions.ts`

### –ö–∞—Å—Ç–æ–º–Ω—ã–µ —Ö—É–∫–∏
- `useDashboard()` - –î–æ—Å—Ç—É–ø –∫ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –¥–∞—à–±–æ—Ä–¥–∞
- `useUserPermissions(user)` - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
- `useDashboardState()` - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º

### –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤—ã—Å—à–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞
- `withDashboard()` - HOC –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
- `RouteGuard` - –ó–∞—â–∏—Ç–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –ø–æ –ø—Ä–∞–≤–∞–º

## üé® –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è

–ü—Ä–æ–µ–∫—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç:
- **Tailwind CSS** –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏
- **shadcn/ui** –¥–ª—è UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤  
- **Lucide React** –¥–ª—è –∏–∫–æ–Ω–æ–∫

## üìä –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

–î–∞—à–±–æ—Ä–¥ –≤–∫–ª—é—á–∞–µ—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –º–µ—Ç—Ä–∏–∫:
- –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
- –í—Ä–µ–º—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫
- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏
- –†–∞–∑–º–µ—Ä localStorage

## üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

```bash
# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
npm run dashboard:test

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤
npm run dashboard:type-check

# –õ–∏–Ω—Ç–∏–Ω–≥
npm run dashboard:lint
```

## üìà –ú–∏–≥—Ä–∞—Ü–∏—è —Å–æ —Å—Ç–∞—Ä–æ–π –≤–µ—Ä—Å–∏–∏

–°—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –ø—Ä–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–µ:
- `Dashboard.tsx.backup.YYYYMMDD_HHMMSS`

–î–ª—è –æ—Ç–∫–∞—Ç–∞ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏:
```bash
mv src/pages/Dashboard.tsx.backup.* src/pages/Dashboard.tsx
```

## üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞

–í dev-—Ä–µ–∂–∏–º–µ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:
- –õ–æ–≥–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª–∏
- –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
- –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

## üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞

–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º:
1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ –æ—à–∏–±–∫–∏
2. –£–±–µ–¥–∏—Ç—å—Å—è –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ .env —Ñ–∞–π–ª–∞
3. –û—á–∏—Å—Ç–∏—Ç—å localStorage: `localStorage.clear()`
'@

if (-not $DryRun) {
    Set-Content -Path "$ProjectRoot/DASHBOARD_REFACTOR_README.md" -Value $RefactorReadme -Encoding UTF8
}
Write-ColorOutput "‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞" 'Success'

# ========================================
# –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
# ========================================

Write-ColorOutput "`nüéâ –†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω!" 'Title'
Write-ColorOutput "===========================================" 'Title'

$summary = @"

üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –†–ï–§–ê–ö–¢–û–†–ò–ù–ì–ê:
‚Ä¢ –°–æ–∑–¥–∞–Ω–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π: $($Directories.Count)
‚Ä¢ –°–æ–∑–¥–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: 12+
‚Ä¢ –°—Ç—Ä–æ–∫ –∫–æ–¥–∞: ~2000+
‚Ä¢ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: 8+
‚Ä¢ –•—É–∫–æ–≤: 4+

üèóÔ∏è –ê–†–•–ò–¢–ï–ö–¢–£–†–ù–´–ï –£–õ–£–ß–®–ï–ù–ò–Ø:
‚úÖ –ú–æ–¥—É–ª—å–Ω–∞—è –¥–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏—è Dashboard.tsx
‚úÖ –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
‚úÖ –¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π  
‚úÖ –ê–±—Å—Ç—Ä–∞–∫—Ü–∏—è localStorage
‚úÖ –ú–µ–º–æ–∏–∑–∞—Ü–∏—è –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è

üîß –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:
1. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å .env —Ñ–∞–π–ª —Å –≤–∞—à–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–º–ø–æ—Ä—Ç—ã –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
3. –ó–∞–ø—É—Å—Ç–∏—Ç—å npm run dashboard:dev –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
4. –î–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç—ã –¥–ª—è –Ω–æ–≤—ã—Ö –º–æ–¥—É–ª–µ–π
5. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å CI/CD —Å –Ω–æ–≤—ã–º–∏ —Å–∫—Ä–∏–ø—Ç–∞–º–∏

üìÅ –°–û–ó–î–ê–ù–ù–ê–Ø –°–¢–†–£–ö–¢–£–†–ê:
$($Directories -join "`n")

üöÄ –ì–û–¢–û–í–û –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ!

"@

Write-ColorOutput $summary 'Success'

if ($DryRun) {
    Write-ColorOutput "`nüí° –≠—Ç–æ –±—ã–ª —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫. –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ -DryRun" 'Warning'
}

Write-ColorOutput "`nüéØ –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞:" 'Info'
Write-ColorOutput "npm run dashboard:dev" 'Title'