/**
 * @file components/TestIntegration.tsx
 * @description –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
 */

import React, { useState } from 'react'
import { DashboardProvider, useDashboard } from '../context/dashboard/DashboardContext'
import { Card, CardContent, CardHeader, CardTitle } from './ui/card'
import { Button } from './ui/button'
import { Badge } from './ui/badge'
import { FurnitureItem } from './Furniture/FurnitureItem'
import { PriceListPreview } from './Furniture/PriceListPreview'
import { 
  CheckCircle, 
  XCircle, 
  Clock, 
  User, 
  Settings, 
  Package,
  RefreshCw
} from 'lucide-react'
import type { 
  FurnitureProduct, 
  FurnitureMaterial, 
  PriceListItem, 
  PriceListConfig 
} from '../types'

// ===========================
// üß™ –¢–ï–°–¢–û–í–´–ï –î–ê–ù–ù–´–ï
// ===========================

const TEST_MATERIALS: readonly FurnitureMaterial[] = [
  {
    id: 'wood_oak',
    name: '–î—É–± –º–∞—Å—Å–∏–≤',
    price: 15000,
    unit: '–º¬≥',
    category: 'wood',
    consumptionCoeff: 1.2,
    isActive: true,
    supplier: '–õ–µ—Å–ü—Ä–æ–º'
  },
  {
    id: 'metal_steel',
    name: '–°—Ç–∞–ª—å –Ω–µ—Ä–∂–∞–≤–µ—é—â–∞—è',
    price: 120000,
    unit: '–∫–≥',
    category: 'metal',
    consumptionCoeff: 1.1,
    isActive: true,
    supplier: '–ú–µ—Ç–ö–æ–º'
  }
] as const

const TEST_PRODUCT: FurnitureProduct = {
  id: 'table_classic_001',
  article: 'WAS-TABLE-001',
  name: '–°—Ç–æ–ª –æ–±–µ–¥–µ–Ω–Ω—ã–π "–ö–ª–∞—Å—Å–∏–∫"',
  collection: '–ø—Ä–µ–º–∏—É–º',
  basePrice: 45000,
  category: '—Å—Ç–æ–ª—ã',
  materials: ['wood_oak', 'metal_steel'],
  dimensions: {
    width: 1800,
    height: 750,
    depth: 900
  },
  isActive: true,
  description: '–≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–π –æ–±–µ–¥–µ–Ω–Ω—ã–π —Å—Ç–æ–ª –∏–∑ –º–∞—Å—Å–∏–≤–∞ –¥—É–±–∞ —Å –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏'
}

const TEST_PRICE_LIST: readonly PriceListItem[] = [
  {
    article: 'WAS-TABLE-001',
    name: '–°—Ç–æ–ª –æ–±–µ–¥–µ–Ω–Ω—ã–π "–ö–ª–∞—Å—Å–∏–∫"',
    collection: '–ø—Ä–µ–º–∏—É–º',
    basePrice: 45000,
    materialsCost: 18000,
    finalPrice: 113400,
    markup: 50400,
    materials: [
      { name: '–î—É–± –º–∞—Å—Å–∏–≤', quantity: 1.2, cost: 18000 }
    ]
  }
]

const TEST_CONFIG: PriceListConfig = {
  title: '–ü—Ä–∞–π—Å-–ª–∏—Å—Ç WASSER',
  subtitle: '–ú–µ–±–µ–ª—å–Ω–∞—è —Ñ–∞–±—Ä–∏–∫–∞ ‚Ä¢ –¢–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è',
  includeImages: false,
  includeMaterials: true,
  groupByCollection: true,
  sortBy: 'name',
  currency: 'RUB',
  format: 'A4'
}

// ===========================
// üé® –í–ù–£–¢–†–ï–ù–ù–ò–ô –ö–û–ú–ü–û–ù–ï–ù–¢ –¢–ï–°–¢–ê
// ===========================

const TestIntegrationInner: React.FC = React.memo(() => {
  const { state, isAdmin, metrics, permissions } = useDashboard()
  const [testStep, setTestStep] = useState<string>('dashboard')

  // ===========================
  // üß™ –¢–ï–°–¢–´ –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–ò
  // ===========================

  const tests = [
    {
      id: 'dashboard_context',
      name: 'Dashboard Context',
      status: state ? 'success' : 'error',
      description: '–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–∞—à–±–æ—Ä–¥–∞'
    },
    {
      id: 'user_auth',
      name: '–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è',
      status: state.user ? 'success' : 'warning',
      description: `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${state.user?.email || '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω'}`
    },
    {
      id: 'admin_rights',
      name: '–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞',
      status: isAdmin ? 'success' : 'warning',
      description: `–£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞: ${isAdmin ? '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}`
    },
    {
      id: 'performance',
      name: '–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
      status: metrics.data.loadTime < 1000 ? 'success' : 'warning',
      description: `–ó–∞–≥—Ä—É–∑–∫–∞: ${metrics.data.loadTime.toFixed(0)}ms`
    },
    {
      id: 'types',
      name: '–¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
      status: 'success',
      description: 'TypeScript —Ç–∏–ø—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã'
    }
  ]

  // ===========================
  // üé® –†–ï–ù–î–ï–† –ö–û–ú–ü–û–ù–ï–ù–¢–ê
  // ===========================

  return (
    <div className="min-h-screen bg-gray-50 p-6">
      <div className="max-w-7xl mx-auto space-y-6">
        
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="text-center">
          <h1 className="text-3xl font-bold text-gray-900 mb-2">
            üß™ –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ WASSER Dashboard
          </h1>
          <p className="text-gray-600">
            –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
          </p>
        </div>

        {/* –°—Ç–∞—Ç—É—Å —Ç–µ—Å—Ç–æ–≤ */}
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <CheckCircle className="w-5 h-5" />
              –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            </CardTitle>
          </CardHeader>
          
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
              {tests.map((test) => (
                <div key={test.id} className="flex items-center gap-3 p-3 border rounded-lg">
                  {test.status === 'success' && (
                    <CheckCircle className="w-5 h-5 text-green-600" />
                  )}
                  {test.status === 'warning' && (
                    <Clock className="w-5 h-5 text-yellow-600" />
                  )}
                  {test.status === 'error' && (
                    <XCircle className="w-5 h-5 text-red-600" />
                  )}
                  
                  <div className="flex-1">
                    <div className="font-medium">{test.name}</div>
                    <div className="text-sm text-gray-500">{test.description}</div>
                  </div>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
          
          {/* –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∞—à–±–æ—Ä–¥–∞ */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Settings className="w-5 h-5" />
                –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∞—à–±–æ—Ä–¥–∞
              </CardTitle>
            </CardHeader>
            
            <CardContent className="space-y-3">
              <div className="flex justify-between">
                <span className="text-sm text-gray-500">–ê–∫—Ç–∏–≤–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞:</span>
                <Badge variant="outline">{state.activeTab}</Badge>
              </div>
              
              <div className="flex justify-between">
                <span className="text-sm text-gray-500">–ó–∞–≥—Ä—É–∑–∫–∞:</span>
                <Badge variant={state.loading ? "default" : "secondary"}>
                  {state.loading ? '–î–∞' : '–ù–µ—Ç'}
                </Badge>
              </div>
              
              <div className="flex justify-between">
                <span className="text-sm text-gray-500">–û—à–∏–±–∫–∞:</span>
                <Badge variant={state.error ? "destructive" : "secondary"}>
                  {state.error ? '–ï—Å—Ç—å' : '–ù–µ—Ç'}
                </Badge>
              </div>
            </CardContent>
          </Card>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <User className="w-5 h-5" />
                –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
              </CardTitle>
            </CardHeader>
            
            <CardContent className="space-y-3">
              <div>
                <span className="text-sm text-gray-500">Email:</span>
                <div className="font-medium truncate">
                  {state.user?.email || '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω'}
                </div>
              </div>
              
              <div>
                <span className="text-sm text-gray-500">–†–æ–ª—å:</span>
                <div className="font-medium">
                  {state.user?.role || '–ù–µ—Ç —Ä–æ–ª–∏'}
                </div>
              </div>
              
              <div>
                <span className="text-sm text-gray-500">–ü—Ä–∞–≤–∞:</span>
                <div className="font-medium">
                  {isAdmin ? '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
                </div>
              </div>
            </CardContent>
          </Card>

          {/* –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <RefreshCw className="w-5 h-5" />
                –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
              </CardTitle>
            </CardHeader>
            
            <CardContent className="space-y-3">
              <div className="flex justify-between">
                <span className="text-sm text-gray-500">–í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏:</span>
                <span className="font-medium">{metrics.data.loadTime.toFixed(0)}ms</span>
              </div>
              
              <div className="flex justify-between">
                <span className="text-sm text-gray-500">–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ:</span>
                <span className="font-medium">{metrics.data.tabSwitchTime.toFixed(0)}ms</span>
              </div>
              
              <div className="flex justify-between">
                <span className="text-sm text-gray-500">–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ:</span>
                <span className="font-medium text-xs">
                  {metrics.data.lastUpdate.toLocaleTimeString('ru-RU')}
                </span>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Ç–µ—Å—Ç–∞–º */}
        <Card>
          <CardHeader>
            <CardTitle>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤</CardTitle>
          </CardHeader>
          
          <CardContent>
            <div className="flex gap-2 mb-6">
              <Button
                variant={testStep === 'dashboard' ? 'default' : 'outline'}
                onClick={() => setTestStep('dashboard')}
              >
                Dashboard
              </Button>
              
              <Button
                variant={testStep === 'furniture' ? 'default' : 'outline'}
                onClick={() => setTestStep('furniture')}
              >
                –ú–µ–±–µ–ª—å
              </Button>
              
              <Button
                variant={testStep === 'pricelist' ? 'default' : 'outline'}
                onClick={() => setTestStep('pricelist')}
              >
                –ü—Ä–∞–π—Å-–ª–∏—Å—Ç
              </Button>
            </div>

            {/* –ö–æ–Ω—Ç–µ–Ω—Ç —Ç–µ—Å—Ç–æ–≤ */}
            {testStep === 'dashboard' && (
              <div className="text-center p-8">
                <Package className="w-16 h-16 text-blue-600 mx-auto mb-4" />
                <h3 className="text-lg font-semibold mb-2">Dashboard —Ä–∞–±–æ—Ç–∞–µ—Ç!</h3>
                <p className="text-gray-600">
                  –ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –¥–∞—à–±–æ—Ä–¥–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞
                </p>
              </div>
            )}

            {testStep === 'furniture' && (
              <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                <FurnitureItem
                  product={TEST_PRODUCT}
                  materials={TEST_MATERIALS}
                  selectedCollection="–ø—Ä–µ–º–∏—É–º"
                  materialQuantities={{ wood_oak: 1.2, metal_steel: 0.5 }}
                  showDetails={true}
                  showPrice={true}
                  onSelect={(product) => console.log('Selected:', product)}
                  onCalculate={(product) => console.log('Calculate:', product)}
                />
                
                <div className="space-y-4">
                  <h3 className="text-lg font-semibold">–¢–µ—Å—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ FurnitureItem</h3>
                  <div className="text-sm text-gray-600 space-y-2">
                    <p>‚úÖ –¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø—Ä–æ–ø—Å—ã</p>
                    <p>‚úÖ –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã</p>
                    <p>‚úÖ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥</p>
                    <p>‚úÖ Responsive –¥–∏–∑–∞–π–Ω</p>
                  </div>
                </div>
              </div>
            )}

            {testStep === 'pricelist' && (
              <PriceListPreview
                items={TEST_PRICE_LIST}
                config={TEST_CONFIG}
                onConfigChange={(config) => console.log('Config changed:', config)}
                onGenerate={() => console.log('PDF generated')}
              />
            )}
          </CardContent>
        </Card>
      </div>
    </div>
  )
})

TestIntegrationInner.displayName = 'TestIntegrationInner'

// ===========================
# üéØ –û–°–ù–û–í–ù–û–ô –ö–û–ú–ü–û–ù–ï–ù–¢ –° –ü–†–û–í–ê–ô–î–ï–†–û–ú
# ===========================

export const TestIntegration: React.FC = React.memo(() => (
  <DashboardProvider>
    <TestIntegrationInner />
  </DashboardProvider>
))

TestIntegration.displayName = 'TestIntegration'
