/**
 * @file WeatherCard.tsx
 * @description –ö–∞—Ä—Ç–æ—á–∫–∞ –ø–æ–≥–æ–¥—ã: –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–≤—É—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ ‚Äî OpenWeatherMap (—Ä–µ–∞–ª—å–Ω—ã–π –∫–ª—é—á) –∏ Open‚ÄëMeteo (–±–µ–∑ –∫–ª—é—á–∞).
 * - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–Ω—É—Ç—Ä–∏ –∫–∞—Ä—Ç–æ—á–∫–∏: –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, –≤—ã–±–æ—Ä –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞, –≤–≤–æ–¥ API –∫–ª—é—á–∞.
 * - –ö–ª—é—á —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ localStorage: weather:owmKey (frontend), –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä.
 * - Fallback: –ø—Ä–∏ –æ—à–∏–±–∫–µ/–æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∫–ª—é—á–∞ –¥–ª—è OWM ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ Open‚ÄëMeteo.
 */

import React, { useCallback, useEffect, useMemo, useState } from 'react'
import { Card, CardContent, CardHeader, CardTitle } from '../ui/card'
import { Button } from '../ui/button'

/** –ü—Ä–æ–≤–∞–π–¥–µ—Ä—ã –ø–æ–≥–æ–¥—ã */
type WeatherProvider = 'owm' | 'openmeteo'

/** –û—Ç–≤–µ—Ç Open-Meteo (—Å–æ–∫—Ä–∞—â—ë–Ω–Ω–∞—è —Ñ–æ—Ä–º–∞) */
interface MeteoResponse {
  current?: {
    temperature_2m: number
    weather_code: number
    wind_speed_10m?: number
    time?: string
  }
}

/** –û—Ç–≤–µ—Ç OpenWeatherMap (—Å–æ–∫—Ä–∞—â—ë–Ω–Ω–∞—è —Ñ–æ—Ä–º–∞) */
interface OwmResponse {
  weather: Array<{ id: number; main: string; description: string; icon: string }>
  main: { temp: number; humidity?: number; pressure?: number }
  wind?: { speed?: number }
  name?: string
}

/** –û–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≥–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞ WMO (Open‚ÄëMeteo) */
function describeWmo(code: number): { label: string; emoji: string } {
  if (code === 0) return { label: '–Ø—Å–Ω–æ', emoji: '‚òÄÔ∏è' }
  if ([1, 2].includes(code)) return { label: '–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å', emoji: '‚õÖ' }
  if (code === 3) return { label: '–ü–∞—Å–º—É—Ä–Ω–æ', emoji: '‚òÅÔ∏è' }
  if ([45, 48].includes(code)) return { label: '–¢—É–º–∞–Ω', emoji: 'üå´Ô∏è' }
  if ([51, 53, 55, 56, 57].includes(code)) return { label: '–ú–æ—Ä–æ—Å—å', emoji: 'üå¶Ô∏è' }
  if ([61, 63, 65, 80, 81, 82].includes(code)) return { label: '–î–æ–∂–¥—å', emoji: 'üåßÔ∏è' }
  if ([66, 67].includes(code)) return { label: '–õ–µ–¥—è–Ω–æ–π –¥–æ–∂–¥—å', emoji: 'üåßÔ∏è' }
  if ([71, 73, 75, 77, 85, 86].includes(code)) return { label: '–°–Ω–µ–≥', emoji: 'üå®Ô∏è' }
  if ([95, 96, 99].includes(code)) return { label: '–ì—Ä–æ–∑–∞', emoji: '‚õàÔ∏è' }
  return { label: '–ü–æ–≥–æ–¥–∞', emoji: 'üå§Ô∏è' }
}

/** –û–ø–∏—Å–∞–Ω–∏–µ –ø–æ –∫–æ–¥—É OpenWeatherMap */
function describeOwm(code: number): { label: string; emoji: string } {
  // –î–∏–∞–ø–∞–∑–æ–Ω—ã: 2xx ‚Äî –≥—Ä–æ–∑–∞, 3xx ‚Äî –º–æ—Ä–æ—Å—å, 5xx ‚Äî –¥–æ–∂–¥—å, 6xx ‚Äî —Å–Ω–µ–≥, 7xx ‚Äî —Ç—É–º–∞–Ω/–ø—ã–ª—å, 800 ‚Äî —è—Å–Ω–æ, 80x ‚Äî –æ–±–ª–∞—á–Ω–æ
  if (code >= 200 && code < 300) return { label: '–ì—Ä–æ–∑–∞', emoji: '‚õàÔ∏è' }
  if (code >= 300 && code < 400) return { label: '–ú–æ—Ä–æ—Å—å', emoji: 'üå¶Ô∏è' }
  if (code >= 500 && code < 600) return { label: '–î–æ–∂–¥—å', emoji: 'üåßÔ∏è' }
  if (code >= 600 && code < 700) return { label: '–°–Ω–µ–≥', emoji: 'üå®Ô∏è' }
  if (code >= 700 && code < 800) return { label: '–ê—Ç–º–æ—Å—Ñ–µ—Ä–∞', emoji: 'üå´Ô∏è' }
  if (code === 800) return { label: '–Ø—Å–Ω–æ', emoji: '‚òÄÔ∏è' }
  if (code > 800 && code < 900) return { label: '–û–±–ª–∞—á–Ω–æ', emoji: '‚òÅÔ∏è' }
  return { label: '–ü–æ–≥–æ–¥–∞', emoji: 'üå§Ô∏è' }
}

/** –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —á—Ç–µ–Ω–∏–µ/–∑–∞–ø–∏—Å—å LS */
function readLS<T>(key: string, fallback: T): T {
  try {
    const raw = localStorage.getItem(key)
    return raw ? (JSON.parse(raw) as T) : fallback
  } catch {
    return fallback
  }
}
function writeLS<T>(key: string, val: T): void {
  try {
    localStorage.setItem(key, JSON.stringify(val))
  } catch {
    /* noop */
  }
}

/**
 * WeatherCard ‚Äî —Ä–µ–∞–ª—å–Ω–∞—è –ø–æ–≥–æ–¥–∞:
 * - provider: OpenWeatherMap (–µ—Å–ª–∏ –∑–∞–¥–∞–Ω –∫–ª—é—á) –∏–ª–∏ Open‚ÄëMeteo (fallback).
 * - –ù–∞—Å—Ç—Ä–æ–π–∫–∏: lat/lon, API key, –≤—ã–±–æ—Ä –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞.
 */
export default function WeatherCard(): JSX.Element {
  const [loading, setLoading] = useState<boolean>(false)
  const [error, setError] = useState<string | null>(null)

  /** –ó–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: –ë–∏—à–∫–µ–∫ */
  const [lat, setLat] = useState<number>(() => readLS('weather:lat', 42.87))
  const [lon, setLon] = useState<number>(() => readLS('weather:lon', 74.59))
  const [provider, setProvider] = useState<WeatherProvider>(() =>
    readLS<WeatherProvider>('weather:provider', 'openmeteo')
  )

  /** –ö–ª—é—á –¥–ª—è OpenWeatherMap */
  const [owmKey, setOwmKey] = useState<string>(() => readLS('weather:owmKey', ''))

  const [temp, setTemp] = useState<number | null>(null)
  const [desc, setDesc] = useState<string>('–ü–æ–≥–æ–¥–∞')
  const [emoji, setEmoji] = useState<string>('üå§Ô∏è')
  const [wind, setWind] = useState<number | null>(null)
  const [updatedAt, setUpdatedAt] = useState<number | null>(null)
  const [showSettings, setShowSettings] = useState<boolean>(false)

  /** –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω OWM, –Ω–æ –∫–ª—é—á–∞ –Ω–µ—Ç ‚Äî –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–∫–∞—Ç—ã–≤–∞–µ–º—Å—è –Ω–∞ Open‚ÄëMeteo (–±–µ–∑–æ–ø–∞—Å–Ω–æ) */
  useEffect(() => {
    if (provider === 'owm' && !owmKey) {
      setProvider('openmeteo')
      writeLS('weather:provider', 'openmeteo')
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [])

  /** –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ */
  const saveSettings = useCallback(() => {
    writeLS('weather:lat', lat)
    writeLS('weather:lon', lon)
    writeLS('weather:provider', provider)
    writeLS('weather:owmKey', owmKey)
    setShowSettings(false)
    // –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    void load()
  }, [lat, lon, provider, owmKey])

  /** –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥—ã —Å —É—á—ë—Ç–æ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ */
  const load = useCallback(async () => {
    setLoading(true)
    setError(null)

    try {
      if (provider === 'owm') {
        if (!owmKey) {
          throw new Error('–ù–µ –∑–∞–¥–∞–Ω API –∫–ª—é—á OpenWeatherMap')
        }
        const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${encodeURIComponent(
          owmKey
        )}&units=metric&lang=ru`
        const resp = await fetch(url)
        if (!resp.ok) throw new Error('HTTP ' + resp.status)
        const data: OwmResponse = await resp.json()

        const t = data?.main?.temp
        const id = data?.weather?.[0]?.id
        if (typeof t !== 'number' || typeof id !== 'number') {
          throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç OpenWeatherMap')
        }

        const d = describeOwm(id)
        setTemp(t)
        setDesc(data.weather?.[0]?.description || d.label)
        setEmoji(d.emoji)
        setWind(typeof data.wind?.speed === 'number' ? data.wind!.speed! : null)
        setUpdatedAt(Date.now())
        setLoading(false)
        return
      }

      // Fallback: Open‚ÄëMeteo (–±–µ–∑ –∫–ª—é—á–∞)
      const url = `https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&current=temperature_2m,weather_code,wind_speed_10m&timezone=auto`
      const resp = await fetch(url)
      if (!resp.ok) throw new Error('HTTP ' + resp.status)
      const data: MeteoResponse = await resp.json()
      const t = data?.current?.temperature_2m
      const c = data?.current?.weather_code
      if (typeof t !== 'number' || typeof c !== 'number') {
        throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç Open‚ÄëMeteo')
      }
      const d = describeWmo(c)
      setTemp(t)
      setDesc(d.label)
      setEmoji(d.emoji)
      setWind(
        typeof data.current?.wind_speed_10m === 'number' ? data.current!.wind_speed_10m! : null
      )
      setUpdatedAt(Date.now())
    } catch (e: any) {
      setError(e?.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ–≥–æ–¥—É')
      // –°–º—è–≥—á–∞—é—â–∏–π fallback ‚Äî –¥–µ–º–æ
      setTemp(18)
      setDesc('–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å')
      setEmoji('‚õÖ')
      setWind(2)
      setUpdatedAt(Date.now())
    } finally {
      setLoading(false)
    }
  }, [provider, owmKey, lat, lon])

  useEffect(() => {
    void load()
  }, [load])

  const title = '–ü–æ–≥–æ–¥–∞'
  const providerLabel = provider === 'owm' ? 'OpenWeatherMap' : 'Open‚ÄëMeteo'

  return (
    <Card className='bg-white border border-gray-200 overflow-hidden'>
      <CardHeader className='flex items-center justify-between space-y-0'>
        <CardTitle className='text-base font-semibold'>
          {title} ({providerLabel})
        </CardTitle>

        <div className='flex items-center gap-2'>
          {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ */}
          <div
            className='inline-flex rounded-lg border border-gray-200 overflow-hidden'
            role='tablist'
            aria-label='–ü—Ä–æ–≤–∞–π–¥–µ—Ä –ø–æ–≥–æ–¥—ã'
          >
            {(['owm', 'openmeteo'] as WeatherProvider[]).map(p => {
              const active = provider === p
              const label = p === 'owm' ? 'OWM' : 'Open‚ÄëMeteo'
              const disabled = p === 'owm' && !owmKey
              return (
                <button
                  key={p}
                  onClick={() => {
                    if (disabled) return
                    setProvider(p)
                    writeLS('weather:provider', p)
                    void load()
                  }}
                  className={`px-2.5 py-1.5 text-xs transition ${active ? 'bg-blue-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-50'} ${disabled ? 'opacity-50 cursor-not-allowed' : ''}`}
                  role='tab'
                  aria-selected={active}
                  title={
                    p === 'owm' && !owmKey
                      ? '–£–∫–∞–∂–∏—Ç–µ API –∫–ª—é—á –¥–ª—è OpenWeatherMap –≤ –ù–∞—Å—Ç—Ä–æ–π–∫–∞—Ö'
                      : label
                  }
                >
                  {label}
                </button>
              )
            })}
          </div>

          <Button
            variant='outline'
            className='bg-transparent h-8 px-3'
            onClick={() => void load()}
            disabled={loading}
          >
            {loading ? '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ‚Ä¶' : '–û–±–Ω–æ–≤–∏—Ç—å'}
          </Button>
          <Button
            variant='outline'
            className='bg-transparent h-8 px-3'
            onClick={() => setShowSettings(s => !s)}
          >
            {showSettings ? '–°–∫—Ä—ã—Ç—å' : '–ù–∞—Å—Ç—Ä–æ–π–∫–∏'}
          </Button>
        </div>
      </CardHeader>

      <CardContent>
        {/* –û—Å–Ω–æ–≤–Ω–æ–π –±–ª–æ–∫ */}
        <div className='flex items-center gap-4'>
          <div className='w-20 h-20 rounded-lg border bg-gradient-to-br from-blue-50 to-indigo-50 flex items-center justify-center text-3xl'>
            {emoji}
          </div>
          <div>
            <div className='text-2xl font-bold text-gray-900'>
              {temp !== null ? `${Math.round(temp)}¬∞` : '‚Äî'}
            </div>
            <div className='text-sm text-gray-600 capitalize'>{desc}</div>
            {typeof wind === 'number' && (
              <div className='text-xs text-gray-500 mt-0.5'>–í–µ—Ç–µ—Ä: {wind} –º/—Å</div>
            )}
            {updatedAt && (
              <div className='text-xs text-gray-400 mt-1'>
                –û–±–Ω–æ–≤–ª–µ–Ω–æ: {new Date(updatedAt).toLocaleTimeString('ru-RU')}
              </div>
            )}
            {error && (
              <div className='text-xs text-amber-700 bg-amber-50 border border-amber-200 rounded px-2 py-1 mt-2 inline-block'>
                {error}
              </div>
            )}
          </div>
        </div>

        {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ */}
        {showSettings && (
          <div className='mt-4 p-3 rounded-lg border border-gray-200 bg-gray-50'>
            <div className='grid grid-cols-1 md:grid-cols-4 gap-3'>
              <div>
                <label className='block text-xs text-gray-600 mb-1'>–®–∏—Ä–æ—Ç–∞ (lat)</label>
                <input
                  type='number'
                  step='0.0001'
                  value={lat}
                  onChange={e => setLat(parseFloat(e.target.value || '0'))}
                  className='w-full px-2.5 py-2 rounded-md border border-gray-300 bg-white focus:outline-none focus:ring-2 focus:ring-blue-500'
                />
              </div>
              <div>
                <label className='block text-xs text-gray-600 mb-1'>–î–æ–ª–≥–æ—Ç–∞ (lon)</label>
                <input
                  type='number'
                  step='0.0001'
                  value={lon}
                  onChange={e => setLon(parseFloat(e.target.value || '0'))}
                  className='w-full px-2.5 py-2 rounded-md border border-gray-300 bg-white focus:outline-none focus:ring-2 focus:ring-blue-500'
                />
              </div>
              <div className='md:col-span-2'>
                <label className='block text-xs text-gray-600 mb-1'>API Key (OpenWeatherMap)</label>
                <input
                  type='text'
                  placeholder='–í—Å—Ç–∞–≤—å—Ç–µ –∫–ª—é—á OWM'
                  value={owmKey}
                  onChange={e => setOwmKey(e.target.value.trim())}
                  className='w-full px-2.5 py-2 rounded-md border border-gray-300 bg-white focus:outline-none focus:ring-2 focus:ring-blue-500'
                />
                {!owmKey && (
                  <div className='mt-1 text-[11px] text-gray-500'>
                    –ë–µ–∑ –∫–ª—é—á–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Open‚ÄëMeteo (–±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏). –í—Å—Ç–∞–≤—å—Ç–µ –∫–ª—é—á OWM —á—Ç–æ–±—ã
                    –≤–∏–¥–µ—Ç—å —Ç–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.
                  </div>
                )}
              </div>
            </div>
            <div className='mt-3 flex items-center justify-end gap-2'>
              <Button
                variant='outline'
                className='bg-transparent h-8 px-3'
                onClick={() => setShowSettings(false)}
              >
                –û—Ç–º–µ–Ω–∞
              </Button>
              <Button className='h-8 px-3' onClick={saveSettings}>
                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
              </Button>
            </div>
          </div>
        )}
      </CardContent>
    </Card>
  )
}
