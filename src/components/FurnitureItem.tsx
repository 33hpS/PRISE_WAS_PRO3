/**
 * @file components/FurnitureItem.tsx
 * @description –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —ç–ª–µ–º–µ–Ω—Ç–∞ –º–µ–±–µ–ª–∏ —Å –º–µ–º–æ–∏–∑–∞—Ü–∏–µ–π –∏ —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é
 */

import React, { useMemo, useCallback } from 'react'
import { Card, CardContent, CardHeader, CardTitle } from './ui/card'
import { Badge } from './ui/badge'
import { Button } from './ui/button'
import { Package, Calculator, Tag, Ruler } from 'lucide-react'
import type { FurnitureItemProps, FurnitureMaterial } from '../types'
import { 
  calculateFurniturePrice, 
  formatPrice, 
  getCollectionMultiplier 
} from '../utils/furniture'

// ===========================
// üéØ –†–ê–°–®–ò–†–ï–ù–ù–´–ï –ü–†–û–ü–°–´ –ö–û–ú–ü–û–ù–ï–ù–¢–ê
// ===========================

interface ExtendedFurnitureItemProps extends FurnitureItemProps {
  readonly materials?: readonly FurnitureMaterial[]
  readonly materialQuantities?: Record<string, number>
  readonly onCalculate?: (article: string) => void
  readonly showDetails?: boolean
  readonly className?: string
}

// ===========================
// üé® –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–´–ô –ö–û–ú–ü–û–ù–ï–ù–¢ –° –ú–ï–ú–û–ò–ó–ê–¶–ò–ï–ô
// ===========================

/**
 * –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —ç–ª–µ–º–µ–Ω—Ç–∞ –º–µ–±–µ–ª–∏
 * –°–ª–µ–¥—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ —Å —á–∏—Å—Ç—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏
 */
export const FurnitureItem: React.FC<ExtendedFurnitureItemProps> = React.memo(({
  article,
  name,
  collection,
  price,
  materials = [],
  dimensions,
  materialQuantities = {},
  onSelect,
  onCalculate,
  showCalculations = true,
  showDetails = true,
  className = ''
}) => {
  
  // ===========================
  // üßÆ –ú–ï–ú–û–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –†–ê–°–ß–ï–¢–´
  // ===========================

  /** –†–∞—Å—á–µ—Ç —Ü–µ–Ω—ã —Å –º–µ–º–æ–∏–∑–∞—Ü–∏–µ–π –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ */
  const priceCalculation = useMemo(() => {
    if (!showCalculations) {
      return {
        basePrice: price,
        finalPrice: price,
        collectionMultiplier: 1,
        materialsCost: 0,
        markup: 0,
        profitMargin: 0,
        isRentable: true
      }
    }

    return calculateFurniturePrice(
      price,
      collection,
      materials,
      materialQuantities
    )
  }, [price, collection, materials, materialQuantities, showCalculations])

  /** –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã */
  const formattedDimensions = useMemo(() => {
    if (!dimensions) return null
    
    const { width, height, depth } = dimensions
    return `${width} √ó ${height} √ó ${depth} –º–º`
  }, [dimensions])

  /** –°–ø–∏—Å–æ–∫ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ —Å —Ä–∞—Å—Ö–æ–¥–æ–º */
  const materialsBreakdown = useMemo(() => {
    if (!showCalculations || materials.length === 0) return []

    return materials
      .filter(material => materialQuantities[material.id] > 0)
      .map(material => {
        const quantity = materialQuantities[material.id]
        const cost = material.price * quantity * material.consumptionCoeff
        
        return {
          name: material.name,
          quantity,
          cost,
          unit: material.unit,
          category: material.category
        }
      })
      .sort((a, b) => b.cost - a.cost) // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —É–±—ã–≤–∞–Ω–∏—é —Å—Ç–æ–∏–º–æ—Å—Ç–∏
  }, [materials, materialQuantities, showCalculations])

  // ===========================
  // üéõÔ∏è –ú–ï–ú–û–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò
  // ===========================

  const handleSelect = useCallback(() => {
    onSelect?.({
      id: article,
      article,
      name,
      collection,
      basePrice: price,
      category: '–¥—Ä—É–≥–æ–µ',
      materials: materials.map(m => m.id),
      dimensions: dimensions || { width: 0, height: 0, depth: 0 },
      isActive: true
    })
  }, [onSelect, article, name, collection, price, materials, dimensions])

  const handleCalculate = useCallback(() => {
    onCalculate?.(article)
  }, [onCalculate, article])

  // ===========================
  // üé® –†–ï–ù–î–ï–† –ö–û–ú–ü–û–ù–ï–ù–¢–ê
  // ===========================

  return (
    <Card className={`
      transition-all duration-200 hover:shadow-lg cursor-pointer
      ${className}
    `}>
      <CardHeader className="pb-3">
        <div className="flex items-start justify-between">
          <div className="flex-1">
            <CardTitle className="text-lg font-semibold text-gray-900 flex items-center gap-2">
              <Package className="w-4 h-4" />
              {name}
            </CardTitle>
            
            <div className="flex items-center gap-2 mt-2">
              <Badge variant="outline" className="text-xs">
                <Tag className="w-3 h-3 mr-1" />
                {article}
              </Badge>
              
              <Badge variant="secondary" className="text-xs">
                {collection}
              </Badge>
              
              {showCalculations && (
                <Badge 
                  variant={priceCalculation.isRentable ? "default" : "destructive"}
                  className="text-xs"
                >
                  {priceCalculation.isRentable ? '–†–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ' : '–£–±—ã—Ç–æ—á–Ω–æ'}
                </Badge>
              )}
            </div>
          </div>
        </div>
      </CardHeader>

      <CardContent className="space-y-4">
        {/* –†–∞–∑–º–µ—Ä—ã –∏–∑–¥–µ–ª–∏—è */}
        {showDetails && formattedDimensions && (
          <div className="flex items-center gap-2 text-sm text-gray-600">
            <Ruler className="w-4 h-4" />
            <span>{formattedDimensions}</span>
          </div>
        )}

        {/* –†–∞—Å—á–µ—Ç —Ü–µ–Ω—ã */}
        {showCalculations && (
          <div className="border-t pt-4">
            <div className="grid grid-cols-2 gap-4 text-sm">
              <div>
                <span className="text-gray-500">–ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞:</span>
                <div className="font-semibold">
                  {formatPrice(priceCalculation.basePrice)}
                </div>
              </div>
              
              <div>
                <span className="text-gray-500">–ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞:</span>
                <div className="font-bold text-lg text-blue-600">
                  {formatPrice(priceCalculation.finalPrice)}
                </div>
              </div>
            </div>

            {/* –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ */}
            {priceCalculation.materialsCost > 0 && (
              <div className="mt-3 pt-3 border-t">
                <div className="grid grid-cols-2 gap-4 text-xs">
                  <div>
                    <span className="text-gray-500">–ú–∞—Ç–µ—Ä–∏–∞–ª—ã:</span>
                    <div>{formatPrice(priceCalculation.materialsCost)}</div>
                  </div>
                  
                  <div>
                    <span className="text-gray-500">–ù–∞—Ü–µ–Ω–∫–∞:</span>
                    <div className="text-green-600">
                      {formatPrice(priceCalculation.markup)}
                    </div>
                  </div>
                </div>
              </div>
            )}
          </div>
        )}

        {/* –°–ø–∏—Å–æ–∫ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ */}
        {showDetails && materialsBreakdown.length > 0 && (
          <div className="border-t pt-4">
            <h4 className="text-sm font-semibold text-gray-700 mb-2">–ú–∞—Ç–µ—Ä–∏–∞–ª—ã:</h4>
            <div className="space-y-1">
              {materialsBreakdown.slice(0, 3).map((material, index) => (
                <div key={index} className="flex justify-between text-xs">
                  <span className="text-gray-600">
                    {material.name} ({material.quantity} {material.unit})
                  </span>
                  <span className="font-medium">
                    {formatPrice(material.cost)}
                  </span>
                </div>
              ))}
              {materialsBreakdown.length > 3 && (
                <div className="text-xs text-gray-500">
                  +{materialsBreakdown.length - 3} –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
                </div>
              )}
            </div>
          </div>
        )}

        {/* –î–µ–π—Å—Ç–≤–∏—è */}
        <div className="flex gap-2 pt-2">
          {onSelect && (
            <Button
              variant="outline"
              size="sm"
              onClick={handleSelect}
              className="flex-1"
            >
              –í—ã–±—Ä–∞—Ç—å
            </Button>
          )}
          
          {onCalculate && showCalculations && (
            <Button
              variant="default"
              size="sm"
              onClick={handleCalculate}
              className="flex items-center gap-1"
            >
              <Calculator className="w-4 h-4" />
              –†–∞—Å—á–µ—Ç
            </Button>
          )}
        </div>
      </CardContent>
    </Card>
  )
})

FurnitureItem.displayName = 'FurnitureItem'
