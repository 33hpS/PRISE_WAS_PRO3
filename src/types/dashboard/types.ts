/**
 * @file types/dashboard/types.ts
 * @description –¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ç–∏–ø–æ–≤ –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞ –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏ WASSER
 */

import type { ReactNode, ComponentType } from 'react'

// ===========================
// üéØ –û–°–ù–û–í–ù–´–ï –¢–ò–ü–´ –î–ê–®–ë–û–†–î–ê
// ===========================

/** –î–æ–ø—É—Å—Ç–∏–º—ã–µ –≤–∫–ª–∞–¥–∫–∏ –¥–∞—à–±–æ—Ä–¥–∞ –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏ */
export type DashboardTab =
  | 'overview'      // –û–±–∑–æ—Ä –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  | 'generator'     // –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–≤
  | 'upload'        // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–æ–≤
  | 'materials'     // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏
  | 'products'      // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ü–∏–µ–π
  | 'collections'   // –ú–µ–±–µ–ª—å–Ω—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
  | 'types'         // –¢–∏–ø—ã –ø—Ä–æ–¥—É–∫—Ü–∏–∏
  | 'paint'         // –†–µ—Ü–µ–ø—Ç—ã –æ–∫—Ä–∞—Å–∫–∏
  | 'markup'        // –ü—Ä–∞–≤–∏–ª–∞ –Ω–∞—Ü–µ–Ω–∫–∏
  | 'sinks'         // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–π–∫–∞–º–∏
  | 'sets'          // –ì–æ—Ç–æ–≤—ã–µ –Ω–∞–±–æ—Ä—ã –º–µ–±–µ–ª–∏
  | 'history'       // –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
  | 'users'         // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏

/** –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ —Å —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π */
export interface TabDefinition {
  readonly key: DashboardTab
  readonly label: string
  readonly icon: ReactNode
  readonly description: string
  readonly adminOnly: boolean
  readonly component: ComponentType
  readonly badge?: string
  readonly disabled?: boolean
}

/** –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏ */
export interface FurnitureFactoryStats {
  readonly materials: number
  readonly products: number
  readonly collections: number
  readonly activeOrders: number
  readonly totalRevenue: number
  readonly pendingPriceLists: number
  readonly lastUpdated: Date
}

/** –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∞—à–±–æ—Ä–¥–∞ */
export interface DashboardState {
  readonly activeTab: DashboardTab
  readonly stats: FurnitureFactoryStats
  readonly statsLoading: boolean
  readonly user: UserWithRole | null
  readonly loading: boolean
  readonly error: string | null
  readonly notifications: DashboardNotification[]
}

/** –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */
export type UserRole = 'admin' | 'manager' | 'user'

/** –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ä–æ–ª—å—é */
export interface UserWithRole {
  readonly id: string
  readonly email: string
  readonly role: UserRole
  readonly name?: string
  readonly avatar?: string
  readonly lastLogin?: Date
}

/** –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–∞—à–±–æ—Ä–¥–∞ */
export interface DashboardNotification {
  readonly id: string
  readonly type: 'info' | 'warning' | 'error' | 'success'
  readonly title: string
  readonly message: string
  readonly timestamp: Date
  readonly read: boolean
  readonly actionLabel?: string
  readonly actionUrl?: string
}

/** –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–∞—à–±–æ—Ä–¥–∞ */
export interface DashboardConfig {
  readonly theme: 'light' | 'dark' | 'system'
  readonly compactMode: boolean
  readonly showDiagnostics: boolean
  readonly autoRefresh: boolean
  readonly refreshInterval: number
}

/** –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–∞—à–±–æ—Ä–¥–∞ */
export interface DashboardContextValue {
  readonly state: DashboardState
  readonly config: DashboardConfig
  readonly actions: DashboardActions
  readonly permissions: UserPermissions
}

/** –î–µ–π—Å—Ç–≤–∏—è –¥–∞—à–±–æ—Ä–¥–∞ */
export interface DashboardActions {
  readonly setActiveTab: (tab: DashboardTab) => void
  readonly refreshStats: () => Promise<void>
  readonly loadUser: () => Promise<void>
  readonly addNotification: (notification: Omit<DashboardNotification, 'id' | 'timestamp'>) => void
  readonly markNotificationRead: (id: string) => void
  readonly updateConfig: (config: Partial<DashboardConfig>) => void
}

/** –ü—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
export interface UserPermissions {
  readonly canViewTab: (tab: DashboardTab) => boolean
  readonly canManageUsers: boolean
  readonly canExportData: boolean
  readonly canImportData: boolean
  readonly canModifyPrices: boolean
  readonly canAccessAdminFeatures: boolean
  readonly isAdmin: boolean
  readonly isManager: boolean
}

/** –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ */
export interface PerformanceMetrics {
  readonly loadTime: number
  readonly renderTime: number
  readonly tabSwitchTime: number
  readonly lastUpdate: Date
  readonly memoryUsage?: number
}

/** –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ */
export interface DashboardStorage {
  readonly activeTab?: DashboardTab
  readonly config?: Partial<DashboardConfig>
  readonly readNotifications?: string[]
  readonly dismissedTips?: string[]
}

// ===========================
// üé® –¢–ò–ü–´ –ö–û–ú–ü–û–ù–ï–ù–¢–û–í
// ===========================

/** –ü—Ä–æ–ø—Å—ã –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –¥–∞—à–±–æ—Ä–¥–∞ */
export interface DashboardProps {
  readonly initialTab?: DashboardTab
  readonly showHeader?: boolean
  readonly compactMode?: boolean
}

/** –ü—Ä–æ–ø—Å—ã —à–∞–ø–∫–∏ –¥–∞—à–±–æ—Ä–¥–∞ */
export interface DashboardHeaderProps {
  readonly user: UserWithRole
  readonly notifications: DashboardNotification[]
  readonly onNotificationClick: (id: string) => void
  readonly onLogout: () => void
}

/** –ü—Ä–æ–ø—Å—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –≤–∫–ª–∞–¥–∫–∞–º */
export interface DashboardTabsProps {
  readonly tabs: readonly TabDefinition[]
  readonly activeTab: DashboardTab
  readonly onTabChange: (tab: DashboardTab) => void
  readonly permissions: UserPermissions
}

/** –ü—Ä–æ–ø—Å—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–∞—à–±–æ—Ä–¥–∞ */
export interface DashboardContentProps {
  readonly activeTab: DashboardTab
  readonly tabDefinition: TabDefinition
  readonly loading?: boolean
  readonly error?: string | null
}

/** –ü—Ä–æ–ø—Å—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ */
export interface StatCardProps {
  readonly title: string
  readonly value: string | number
  readonly description?: string
  readonly icon?: ReactNode
  readonly trend?: {
    readonly value: number
    readonly label: string
    readonly direction: 'up' | 'down' | 'neutral'
  }
  readonly loading?: boolean
}

// ===========================
// üîê –¢–ò–ü–´ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò
// ===========================

/** –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ */
export interface PermissionCheckResult {
  readonly allowed: boolean
  readonly reason?: string
  readonly requiredRole?: UserRole
}

/** –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞—â–∏—â–µ–Ω–Ω–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞ */
export interface RouteGuardConfig {
  readonly requiredRole: UserRole
  readonly redirectTo?: string
  readonly fallbackComponent?: ComponentType
}

// ===========================
// üéØ –£–¢–ò–õ–ò–¢–ê–†–ù–´–ï –¢–ò–ü–´
// ===========================

/** Omit helper –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–ø–æ–≤ –±–µ–∑ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø–æ–ª–µ–π */
export type DashboardTabWithoutComponent = Omit<TabDefinition, 'component'>

/** Pick helper –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø–æ–ª–µ–π */
export type DashboardUserInfo = Pick<UserWithRole, 'email' | 'role' | 'name'>

/** Partial helper –¥–ª—è –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π */
export type PartialDashboardConfig = Partial<DashboardConfig>

/** –§—É–Ω–∫—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤–∫–ª–∞–¥–∫–∏ */
export type TabValidator = (tab: DashboardTab, user: UserWithRole) => PermissionCheckResult

/** –§—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –∏–∫–æ–Ω–∫–∏ */
export type IconRenderer = (props: { className?: string }) => ReactNode

/** –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –¥–∞—à–±–æ—Ä–¥–∞ */
export type DashboardEventHandler<T = void> = (data?: T) => void | Promise<void>

// ===========================
// üîÑ –°–û–°–¢–û–Ø–ù–ò–ï –ò –°–û–ë–´–¢–ò–Ø
// ===========================

/** –°–æ–±—ã—Ç–∏—è –¥–∞—à–±–æ—Ä–¥–∞ */
export interface DashboardEvents {
  readonly tabChanged: DashboardEventHandler<DashboardTab>
  readonly statsRefreshed: DashboardEventHandler<FurnitureFactoryStats>
  readonly userLoaded: DashboardEventHandler<UserWithRole>
  readonly errorOccurred: DashboardEventHandler<string>
  readonly notificationAdded: DashboardEventHandler<DashboardNotification>
}

/** –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ */
export interface LoadingState {
  readonly [key: string]: boolean
}

/** –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ—à–∏–±–æ–∫ */
export interface ErrorState {
  readonly [key: string]: string | null
}