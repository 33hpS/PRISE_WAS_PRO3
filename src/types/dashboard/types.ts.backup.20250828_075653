/**
 * @file dashboard/types.ts
 * @description –¢–∏–ø—ã –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞ –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏ WASSER
 */

// ===========================
// üéØ –û–°–ù–û–í–ù–´–ï –¢–ò–ü–´
// ===========================

/** –î–æ–ø—É—Å—Ç–∏–º—ã–µ –≤–∫–ª–∞–¥–∫–∏ –¥–∞—à–±–æ—Ä–¥–∞ */
export type DashboardTab =
  | 'overview'
  | 'generator' 
  | 'labels'
  | 'upload'
  | 'materials'
  | 'products'
  | 'collections'
  | 'types'
  | 'paint'
  | 'markup'
  | 'sinks'
  | 'sets'
  | 'history'
  | 'users'

/** –†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */
export type UserRole = 'admin' | 'manager' | 'user'

/** –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ä–æ–ª—å—é */
export interface UserWithRole {
  readonly id: string
  readonly email: string
  readonly role: UserRole
  readonly name?: string
  readonly permissions?: readonly string[]
}

/** –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∞—à–±–æ—Ä–¥–∞ */
export interface DashboardStats {
  readonly materials: number
  readonly products: number
  readonly collections: number
  readonly priceLists: number
  readonly lastUpdated?: Date
}

/** –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∞—à–±–æ—Ä–¥–∞ */
export interface DashboardState {
  readonly activeTab: DashboardTab
  readonly stats: DashboardStats
  readonly statsLoading: boolean
  readonly user: UserWithRole | null
  readonly loading: boolean
  readonly error: string | null
}

/** –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ */
export interface TabDefinition {
  readonly key: DashboardTab
  readonly label: string
  readonly icon: React.ReactNode
  readonly description: string
  readonly adminOnly: boolean
  readonly requiredPermissions?: readonly string[]
  readonly component: React.ComponentType
}

/** –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ */
export interface PerformanceMetrics {
  readonly loadTime: number
  readonly tabSwitchTime: number
  readonly lastUpdate: Date
  readonly memoryUsage?: number
}

/** –°–æ–±—ã—Ç–∏—è –¥–∞—à–±–æ—Ä–¥–∞ */
export interface DashboardEvents {
  tabChanged: { tab: DashboardTab; timestamp: Date }
  statsLoaded: { stats: DashboardStats; duration: number }
  userAuthenticated: { user: UserWithRole; permissions: readonly string[] }
  errorOccurred: { error: string; context: string; timestamp: Date }
}

/** –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ */
export interface PermissionsConfig {
  readonly adminEmails: readonly string[]
  readonly roleHierarchy: Record<UserRole, readonly string[]>
  readonly tabPermissions: Record<DashboardTab, {
    readonly adminOnly: boolean
    readonly requiredRole?: UserRole
    readonly feature?: string
  }>
}

// ===========================
// üîß UTILITY TYPES
// ===========================

export type TabPermissions = {
  [K in DashboardTab]: {
    readonly adminOnly: boolean
    readonly requiredRole?: readonly UserRole[]
    readonly feature?: string
  }
}

export type DashboardAction = 
  | { type: 'SET_LOADING'; payload: boolean }
  | { type: 'SET_USER'; payload: UserWithRole | null }
  | { type: 'SET_ACTIVE_TAB'; payload: DashboardTab }
  | { type: 'SET_STATS'; payload: DashboardStats }
  | { type: 'SET_ERROR'; payload: string | null }
  | { type: 'SET_STATS_LOADING'; payload: boolean }

// ===========================
# üè≠ –ú–ï–ë–ï–õ–¨–ù–ê–Ø –§–ê–ë–†–ò–ö–ê –¢–ò–ü–´
# ===========================

/** –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –º–µ–±–µ–ª–∏ */
export interface FurnitureMaterial {
  readonly id: string
  readonly name: string
  readonly price: number
  readonly unit: string
  readonly category: 'wood' | 'metal' | 'fabric' | 'hardware' | 'finish'
  readonly consumptionCoeff?: number
}

/** –ö–æ–ª–ª–µ–∫—Ü–∏–∏ –º–µ–±–µ–ª–∏ */
export interface FurnitureCollection {
  readonly id: string
  readonly name: string
  readonly multiplier: number
  readonly description?: string
  readonly isActive: boolean
}

/** –ü—Ä–æ–¥—É–∫—Ü–∏—è */
export interface FurnitureProduct {
  readonly id: string
  readonly article: string
  readonly name: string
  readonly collection: string
  readonly basePrice: number
  readonly materials: readonly string[]
  readonly category: 'tables' | 'chairs' | 'cabinets' | 'beds' | 'other'
}
