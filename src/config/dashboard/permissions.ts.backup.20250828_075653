/**
 * @file config/permissions.ts
 * @description –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ WASSER
 */

import { PermissionsConfig, UserRole, DashboardTab } from '../types/dashboard/types'

// ===========================
# üîí –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò  
# ===========================

/** –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–∏–µ email –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è */
const getAdminEmails = (): readonly string[] => {
  const envEmails = process.env.REACT_APP_ADMIN_EMAILS
  const fallbackEmails = ['admin@wasser.com', 'sherhan1988hp@gmail.com']
  
  if (envEmails) {
    return envEmails.split(',').map(email => email.trim()).filter(Boolean)
  }
  
  console.warn('‚ö†Ô∏è REACT_APP_ADMIN_EMAILS –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è fallback emails')
  return fallbackEmails
}

/** –ò–µ—Ä–∞—Ä—Ö–∏—è —Ä–æ–ª–µ–π */
const ROLE_HIERARCHY: Record<UserRole, readonly string[]> = {
  admin: ['admin', 'manager', 'user'],
  manager: ['manager', 'user'], 
  user: ['user']
} as const

/** –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –≤–∫–ª–∞–¥–∫–∞–º */
const TAB_PERMISSIONS: Record<DashboardTab, {
  readonly adminOnly: boolean
  readonly requiredRole?: UserRole
  readonly feature?: string
}> = {
  // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –≤–∫–ª–∞–¥–∫–∏
  overview: { adminOnly: false },
  generator: { adminOnly: false, feature: 'price_generation' },
  labels: { adminOnly: false, feature: 'label_generation' },
  
  // –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏
  upload: { adminOnly: true, requiredRole: 'admin', feature: 'data_import' },
  materials: { adminOnly: true, requiredRole: 'admin', feature: 'materials_management' },
  products: { adminOnly: true, requiredRole: 'admin', feature: 'products_management' },
  collections: { adminOnly: true, requiredRole: 'admin', feature: 'collections_management' },
  types: { adminOnly: true, requiredRole: 'admin', feature: 'types_management' },
  paint: { adminOnly: true, requiredRole: 'admin', feature: 'paint_recipes' },
  markup: { adminOnly: true, requiredRole: 'admin', feature: 'markup_rules' },
  sinks: { adminOnly: true, requiredRole: 'admin', feature: 'sinks_catalog' },
  sets: { adminOnly: true, requiredRole: 'admin', feature: 'furniture_sets' },
  history: { adminOnly: true, requiredRole: 'admin', feature: 'change_history' },
  users: { adminOnly: true, requiredRole: 'admin', feature: 'user_management' }
} as const

/** –û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π */
export const PERMISSIONS_CONFIG: PermissionsConfig = {
  adminEmails: getAdminEmails(),
  roleHierarchy: ROLE_HIERARCHY,
  tabPermissions: TAB_PERMISSIONS
} as const

// ===========================
# üîß –§–£–ù–ö–¶–ò–ò –ü–†–û–í–ï–†–ö–ò –ü–†–ê–í
# ===========================

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –ø—Ä–∞–≤
 */
export const isAdminUser = (email: string): boolean => {
  return PERMISSIONS_CONFIG.adminEmails.includes(email)
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –≤–∫–ª–∞–¥–∫–µ
 */
export const hasTabAccess = (
  tab: DashboardTab,
  userRole: UserRole,
  userEmail: string
): boolean => {
  const permission = TAB_PERMISSIONS[tab]
  
  if (!permission.adminOnly) {
    return true
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ email –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
  if (isAdminUser(userEmail)) {
    return true
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ —Ä–æ–ª–∏
  if (permission.requiredRole) {
    const allowedRoles = ROLE_HIERARCHY[userRole] || []
    return allowedRoles.includes(permission.requiredRole)
  }
  
  return false
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∫–ª–∞–¥–æ–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export const getAvailableTabs = (
  userRole: UserRole,
  userEmail: string
): readonly DashboardTab[] => {
  return (Object.keys(TAB_PERMISSIONS) as DashboardTab[])
    .filter(tab => hasTabAccess(tab, userRole, userEmail))
}

// ===========================
# üè≠ –ú–ï–ë–ï–õ–¨–ù–ê–Ø –§–ê–ë–†–ò–ö–ê –ü–†–ê–í–ê
# ===========================

/** –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–ª—è –º–µ–±–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ */
export const FURNITURE_PERMISSIONS = {
  MANAGE_MATERIALS: 'manage_materials',
  MANAGE_COLLECTIONS: 'manage_collections', 
  GENERATE_PRICELISTS: 'generate_pricelists',
  MANAGE_PAINT_RECIPES: 'manage_paint_recipes',
  MANAGE_MARKUP_RULES: 'manage_markup_rules',
  VIEW_REPORTS: 'view_reports',
  EXPORT_DATA: 'export_data'
} as const

export type FurniturePermission = typeof FURNITURE_PERMISSIONS[keyof typeof FURNITURE_PERMISSIONS]
