/**
 * @file pages/Dashboard.tsx
 * @description –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –¥–∞—à–±–æ—Ä–¥ WASSER —Å –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π
 *
 * –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
 * - –ß–∏—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞
 * - –¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
 * - –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏ –ª–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞
 * - –°–∏—Å—Ç–µ–º–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
 */

import React, { Suspense, lazy, memo, useMemo, useCallback, ErrorInfo } from 'react'
import { useNavigate } from 'react-router'
import {
  Package,
  Settings,
  Upload,
  FileText,
  Database,
  Users,
  Eye,
  Gauge,
  PaintBucket,
  Percent,
  Waves,
  Boxes,
  Loader2,
  AlertCircle,
} from 'lucide-react'

// UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../components/ui/card'
import { Button } from '../components/ui/button'
import { Tabs, TabsContent, TabsList, TabsTrigger } from '../components/ui/tabs'
import { Separator } from '../components/ui/separator'
import SupabaseStatus from '../components/SupabaseStatus'

// –•—É–∫–∏ –∏ —É—Ç–∏–ª–∏—Ç—ã
import { useAuthContext } from '../contexts/AuthContext'

// ===========================
// üé® –õ–ï–ù–ò–í–ê–Ø –ó–ê–ì–†–£–ó–ö–ê –ö–û–ú–ü–û–ù–ï–ù–¢–û–í
// ===========================

// –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
const PriceListGenerator = lazy(() => import('../components/PriceListGenerator'))

// –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
const FileUpload = lazy(() => import('../components/FileUpload'))
const MaterialsManager = lazy(() => import('../components/MaterialsManager'))
const ProductManager = lazy(() => import('../components/ProductManager'))
const CollectionsManager = lazy(() => import('../components/CollectionsManager'))
const ProductTypesManager = lazy(() => import('../components/ProductTypesManager'))
const UserManagement = lazy(() => import('../components/UserManagement'))
const TechCardHistory = lazy(() => import('../components/TechCardHistory'))

// –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
const PaintRecipesManager = lazy(() => import('../components/PaintRecipesManager'))
const MarkupRulesManager = lazy(() => import('../components/MarkupRulesManager'))
const SinksManager = lazy(() => import('../components/SinksManager'))
const SetsManager = lazy(() => import('../components/SetsManager'))

// ===========================
// üéØ –¢–ò–ü–´ –ò –ò–ù–¢–ï–†–§–ï–ô–°–´
// ===========================

type DashboardTab =
  | 'overview'
  | 'generator'
  | 'labels'
  | 'upload'
  | 'materials'
  | 'products'
  | 'collections'
  | 'types'
  | 'paint'
  | 'markup'
  | 'sinks'
  | 'sets'
  | 'history'
  | 'users'

interface TabDefinition {
  readonly key: DashboardTab
  readonly label: string
  readonly icon: React.ReactNode
  readonly description: string
  readonly adminOnly: boolean
  readonly component: React.ComponentType
}

interface DashboardStats {
  readonly materials: number
  readonly products: number
  readonly collections: number
  readonly priceLists: number
}

// ===========================
// üîß –°–õ–£–ñ–ï–ë–ù–´–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´
// ===========================

const ComponentLoader: React.FC = memo(() => (
  <div className="flex items-center justify-center p-8">
    <Loader2 className="w-6 h-6 animate-spin text-blue-600" />
    <span className="ml-2 text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞...</span>
  </div>
))

ComponentLoader.displayName = 'ComponentLoader'

class DashboardErrorBoundary extends React.Component<
  { children: React.ReactNode; fallback?: React.ComponentType<{ error: Error }> },
  { hasError: boolean; error?: Error }
> {
  constructor(props: {
    children: React.ReactNode
    fallback?: React.ComponentType<{ error: Error }>
  }) {
    super(props)
    this.state = { hasError: false }
  }

  static getDerivedStateFromError(error: Error) {
    return { hasError: true, error }
  }

  componentDidCatch(error: Error, errorInfo: ErrorInfo) {
    console.error('üö® Dashboard Error Boundary:', error, errorInfo)
  }

  render() {
    if (this.state.hasError) {
      const FallbackComponent = this.props.fallback || DefaultErrorFallback
      return <FallbackComponent error={this.state.error!} />
    }

    return this.props.children
  }
}

const DefaultErrorFallback: React.FC<{ error: Error }> = ({ error }) => (
  <Card className="border-red-200 bg-red-50">
    <CardHeader>
      <CardTitle className="flex items-center gap-2 text-red-600">
        <AlertCircle className="w-5 h-5" />
        –û—à–∏–±–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –¥–∞—à–±–æ—Ä–¥–∞
      </CardTitle>
    </CardHeader>
    <CardContent>
      <p className="text-gray-600 mb-4">
        –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.
      </p>
      <details className="text-sm text-gray-500">
        <summary>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</summary>
        <pre className="mt-2 p-2 bg-gray-100 rounded text-xs overflow-auto">{error.message}</pre>
      </details>
      <Button onClick={() => window.location.reload()} variant="outline" size="sm" className="mt-4">
        –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
      </Button>
    </CardContent>
  </Card>
)

const AccessDenied: React.FC = memo(() => (
  <Card className="border-yellow-200 bg-yellow-50">
    <CardHeader>
      <CardTitle className="text-yellow-600">–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞</CardTitle>
    </CardHeader>
    <CardContent>
      <p className="text-gray-600">
        –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
      </p>
    </CardContent>
  </Card>
))

AccessDenied.displayName = 'AccessDenied'

// ===========================
// üéÆ –û–ë–ó–û–†–ù–´–ô –ö–û–ú–ü–û–ù–ï–ù–¢
// ===========================

const DashboardOverview: React.FC = memo(() => {
  // –ú–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –±—É–¥–µ—Ç –∏–∑ API
  const stats: DashboardStats = useMemo(
    () => ({
      materials: 1248,
      products: 342,
      collections: 28,
      priceLists: 156,
    }),
    [],
  )

  return (
    <div className="space-y-6">
      <div>
        <h2 className="text-2xl font-bold tracking-tight text-gray-900">–û–±–∑–æ—Ä —Å–∏—Å—Ç–µ–º—ã WASSER</h2>
        <p className="text-gray-600">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–æ–º –∏ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏</p>
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-4">
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">–ú–∞—Ç–µ—Ä–∏–∞–ª—ã</CardTitle>
            <Database className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{stats.materials}</div>
            <p className="text-xs text-muted-foreground">–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π</p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">–¢–æ–≤–∞—Ä—ã</CardTitle>
            <Package className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{stats.products}</div>
            <p className="text-xs text-muted-foreground">–≤ –∫–∞—Ç–∞–ª–æ–≥–µ</p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">–ö–æ–ª–ª–µ–∫—Ü–∏–∏</CardTitle>
            <Boxes className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{stats.collections}</div>
            <p className="text-xs text-muted-foreground">–º–µ–±–µ–ª—å–Ω—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π</p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">–ü—Ä–∞–π—Å-–ª–∏—Å—Ç—ã</CardTitle>
            <FileText className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{stats.priceLists}</div>
            <p className="text-xs text-muted-foreground">—Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ</p>
          </CardContent>
        </Card>
      </div>

      {/* –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è */}
      <Card>
        <CardHeader>
          <CardTitle>–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã</CardTitle>
        </CardHeader>
        <CardContent>
          <SupabaseStatus />
        </CardContent>
      </Card>

      {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
      <Card>
        <CardHeader>
          <CardTitle>–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</CardTitle>
          <CardDescription>–ß–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏</CardDescription>
        </CardHeader>
        <CardContent className="grid gap-4 md:grid-cols-2">
          <Button variant="outline" className="justify-start">
            <FileText className="mr-2 h-4 w-4" />
            –°–æ–∑–¥–∞—Ç—å –ø—Ä–∞–π—Å-–ª–∏—Å—Ç
          </Button>
          <Button variant="outline" className="justify-start">
            <Upload className="mr-2 h-4 w-4" />
            –ò–º–ø–æ—Ä—Ç –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
          </Button>
          <Button variant="outline" className="justify-start">
            <Package className="mr-2 h-4 w-4" />
            –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä
          </Button>
          <Button variant="outline" className="justify-start">
            <Settings className="mr-2 h-4 w-4" />
            –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã
          </Button>
        </CardContent>
      </Card>
    </div>
  )
})

DashboardOverview.displayName = 'DashboardOverview'

// ===========================
// üîê –ü–†–û–í–ï–†–ö–ê –†–ê–ó–†–ï–®–ï–ù–ò–ô
// ===========================

const useUserPermissions = () => {
  const { user } = useAuthContext()

  const isAdmin = useMemo(() => {
    if (!user?.email) return false

    const adminEmails = [
      process.env.VITE_ADMIN_EMAIL_1,
      process.env.VITE_ADMIN_EMAIL_2,
      process.env.VITE_ADMIN_EMAIL_3,
    ].filter(Boolean)

    return adminEmails.includes(user.email)
  }, [user?.email])

  return { isAdmin, user }
}

// ===========================
// üìã –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –í–ö–õ–ê–î–û–ö
// ===========================

const createTabDefinitions = (isAdmin: boolean): readonly TabDefinition[] =>
  [
    {
      key: 'overview',
      label: '–û–±–∑–æ—Ä',
      icon: <Gauge className="w-4 h-4" />,
      description: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –±—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è',
      adminOnly: false,
      component: DashboardOverview,
    },
    {
      key: 'generator',
      label: '–ü—Ä–∞–π—Å-–ª–∏—Å—Ç—ã',
      icon: <FileText className="w-4 h-4" />,
      description: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–≤',
      adminOnly: false,
      component: PriceListGenerator,
    },
    {
      key: 'upload',
      label: '–ò–º–ø–æ—Ä—Ç',
      icon: <Upload className="w-4 h-4" />,
      description: '–ó–∞–≥—Ä—É–∑–∫–∞ Excel —Ñ–∞–π–ª–æ–≤',
      adminOnly: true,
      component: FileUpload,
    },
    {
      key: 'materials',
      label: '–ú–∞—Ç–µ—Ä–∏–∞–ª—ã',
      icon: <Database className="w-4 h-4" />,
      description: '–ë–∞–∑–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ —Ü–µ–Ω—ã',
      adminOnly: false,
      component: MaterialsManager,
    },
    {
      key: 'products',
      label: '–¢–æ–≤–∞—Ä—ã',
      icon: <Package className="w-4 h-4" />,
      description: '–ö–∞—Ç–∞–ª–æ–≥ –∏–∑–¥–µ–ª–∏–π',
      adminOnly: false,
      component: ProductManager,
    },
    {
      key: 'collections',
      label: '–ö–æ–ª–ª–µ–∫—Ü–∏–∏',
      icon: <Boxes className="w-4 h-4" />,
      description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏—è–º–∏',
      adminOnly: true,
      component: CollectionsManager,
    },
    {
      key: 'types',
      label: '–¢–∏–ø—ã —Ç–æ–≤–∞—Ä–æ–≤',
      icon: <Settings className="w-4 h-4" />,
      description: '–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∏–∑–¥–µ–ª–∏–π',
      adminOnly: true,
      component: ProductTypesManager,
    },
    {
      key: 'paint',
      label: '–û–∫—Ä–∞—Å–∫–∞',
      icon: <PaintBucket className="w-4 h-4" />,
      description: '–†–µ—Ü–µ–ø—Ç—ã –ø–æ–∫—Ä–∞—Å–∫–∏',
      adminOnly: true,
      component: PaintRecipesManager,
    },
    {
      key: 'markup',
      label: '–ù–∞—Ü–µ–Ω–∫–∏',
      icon: <Percent className="w-4 h-4" />,
      description: '–ü—Ä–∞–≤–∏–ª–∞ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è',
      adminOnly: true,
      component: MarkupRulesManager,
    },
    {
      key: 'sinks',
      label: '–ú–æ–π–∫–∏',
      icon: <Waves className="w-4 h-4" />,
      description: '–ö–∞—Ç–∞–ª–æ–≥ –º–æ–µ–∫',
      adminOnly: true,
      component: SinksManager,
    },
    {
      key: 'sets',
      label: '–ö–æ–º–ø–ª–µ–∫—Ç—ã',
      icon: <Package className="w-4 h-4" />,
      description: '–ù–∞–±–æ—Ä—ã –∏–∑–¥–µ–ª–∏–π',
      adminOnly: true,
      component: SetsManager,
    },
    {
      key: 'history',
      label: '–ò—Å—Ç–æ—Ä–∏—è',
      icon: <Eye className="w-4 h-4" />,
      description: '–¢–µ—Ö–∫–∞—Ä—Ç—ã –∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è',
      adminOnly: true,
      component: TechCardHistory,
    },
    {
      key: 'users',
      label: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
      icon: <Users className="w-4 h-4" />,
      description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–æ–º',
      adminOnly: true,
      component: UserManagement,
    },
  ].filter((tab) => !tab.adminOnly || isAdmin)

// ===========================
// üèóÔ∏è –ì–õ–ê–í–ù–´–ô –ö–û–ú–ü–û–ù–ï–ù–¢ –î–ê–®–ë–û–†–î–ê
// ===========================

const Dashboard: React.FC = () => {
  const navigate = useNavigate()
  const { isAdmin, user } = useUserPermissions()
  const [activeTab, setActiveTab] = React.useState<DashboardTab>('overview')

  // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–∫–ª–∞–¥–æ–∫ —Å —É—á–µ—Ç–æ–º –ø—Ä–∞–≤
  const tabDefinitions = useMemo(() => createTabDefinitions(isAdmin), [isAdmin])

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫
  const handleTabChange = useCallback((value: string) => {
    setActiveTab(value as DashboardTab)
  }, [])

  // –ü–æ–∏—Å–∫ –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
  const activeTabConfig = useMemo(
    () => tabDefinitions.find((tab) => tab.key === activeTab) || tabDefinitions[0],
    [tabDefinitions, activeTab],
  )

  // –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  React.useEffect(() => {
    if (!user) {
      navigate('/')
      return
    }
  }, [user, navigate])

  if (!user) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <ComponentLoader />
      </div>
    )
  }

  return (
    <DashboardErrorBoundary>
      <div className="min-h-screen bg-gray-50">
        <div className="container mx-auto p-6">
          {/* –®–∞–ø–∫–∞ */}
          <div className="mb-8">
            <div className="flex items-center justify-between">
              <div>
                <h1 className="text-3xl font-bold text-gray-900">WASSER Dashboard</h1>
                <p className="text-gray-600">
                  –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.email}
                  {isAdmin && (
                    <span className="ml-2 inline-flex items-center rounded-full bg-blue-100 px-2.5 py-0.5 text-xs font-medium text-blue-800">
                      –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
                    </span>
                  )}
                </p>
              </div>
              <Button variant="outline" onClick={() => navigate('/')}>
                –ù–∞ –≥–ª–∞–≤–Ω—É—é
              </Button>
            </div>
            <Separator className="mt-4" />
          </div>

          {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –∏ –∫–æ–Ω—Ç–µ–Ω—Ç */}
          <Tabs value={activeTab} onValueChange={handleTabChange}>
            <TabsList className="grid w-full grid-cols-4 lg:grid-cols-6 xl:grid-cols-8 mb-8">
              {tabDefinitions.map((tab) => (
                <TabsTrigger
                  key={tab.key}
                  value={tab.key}
                  className="flex items-center gap-2 text-xs"
                >
                  {tab.icon}
                  <span className="hidden sm:inline">{tab.label}</span>
                </TabsTrigger>
              ))}
            </TabsList>

            {tabDefinitions.map((tab) => (
              <TabsContent key={tab.key} value={tab.key} className="mt-0">
                <Suspense fallback={<ComponentLoader />}>
                  <DashboardErrorBoundary>
                    <tab.component />
                  </DashboardErrorBoundary>
                </Suspense>
              </TabsContent>
            ))}
          </Tabs>
        </div>
      </div>
    </DashboardErrorBoundary>
  )
}

Dashboard.displayName = 'Dashboard'

export default memo(Dashboard)

