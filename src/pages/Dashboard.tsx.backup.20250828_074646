/**
 * @file pages/Dashboard.tsx
 * @description –†–µ—Ñ–∞–∫—Ç–æ—Ä–µ–Ω–Ω—ã–π –¥–∞—à–±–æ—Ä–¥ WASSER —Å –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π
 * 
 * –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
 * - –ß–∏—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞
 * - –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
 * - –¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–∞—è –º–æ–¥—É–ª—å–Ω–æ—Å—Ç—å
 * - –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
 */

import React, { Suspense, lazy, memo } from 'react'
import { useNavigate } from 'react-router'
import {
  Package,
  Settings,
  Upload,
  FileText,
  Database,
  Users,
  Eye,
  Gauge,
  PaintBucket,
  Percent,
  Waves,
  Boxes,
  Loader2
} from 'lucide-react'

// Context –∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã
import { DashboardProvider, useDashboard } from '../context/dashboard/DashboardContext'

// –ú–æ–¥—É–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
import { DashboardHeader } from '../components/Dashboard/DashboardHeader'
import { DashboardTabs } from '../components/Dashboard/DashboardTabs'
import { DashboardContent } from '../components/Dashboard/DashboardContent'

// UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../components/ui/card'
import SupabaseStatus from '../components/SupabaseStatus'

// –¢–∏–ø—ã
import { TabDefinition } from '../types/dashboard/types'

// ===========================
// üé® –õ–ï–ù–ò–í–ê–Ø –ó–ê–ì–†–£–ó–ö–ê –ö–û–ú–ü–û–ù–ï–ù–¢–û–í
// ===========================

// –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
const PriceListGenerator = lazy(() => import('../components/PriceListGenerator'))

// –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã  
const FileUpload = lazy(() => import('../components/FileUpload'))
const MaterialsManager = lazy(() => import('../components/MaterialsManager'))
const ProductManager = lazy(() => import('../components/ProductManager'))
const CollectionsManager = lazy(() => import('../components/CollectionsManager'))
const ProductTypesManager = lazy(() => import('../components/ProductTypesManager'))
const UserManagement = lazy(() => import('../components/UserManagement'))
const TechCardHistory = lazy(() => import('../components/TechCardHistory'))

// –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
const PaintRecipesManager = lazy(() => import('../components/PaintRecipesManager'))
const MarkupRulesManager = lazy(() => import('../components/MarkupRulesManager'))
const SinksManager = lazy(() => import('../components/SinksManager'))
const SetsManager = lazy(() => import('../components/SetsManager'))

// ===========================
// üéØ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –í–ö–õ–ê–î–û–ö
// ===========================

/** –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –æ–±–∑–æ—Ä–∞ —Å –º–µ–º–æ–∏–∑–∞—Ü–∏–µ–π */
const OverviewContent: React.FC = memo(() => {
  const { state } = useDashboard()
  
  return (
    <div className="space-y-6">
      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
        <Card>
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium text-gray-600">–ú–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –≤ –±–∞–∑–µ</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-blue-600">
              {state.stats.materials.toLocaleString()}
            </div>
            <p className="text-xs text-gray-500 mt-1">–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π</p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium text-gray-600">–ò–∑–¥–µ–ª–∏–π</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-green-600">
              {state.stats.products.toLocaleString()}
            </div>
            <p className="text-xs text-gray-500 mt-1">–í –∫–∞—Ç–∞–ª–æ–≥–µ</p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium text-gray-600">–ö–æ–ª–ª–µ–∫—Ü–∏–π</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-purple-600">
              {state.stats.collections}
            </div>
            <p className="text-xs text-gray-500 mt-1">–ê–∫—Ç–∏–≤–Ω—ã—Ö</p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="pb-2">
            <CardTitle className="text-sm font-medium text-gray-600">–ü—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–≤</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-orange-600">
              {state.stats.priceLists.toLocaleString()}
            </div>
            <p className="text-xs text-gray-500 mt-1">–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ</p>
          </CardContent>
        </Card>
      </div>

      {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
      <Card>
        <CardHeader>
          <CardTitle>üöÄ –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</CardTitle>
          <CardDescription>–ù–∞–∏–±–æ–ª–µ–µ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div className="p-4 border rounded-lg hover:bg-gray-50 cursor-pointer">
              <FileText className="w-6 h-6 text-blue-600 mb-2" />
              <h3 className="font-medium">–°–æ–∑–¥–∞—Ç—å –ø—Ä–∞–π—Å-–ª–∏—Å—Ç</h3>
              <p className="text-sm text-gray-600">–ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞</p>
            </div>
            <div className="p-4 border rounded-lg hover:bg-gray-50 cursor-pointer">
              <Package className="w-6 h-6 text-green-600 mb-2" />
              <h3 className="font-medium">–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç</h3>
              <p className="text-sm text-gray-600">–ù–æ–≤–æ–µ –∏–∑–¥–µ–ª–∏–µ –≤ –∫–∞—Ç–∞–ª–æ–≥</p>
            </div>
            <div className="p-4 border rounded-lg hover:bg-gray-50 cursor-pointer">
              <Database className="w-6 h-6 text-purple-600 mb-2" />
              <h3 className="font-medium">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏</h3>
              <p className="text-sm text-gray-600">–ë–∞–∑–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ —Ü–µ–Ω—ã</p>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  )
})

OverviewContent.displayName = 'OverviewContent'

/** –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ */
const ComponentLoader: React.FC = memo(() => (
  <div className="flex items-center justify-center p-8">
    <Loader2 className="w-6 h-6 animate-spin text-blue-600" />
    <span className="ml-2 text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞...</span>
  </div>
))

ComponentLoader.displayName = 'ComponentLoader'

/** –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤—Å–µ—Ö –≤–∫–ª–∞–¥–æ–∫ */
const TAB_DEFINITIONS: readonly TabDefinition[] = [
  // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –≤–∫–ª–∞–¥–∫–∏
  {
    key: 'overview',
    label: '–û–±–∑–æ—Ä',
    icon: <Gauge className="w-4 h-4" />,
    description: '–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –±—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è',
    adminOnly: false,
    component: OverviewContent
  },
  {
    key: 'generator',
    label: '–ü—Ä–∞–π—Å-–ª–∏—Å—Ç',
    icon: <FileText className="w-4 h-4" />,
    description: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–≤ –≤ PDF',
    adminOnly: false,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <PriceListGenerator />
      </Suspense>
    ))
  },
  {
    key: 'labels',
    label: '–≠—Ç–∏–∫–µ—Ç–∫–∏',
    icon: <Package className="w-4 h-4" />,
    description: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —ç—Ç–∏–∫–µ—Ç–æ–∫ –¥–ª—è –ø—Ä–æ–¥—É–∫—Ü–∏–∏',
    adminOnly: false,
    component: memo(() => (
      <div className="p-8 text-center text-gray-600">
        –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —ç—Ç–∏–∫–µ—Ç–æ–∫ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)
      </div>
    ))
  },

  // –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏
  {
    key: 'upload',
    label: '–ó–∞–≥—Ä—É–∑–∫–∞',
    icon: <Upload className="w-4 h-4" />,
    description: '–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ Excel —Ñ–∞–π–ª–æ–≤',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <FileUpload />
      </Suspense>
    ))
  },
  {
    key: 'materials',
    label: '–ú–∞—Ç–µ—Ä–∏–∞–ª—ã',
    icon: <Database className="w-4 h-4" />,
    description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–π –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <MaterialsManager />
      </Suspense>
    ))
  },
  {
    key: 'products',
    label: '–ü—Ä–æ–¥—É–∫—Ü–∏—è',
    icon: <Package className="w-4 h-4" />,
    description: '–ö–∞—Ç–∞–ª–æ–≥ –∏–∑–¥–µ–ª–∏–π –∏ —Ç–µ—Ö–∫–∞—Ä—Ç—ã',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <ProductManager />
      </Suspense>
    ))
  },
  {
    key: 'collections',
    label: '–ö–æ–ª–ª–µ–∫—Ü–∏–∏',
    icon: <Settings className="w-4 h-4" />,
    description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏—è–º–∏ –º–µ–±–µ–ª–∏',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <CollectionsManager />
      </Suspense>
    ))
  },
  {
    key: 'types',
    label: '–¢–∏–ø—ã',
    icon: <Settings className="w-4 h-4" />,
    description: '–¢–∏–ø—ã –∏ –≤–∏–¥—ã –ø—Ä–æ–¥—É–∫—Ü–∏–∏',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <ProductTypesManager />
      </Suspense>
    ))
  },

  // –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏
  {
    key: 'paint',
    label: '–û–∫—Ä–∞—Å–∫–∞',
    icon: <PaintBucket className="w-4 h-4" />,
    description: '–†–µ—Ü–µ–ø—Ç—ã –æ–∫—Ä–∞—Å–∫–∏ –∏ –ø–æ–∫—Ä—ã—Ç–∏–π',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <PaintRecipesManager />
      </Suspense>
    ))
  },
  {
    key: 'markup',
    label: '–ù–∞—Ü–µ–Ω–∫–∞',
    icon: <Percent className="w-4 h-4" />,
    description: '–ü—Ä–∞–≤–∏–ª–∞ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <MarkupRulesManager />
      </Suspense>
    ))
  },
  {
    key: 'sinks',
    label: '–†–∞–∫–æ–≤–∏–Ω—ã',
    icon: <Waves className="w-4 h-4" />,
    description: '–ö–∞—Ç–∞–ª–æ–≥ —Ä–∞–∫–æ–≤–∏–Ω –∏ —Å–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∏',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <SinksManager />
      </Suspense>
    ))
  },
  {
    key: 'sets',
    label: '–ö–æ–º–ø–ª–µ–∫—Ç—ã',
    icon: <Boxes className="w-4 h-4" />,
    description: '–ù–∞–±–æ—Ä—ã –∏ –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <SetsManager />
      </Suspense>
    ))
  },

  // –°–∏—Å—Ç–µ–º–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏
  {
    key: 'history',
    label: '–ò—Å—Ç–æ—Ä–∏—è',
    icon: <Eye className="w-4 h-4" />,
    description: '–ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å–∏—Å—Ç–µ–º—ã',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <TechCardHistory />
      </Suspense>
    ))
  },
  {
    key: 'users',
    label: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
    icon: <Users className="w-4 h-4" />,
    description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ —Ä–æ–ª—è–º–∏',
    adminOnly: true,
    component: memo(() => (
      <Suspense fallback={<ComponentLoader />}>
        <UserManagement />
      </Suspense>
    ))
  }
] as const

// ===========================
// üé® –í–ù–£–¢–†–ï–ù–ù–ò–ô –ö–û–ú–ü–û–ù–ï–ù–¢ –î–ê–®–ë–û–†–î–ê  
// ===========================

const DashboardInner: React.FC = memo(() => {
  const { state } = useDashboard()

  // –≠–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏
  if (state.loading) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-50">
        <div className="text-center">
          <Loader2 className="w-8 h-8 animate-spin text-blue-600 mx-auto mb-4" />
          <div className="text-lg text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è...</div>
          <div className="text-sm text-gray-400 mt-2">WASSER –ú–µ–±–µ–ª—å–Ω–∞—è –§–∞–±—Ä–∏–∫–∞</div>
        </div>
      </div>
    )
  }

  // –≠–∫—Ä–∞–Ω –æ—à–∏–±–∫–∏
  if (state.error) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-50">
        <Card className="w-full max-w-md">
          <CardHeader>
            <CardTitle className="text-red-600">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</CardTitle>
          </CardHeader>
          <CardContent>
            <p className="text-gray-600 mb-4">{state.error}</p>
            <button 
              onClick={() => window.location.reload()}
              className="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700"
            >
              –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
            </button>
          </CardContent>
        </Card>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* –®–∞–ø–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è */}
      <DashboardHeader />

      <main className="container mx-auto px-4 pb-10">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–∞–Ω–µ–ª–∏ */}
        <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4 my-6">
          <div>
            <h1 className="text-3xl font-bold text-gray-900">–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</h1>
            <p className="text-gray-600">
              –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏, –ø—Ä–æ–¥—É–∫—Ü–∏–µ–π –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–≤
            </p>
          </div>
        </div>

        {/* –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è */}
        <div className="mb-4">
          <SupabaseStatus compact />
        </div>

        {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –≤–∫–ª–∞–¥–∫–∞–º */}
        <DashboardTabs tabDefinitions={TAB_DEFINITIONS} />

        {/* –ö–æ–Ω—Ç–µ–Ω—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏ */}
        <DashboardContent tabDefinitions={TAB_DEFINITIONS} />
      </main>
    </div>
  )
})

DashboardInner.displayName = 'DashboardInner'

// ===========================
// üéØ –û–°–ù–û–í–ù–û–ô –ö–û–ú–ü–û–ù–ï–ù–¢ –° –ü–†–û–í–ê–ô–î–ï–†–û–ú
// ===========================

/**
 * Dashboard - –ì–ª–∞–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è WASSER
 * 
 * –†–µ—Ñ–∞–∫—Ç–æ—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π:
 * - –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
 * - –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å –º–µ–º–æ–∏–∑–∞—Ü–∏–µ–π  
 * - –õ–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª–µ–π
 * - –¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞
 * - –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
 */
const Dashboard: React.FC = memo(() => {
  return (
    <DashboardProvider>
      <DashboardInner />
    </DashboardProvider>
  )
})

Dashboard.displayName = 'Dashboard'

export default Dashboard
