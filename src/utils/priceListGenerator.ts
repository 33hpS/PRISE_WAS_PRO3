/**
 * @file utils/priceListGenerator.ts
 * @description –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è PDF –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–≤ –¥–ª—è –º–µ–±–µ–ª—å–Ω–æ–π —Ñ–∞–±—Ä–∏–∫–∏
 */

import jsPDF from 'jspdf'
import type { PriceListItem } from '../types'
import { formatPrice } from './furniture'

// ===========================
// üéØ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ü–†–ê–ô–°-–õ–ò–°–¢–ê
// ===========================

interface PriceListConfig {
  readonly title: string
  readonly subtitle?: string
  readonly includeImages: boolean
  readonly includeMaterials: boolean
  readonly groupByCollection: boolean
  readonly sortBy: 'article' | 'name' | 'price' | 'collection'
  readonly format: 'A4' | 'A3' | 'Letter'
}

// ===========================
// üßÆ –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–ê–Ø –ì–ï–ù–ï–†–ê–¶–ò–Ø PDF
// ===========================

/**
 * –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞
 * –°–ª–µ–¥—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ –±–µ–∑ –ø–æ–±–æ—á–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –¥–æ —Å–∞–º–æ–≥–æ –∫–æ–Ω—Ü–∞
 */
export const generatePriceList = async (
  items: readonly PriceListItem[],
  config: PriceListConfig = {
    title: '–ü—Ä–∞–π—Å-–ª–∏—Å—Ç WASSER',
    subtitle: '–ú–µ–±–µ–ª—å–Ω–∞—è —Ñ–∞–±—Ä–∏–∫–∞',
    includeImages: false,
    includeMaterials: true,
    groupByCollection: true,
    sortBy: 'name',
    format: 'A4'
  }
): Promise<void> => {
  // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö (—á–∏—Å—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏)
  const sortedItems = sortItems(items, config.sortBy)
  const groupedItems = config.groupByCollection 
    ? groupItemsByCollection(sortedItems)
    : { '–í—Å–µ –ø–æ–∑–∏—Ü–∏–∏': sortedItems }
  
  const statistics = calculateStatistics(sortedItems)
  
  // –°–æ–∑–¥–∞–Ω–∏–µ PDF –¥–æ–∫—É–º–µ–Ω—Ç–∞
  const doc = new jsPDF({
    format: config.format.toLowerCase() as 'a4' | 'a3' | 'letter'
  })

  let yPosition = 20

  // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞
  yPosition = renderHeader(doc, yPosition, config, statistics)
  
  // –ö–æ–Ω—Ç–µ–Ω—Ç –ø–æ –∫–æ–ª–ª–µ–∫—Ü–∏—è–º
  for (const [collectionName, collectionItems] of Object.entries(groupedItems)) {
    yPosition = renderCollection(
      doc, 
      yPosition, 
      collectionName, 
      collectionItems, 
      config
    )
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    if (yPosition > 250) {
      doc.addPage()
      yPosition = 20
    }
  }

  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ –∫–æ–Ω—Ü–µ
  renderFooterStatistics(doc, statistics)
  
  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
  const filename = `wasser-price-list-${new Date().toISOString().split('T')[0]}.pdf`
  doc.save(filename)
}

// ===========================
// üîß –ß–ò–°–¢–´–ï –§–£–ù–ö–¶–ò–ò-–ü–û–ú–û–©–ù–ò–ö–ò
// ===========================

/**
 * –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞
 */
const sortItems = (
  items: readonly PriceListItem[],
  sortBy: PriceListConfig['sortBy']
): readonly PriceListItem[] => {
  return [...items].sort((a, b) => {
    switch (sortBy) {
      case 'article':
        return a.article.localeCompare(b.article)
      case 'name':
        return a.name.localeCompare(b.name, 'ru')
      case 'price':
        return b.finalPrice - a.finalPrice
      case 'collection':
        return a.collection.localeCompare(b.collection, 'ru')
      default:
        return 0
    }
  })
}

/**
 * –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –∫–æ–ª–ª–µ–∫—Ü–∏—è–º
 */
const groupItemsByCollection = (
  items: readonly PriceListItem[]
): Record<string, readonly PriceListItem[]> => {
  return items.reduce((groups, item) => {
    const collection = item.collection || '–ë–µ–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏'
    return {
      ...groups,
      [collection]: [...(groups[collection] || []), item]
    }
  }, {} as Record<string, readonly PriceListItem[]>)
}

/**
 * –†–∞—Å—á–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞
 */
const calculateStatistics = (items: readonly PriceListItem[]) => {
  const totalItems = items.length
  const totalValue = items.reduce((sum, item) => sum + item.finalPrice, 0)
  const avgPrice = totalItems > 0 ? totalValue / totalItems : 0
  const collections = new Set(items.map(item => item.collection)).size
  const avgMargin = totalItems > 0 
    ? items.reduce((sum, item) => sum + item.profitMargin, 0) / totalItems 
    : 0

  return {
    totalItems,
    totalValue,
    avgPrice,
    collections,
    avgMargin,
    generatedAt: new Date()
  } as const
}

/**
 * –†–µ–Ω–¥–µ—Ä –∑–∞–≥–æ–ª–æ–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
 */
const renderHeader = (
  doc: jsPDF, 
  yPosition: number, 
  config: PriceListConfig,
  statistics: ReturnType<typeof calculateStatistics>
): number => {
  // –õ–æ–≥–æ—Ç–∏–ø –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫
  doc.setFontSize(24)
  doc.text(config.title, 20, yPosition)
  yPosition += 12

  if (config.subtitle) {
    doc.setFontSize(16)
    doc.text(config.subtitle, 20, yPosition)
    yPosition += 10
  }

  // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
  doc.setFontSize(10)
  doc.text(`–î–∞—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: ${new Date().toLocaleDateString('ru-RU')}`, 20, yPosition)
  yPosition += 5
  doc.text(`–í—Å–µ–≥–æ –ø–æ–∑–∏—Ü–∏–π: ${statistics.totalItems}`, 20, yPosition)
  yPosition += 5
  doc.text(`–ö–æ–ª–ª–µ–∫—Ü–∏–π: ${statistics.collections}`, 20, yPosition)
  yPosition += 5
  doc.text(`–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞: ${formatPrice(statistics.avgPrice)}`, 20, yPosition)
  yPosition += 15

  return yPosition
}

/**
 * –†–µ–Ω–¥–µ—Ä –∫–æ–ª–ª–µ–∫—Ü–∏–∏
 */
const renderCollection = (
  doc: jsPDF,
  yPosition: number,
  collectionName: string,
  items: readonly PriceListItem[],
  config: PriceListConfig
): number => {
  // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
  if (config.groupByCollection && collectionName !== '–í—Å–µ –ø–æ–∑–∏—Ü–∏–∏') {
    doc.setFontSize(14)
    doc.text(collectionName, 20, yPosition)
    yPosition += 8
  }

  // –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
  doc.setFontSize(10)
  doc.text('–ê—Ä—Ç–∏–∫—É–ª', 20, yPosition)
  doc.text('–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ', 60, yPosition)
  doc.text('–¶–µ–Ω–∞', 150, yPosition)
  
  if (config.includeMaterials) {
    doc.text('–ú–∞—Ç–µ—Ä–∏–∞–ª—ã', 180, yPosition)
  }
  
  yPosition += 3

  // –õ–∏–Ω–∏—è –ø–æ–¥ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
  doc.line(20, yPosition, 200, yPosition)
  yPosition += 5

  // –≠–ª–µ–º–µ–Ω—Ç—ã –∫–æ–ª–ª–µ–∫—Ü–∏–∏
  for (const item of items) {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    if (yPosition > 270) {
      doc.addPage()
      yPosition = 20
    }

    doc.setFontSize(9)
    doc.text(item.article, 20, yPosition)
    
    // –û–±—Ä–µ–∑–∫–∞ –¥–ª–∏–Ω–Ω—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π
    const maxNameLength = 40
    const displayName = item.name.length > maxNameLength 
      ? item.name.substring(0, maxNameLength) + '...'
      : item.name
    doc.text(displayName, 60, yPosition)
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞
    doc.text(formatPrice(item.finalPrice), 150, yPosition)

    // –ú–∞—Ç–µ—Ä–∏–∞–ª—ã (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω—ã)
    if (config.includeMaterials && item.materials.length > 0) {
      const materialsText = item.materials
        .slice(0, 2)
        .map(m => m.name)
        .join(', ')
      doc.text(materialsText, 180, yPosition, { maxWidth: 15 })
    }

    yPosition += 6
  }

  return yPosition + 8
}

/**
 * –†–µ–Ω–¥–µ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ –∫–æ–Ω—Ü–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
 */
const renderFooterStatistics = (
  doc: jsPDF,
  statistics: ReturnType<typeof calculateStatistics>
): void => {
  doc.addPage()
  let yPosition = 20
  
  doc.setFontSize(16)
  doc.text('–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 20, yPosition)
  yPosition += 15

  doc.setFontSize(12)
  doc.text(`–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∑–∏—Ü–∏–π: ${statistics.totalItems}`, 20, yPosition)
  yPosition += 8
  doc.text(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–ª–ª–µ–∫—Ü–∏–π: ${statistics.collections}`, 20, yPosition)
  yPosition += 8
  doc.text(`–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${formatPrice(statistics.totalValue)}`, 20, yPosition)
  yPosition += 8
  doc.text(`–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞: ${formatPrice(statistics.avgPrice)}`, 20, yPosition)
  yPosition += 8
  doc.text(`–°—Ä–µ–¥–Ω—è—è –º–∞—Ä–∂–∞: ${statistics.avgMargin.toFixed(1)}%`, 20, yPosition)
}
