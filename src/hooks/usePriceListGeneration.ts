/**
 * @file hooks/usePriceListGeneration.ts
 * @description –•—É–∫ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–≤ –≤ PDF —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º –ø–æ–¥—Ö–æ–¥–æ–º
 */

import { useState, useCallback, useMemo } from 'react'
import type { PriceListItem, PriceListConfig, PDFGenerationResult } from '../types'

interface UsePriceListGenerationProps {
  readonly items: readonly PriceListItem[]
  readonly config: PriceListConfig
}

/**
 * –•—É–∫ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–≤
 */
export const usePriceListGeneration = ({
  items,
  config
}: UsePriceListGenerationProps) => {
  const [isGenerating, setIsGenerating] = useState(false)
  const [lastResult, setLastResult] = useState<PDFGenerationResult | null>(null)

  // ===========================
  // üéØ –ú–ï–ú–û–ò–ó–ò–†–û–í–ê–ù–ù–ê–Ø –ü–û–î–ì–û–¢–û–í–ö–ê –î–ê–ù–ù–´–•
  // ===========================

  /** –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */
  const sortedItems = useMemo(() => {
    const sorted = [...items].sort((a, b) => {
      switch (config.sortBy) {
        case 'article':
          return a.article.localeCompare(b.article)
        case 'name':
          return a.name.localeCompare(b.name)
        case 'price':
          return b.finalPrice - a.finalPrice
        case 'collection':
          return a.collection.localeCompare(b.collection)
        default:
          return 0
      }
    })
    
    return sorted
  }, [items, config.sortBy])

  /** –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –∫–æ–ª–ª–µ–∫—Ü–∏—è–º */
  const groupedItems = useMemo(() => {
    if (!config.groupByCollection) {
      return { '–í—Å–µ –ø–æ–∑–∏—Ü–∏–∏': sortedItems }
    }

    return sortedItems.reduce((groups, item) => {
      const collection = item.collection || '–ë–µ–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏'
      if (!groups[collection]) {
        groups[collection] = []
      }
      groups[collection].push(item)
      return groups
    }, {} as Record<string, PriceListItem[]>)
  }, [sortedItems, config.groupByCollection])

  /** –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞ */
  const statistics = useMemo(() => {
    const totalItems = sortedItems.length
    const totalValue = sortedItems.reduce((sum, item) => sum + item.finalPrice, 0)
    const avgPrice = totalItems > 0 ? totalValue / totalItems : 0
    const collections = new Set(sortedItems.map(item => item.collection)).size

    return {
      totalItems,
      totalValue,
      avgPrice,
      collections,
      generatedAt: new Date().toISOString()
    }
  }, [sortedItems])

  // ===========================
  // üîß –ì–ï–ù–ï–†–ê–¶–ò–Ø PDF
  // ===========================

  /** –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è PDF –¥–æ–∫—É–º–µ–Ω—Ç–∞ */
  const generatePDF = useCallback(async (): Promise<PDFGenerationResult> => {
    const startTime = performance.now()
    setIsGenerating(true)

    try {
      // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç jsPDF –¥–ª—è –∫–æ–¥-—Å–ø–ª–∏—Ç—Ç–∏–Ω–≥–∞
      const { jsPDF } = await import('jspdf')
      const doc = new jsPDF({
        format: config.format.toLowerCase() as 'a4' | 'a3' | 'letter'
      })

      let yPosition = 20

      // ===========================
      // üìã –ó–ê–ì–û–õ–û–í–û–ö –î–û–ö–£–ú–ï–ù–¢–ê
      // ===========================
      doc.setFontSize(20)
      doc.text(config.title, 20, yPosition)
      yPosition += 10

      if (config.subtitle) {
        doc.setFontSize(14)
        doc.text(config.subtitle, 20, yPosition)
        yPosition += 10
      }

      // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
      doc.setFontSize(10)
      doc.text(`–î–∞—Ç–∞: ${new Date().toLocaleDateString('ru-RU')}`, 20, yPosition)
      yPosition += 5
      doc.text(`–í—Å–µ–≥–æ –ø–æ–∑–∏—Ü–∏–π: ${statistics.totalItems}`, 20, yPosition)
      yPosition += 5
      doc.text(`–ö–æ–ª–ª–µ–∫—Ü–∏–π: ${statistics.collections}`, 20, yPosition)
      yPosition += 15

      // ===========================
      // üìä –ö–û–ù–¢–ï–ù–¢ –ü–†–ê–ô–°-–õ–ò–°–¢–ê
      // ===========================
      
      for (const [collectionName, collectionItems] of Object.entries(groupedItems)) {
        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
        if (config.groupByCollection) {
          doc.setFontSize(16)
          doc.text(collectionName, 20, yPosition)
          yPosition += 10
        }

        // –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
        doc.setFontSize(10)
        doc.text('–ê—Ä—Ç–∏–∫—É–ª', 20, yPosition)
        doc.text('–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ', 60, yPosition)
        doc.text('–¶–µ–Ω–∞', 150, yPosition)
        
        if (config.includeMaterials) {
          doc.text('–ú–∞—Ç–µ—Ä–∏–∞–ª—ã', 180, yPosition)
        }
        
        yPosition += 5

        // –õ–∏–Ω–∏—è –ø–æ–¥ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
        doc.line(20, yPosition, 200, yPosition)
        yPosition += 5

        // –≠–ª–µ–º–µ–Ω—Ç—ã –∫–æ–ª–ª–µ–∫—Ü–∏–∏
        for (const item of collectionItems) {
          // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
          if (yPosition > 270) {
            doc.addPage()
            yPosition = 20
          }

          doc.setFontSize(9)
          doc.text(item.article, 20, yPosition)
          
          // –û–±—Ä–µ–∑–∫–∞ –¥–ª–∏–Ω–Ω—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π
          const maxNameLength = 35
          const displayName = item.name.length > maxNameLength 
            ? item.name.substring(0, maxNameLength) + '...'
            : item.name
          doc.text(displayName, 60, yPosition)
          
          // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞
          const formattedPrice = `${item.finalPrice.toLocaleString('ru-RU')} ‚ÇΩ`
          doc.text(formattedPrice, 150, yPosition)

          // –ú–∞—Ç–µ—Ä–∏–∞–ª—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
          if (config.includeMaterials && item.materials.length > 0) {
            const materialsText = item.materials
              .slice(0, 2) // –¢–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 2 –º–∞—Ç–µ—Ä–∏–∞–ª–∞
              .map(m => m.name)
              .join(', ')
            doc.text(materialsText, 180, yPosition, { maxWidth: 15 })
          }

          yPosition += 7
        }

        yPosition += 10 // –û—Ç—Å—Ç—É–ø –º–µ–∂–¥—É –∫–æ–ª–ª–µ–∫—Ü–∏—è–º–∏
      }

      // ===========================
      // üìà –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê
      // ===========================
      
      doc.addPage()
      yPosition = 20
      
      doc.setFontSize(16)
      doc.text('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞', 20, yPosition)
      yPosition += 15

      doc.setFontSize(12)
      doc.text(`–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∑–∏—Ü–∏–π: ${statistics.totalItems}`, 20, yPosition)
      yPosition += 8
      doc.text(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–ª–ª–µ–∫—Ü–∏–π: ${statistics.collections}`, 20, yPosition)
      yPosition += 8
      doc.text(`–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${statistics.totalValue.toLocaleString('ru-RU')} ‚ÇΩ`, 20, yPosition)
      yPosition += 8
      doc.text(`–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞: ${statistics.avgPrice.toLocaleString('ru-RU')} ‚ÇΩ`, 20, yPosition)

      // ===========================
      // üíæ –°–û–•–†–ê–ù–ï–ù–ò–ï –ò –†–ï–ó–£–õ–¨–¢–ê–¢
      // ===========================

      const filename = `wasser-price-list-${new Date().toISOString().split('T')[0]}.pdf`
      doc.save(filename)

      const endTime = performance.now()
      const generationTime = endTime - startTime

      // –ü—Ä–∏–º–µ—Ä–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ (–≤ KB)
      const estimatedSize = Math.round((statistics.totalItems * 0.5 + 50))

      const result: PDFGenerationResult = {
        success: true,
        filename,
        itemsCount: statistics.totalItems,
        fileSize: estimatedSize,
        generationTime,
      }

      setLastResult(result)
      return result

    } catch (error) {
      const errorResult: PDFGenerationResult = {
        success: false,
        filename: '',
        itemsCount: 0,
        fileSize: 0,
        generationTime: 0,
        error: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
      }

      setLastResult(errorResult)
      return errorResult

    } finally {
      setIsGenerating(false)
    }
  }, [config, groupedItems, statistics])

  /** –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö */
  const previewData = useMemo(() => {
    return {
      config,
      statistics,
      firstItems: sortedItems.slice(0, 5), // –ü–µ—Ä–≤—ã–µ 5 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–µ–≤—å—é
      collections: Object.keys(groupedItems)
    }
  }, [config, statistics, sortedItems, groupedItems])

  return {
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ
    isGenerating,
    lastResult,
    
    // –î–∞–Ω–Ω—ã–µ
    sortedItems,
    groupedItems,
    statistics,
    previewData,
    
    // –î–µ–π—Å—Ç–≤–∏—è
    generatePDF
  }
}
